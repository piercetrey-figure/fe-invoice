// source: invoice_protos.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var util_protos_pb = require('./util_protos_pb.js');
goog.object.extend(proto, util_protos_pb);
goog.exportSymbol('proto.invoice.Invoice', null, global);
goog.exportSymbol('proto.invoice.LineItem', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invoice.Invoice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.invoice.Invoice.repeatedFields_, null);
};
goog.inherits(proto.invoice.Invoice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invoice.Invoice.displayName = 'proto.invoice.Invoice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invoice.LineItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invoice.LineItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invoice.LineItem.displayName = 'proto.invoice.LineItem';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.invoice.Invoice.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invoice.Invoice.prototype.toObject = function(opt_includeInstance) {
  return proto.invoice.Invoice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invoice.Invoice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invoice.Invoice.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceUuid: (f = msg.getInvoiceUuid()) && util_protos_pb.UUID.toObject(includeInstance, f),
    fromAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    toAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    invoiceCreatedDate: (f = msg.getInvoiceCreatedDate()) && util_protos_pb.Date.toObject(includeInstance, f),
    invoiceDueDate: (f = msg.getInvoiceDueDate()) && util_protos_pb.Date.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    paymentDenom: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lineItemsList: jspb.Message.toObjectList(msg.getLineItemsList(),
    proto.invoice.LineItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invoice.Invoice}
 */
proto.invoice.Invoice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invoice.Invoice;
  return proto.invoice.Invoice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invoice.Invoice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invoice.Invoice}
 */
proto.invoice.Invoice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new util_protos_pb.UUID;
      reader.readMessage(value,util_protos_pb.UUID.deserializeBinaryFromReader);
      msg.setInvoiceUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToAddress(value);
      break;
    case 4:
      var value = new util_protos_pb.Date;
      reader.readMessage(value,util_protos_pb.Date.deserializeBinaryFromReader);
      msg.setInvoiceCreatedDate(value);
      break;
    case 5:
      var value = new util_protos_pb.Date;
      reader.readMessage(value,util_protos_pb.Date.deserializeBinaryFromReader);
      msg.setInvoiceDueDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentDenom(value);
      break;
    case 8:
      var value = new proto.invoice.LineItem;
      reader.readMessage(value,proto.invoice.LineItem.deserializeBinaryFromReader);
      msg.addLineItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invoice.Invoice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invoice.Invoice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invoice.Invoice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invoice.Invoice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoiceUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      util_protos_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getFromAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getToAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInvoiceCreatedDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      util_protos_pb.Date.serializeBinaryToWriter
    );
  }
  f = message.getInvoiceDueDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      util_protos_pb.Date.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPaymentDenom();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLineItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.invoice.LineItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional UUID invoice_uuid = 1;
 * @return {?proto.invoice.UUID}
 */
proto.invoice.Invoice.prototype.getInvoiceUuid = function() {
  return /** @type{?proto.invoice.UUID} */ (
    jspb.Message.getWrapperField(this, util_protos_pb.UUID, 1));
};


/**
 * @param {?proto.invoice.UUID|undefined} value
 * @return {!proto.invoice.Invoice} returns this
*/
proto.invoice.Invoice.prototype.setInvoiceUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invoice.Invoice} returns this
 */
proto.invoice.Invoice.prototype.clearInvoiceUuid = function() {
  return this.setInvoiceUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invoice.Invoice.prototype.hasInvoiceUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string from_address = 2;
 * @return {string}
 */
proto.invoice.Invoice.prototype.getFromAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.invoice.Invoice} returns this
 */
proto.invoice.Invoice.prototype.setFromAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string to_address = 3;
 * @return {string}
 */
proto.invoice.Invoice.prototype.getToAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.invoice.Invoice} returns this
 */
proto.invoice.Invoice.prototype.setToAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Date invoice_created_date = 4;
 * @return {?proto.invoice.Date}
 */
proto.invoice.Invoice.prototype.getInvoiceCreatedDate = function() {
  return /** @type{?proto.invoice.Date} */ (
    jspb.Message.getWrapperField(this, util_protos_pb.Date, 4));
};


/**
 * @param {?proto.invoice.Date|undefined} value
 * @return {!proto.invoice.Invoice} returns this
*/
proto.invoice.Invoice.prototype.setInvoiceCreatedDate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invoice.Invoice} returns this
 */
proto.invoice.Invoice.prototype.clearInvoiceCreatedDate = function() {
  return this.setInvoiceCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invoice.Invoice.prototype.hasInvoiceCreatedDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Date invoice_due_date = 5;
 * @return {?proto.invoice.Date}
 */
proto.invoice.Invoice.prototype.getInvoiceDueDate = function() {
  return /** @type{?proto.invoice.Date} */ (
    jspb.Message.getWrapperField(this, util_protos_pb.Date, 5));
};


/**
 * @param {?proto.invoice.Date|undefined} value
 * @return {!proto.invoice.Invoice} returns this
*/
proto.invoice.Invoice.prototype.setInvoiceDueDate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invoice.Invoice} returns this
 */
proto.invoice.Invoice.prototype.clearInvoiceDueDate = function() {
  return this.setInvoiceDueDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invoice.Invoice.prototype.hasInvoiceDueDate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.invoice.Invoice.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.invoice.Invoice} returns this
 */
proto.invoice.Invoice.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string payment_denom = 7;
 * @return {string}
 */
proto.invoice.Invoice.prototype.getPaymentDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.invoice.Invoice} returns this
 */
proto.invoice.Invoice.prototype.setPaymentDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated LineItem line_items = 8;
 * @return {!Array<!proto.invoice.LineItem>}
 */
proto.invoice.Invoice.prototype.getLineItemsList = function() {
  return /** @type{!Array<!proto.invoice.LineItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.invoice.LineItem, 8));
};


/**
 * @param {!Array<!proto.invoice.LineItem>} value
 * @return {!proto.invoice.Invoice} returns this
*/
proto.invoice.Invoice.prototype.setLineItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.invoice.LineItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.invoice.LineItem}
 */
proto.invoice.Invoice.prototype.addLineItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.invoice.LineItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.invoice.Invoice} returns this
 */
proto.invoice.Invoice.prototype.clearLineItemsList = function() {
  return this.setLineItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invoice.LineItem.prototype.toObject = function(opt_includeInstance) {
  return proto.invoice.LineItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invoice.LineItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invoice.LineItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    lineUuid: (f = msg.getLineUuid()) && util_protos_pb.UUID.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    price: (f = msg.getPrice()) && util_protos_pb.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invoice.LineItem}
 */
proto.invoice.LineItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invoice.LineItem;
  return proto.invoice.LineItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invoice.LineItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invoice.LineItem}
 */
proto.invoice.LineItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new util_protos_pb.UUID;
      reader.readMessage(value,util_protos_pb.UUID.deserializeBinaryFromReader);
      msg.setLineUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 5:
      var value = new util_protos_pb.Decimal;
      reader.readMessage(value,util_protos_pb.Decimal.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invoice.LineItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invoice.LineItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invoice.LineItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invoice.LineItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLineUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      util_protos_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      util_protos_pb.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional UUID line_uuid = 1;
 * @return {?proto.invoice.UUID}
 */
proto.invoice.LineItem.prototype.getLineUuid = function() {
  return /** @type{?proto.invoice.UUID} */ (
    jspb.Message.getWrapperField(this, util_protos_pb.UUID, 1));
};


/**
 * @param {?proto.invoice.UUID|undefined} value
 * @return {!proto.invoice.LineItem} returns this
*/
proto.invoice.LineItem.prototype.setLineUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invoice.LineItem} returns this
 */
proto.invoice.LineItem.prototype.clearLineUuid = function() {
  return this.setLineUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invoice.LineItem.prototype.hasLineUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.invoice.LineItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.invoice.LineItem} returns this
 */
proto.invoice.LineItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.invoice.LineItem.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.invoice.LineItem} returns this
 */
proto.invoice.LineItem.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 quantity = 4;
 * @return {number}
 */
proto.invoice.LineItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.invoice.LineItem} returns this
 */
proto.invoice.LineItem.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Decimal price = 5;
 * @return {?proto.invoice.Decimal}
 */
proto.invoice.LineItem.prototype.getPrice = function() {
  return /** @type{?proto.invoice.Decimal} */ (
    jspb.Message.getWrapperField(this, util_protos_pb.Decimal, 5));
};


/**
 * @param {?proto.invoice.Decimal|undefined} value
 * @return {!proto.invoice.LineItem} returns this
*/
proto.invoice.LineItem.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invoice.LineItem} returns this
 */
proto.invoice.LineItem.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invoice.LineItem.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.invoice);
