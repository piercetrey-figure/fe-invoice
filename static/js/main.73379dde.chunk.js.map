{"version":3,"sources":["Components/Button/Button.js","Components/Popup/Popup.js","consts/network.ts","consts/colors.ts","Components/Input/Input.js","Components/Loading/Loading.js","Components/Dropdown/Dropdown.js","Components/Actions/ActionContainer.js","Components/Actions/Action.js","Components/Actions/Connect.js","Components/Actions/Disconnect.js","Components/Headers/index.tsx","util/ConversionUtil.ts","Components/AddressLink/AddressLink.js","Components/Tabs/Tabs.tsx","Components/Display/index.tsx","App.js","version.js","index.js"],"names":["StyledButton","styled","button","width","color","disabled","ButtonContent","div","Button","className","onClick","children","title","type","loading","handleClick","toUpperCase","onKeyPress","e","key","defaultProps","PopupContainer","SlideInAnimation","keyframes","SlideOutAnimation","PopupContent","status","isClosing","CloseIcon","Content","Popup","onClose","delay","useState","setIsClosing","useEffect","delayCloseTimeout","setTimeout","clearTimeout","toLowerCase","NETWORK","process","PRIMARY_BACKGROUND","TEXT","TEXT_ACCENT","LIGHT","DARKEN","DARK","WARN","InputContainer","StyledInput","input","Colors","Label","label","Input","value","onChange","placeholder","target","Svg","svg","Loading","height","xmlns","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","repeatCount","dur","values","keyTimes","Container","Group","SelectContainer","StyledSelect","select","DropdownIcon","Dropdown","options","name","initialValue","htmlFor","map","index","isLoading","justify","noMargin","ActionContainer","method","setPopup","fields","buttonTxt","windowMessage","useWalletConnect","walletConnectService","walletConnectState","WINDOW_MESSAGES","windowMessageLookup","windowMsgComplete","windowMsgFailed","initialInputValues","forEach","inputValues","setInputValues","addListener","result","console","log","error","removeAllListeners","newInputValues","changeInputValue","Object","keys","length","Info","Connect","CONNECTED","connect","Disconnect","DISCONNECT","disconnect","Header","h1","h2","ConversionUtil","balanceResponse","nhash","balancesList","find","coin","denom","amount","this","convertNanoHashToHash","nanoHash","Text","active","p","AddressLink","address","href","rel","Wrapper","HomeContainer","App","popupContent","setPopupContent","popupStatus","setPopupStatus","popupDuration","setPopupDuration","setHashAmount","listenersAdded","setListenersAdded","wcs","connected","peer","message","duration","grpcService","useWallet","getBalancesList","then","balances","hashAmount","getHashBalance","WINDOW_MESSAGE","CUSTOM_ACTION_COMPLETE","CUSTOM_ACTION_FAILED","QRCodeModal","ReactDOM","render","network","grpcServiceAddress","walletUrl","document","getElementById"],"mappings":"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","file":"static/js/main.73379dde.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Loading } from 'Components';\n\nconst StyledButton = styled.button`\n  flex-basis: ${({ width }) => width };\n  ${({ width }) => width === 'auto' && 'min-width: 150px' };\n  align-items: center;\n  background: ${({ color }) => color };\n  white-space: nowrap;\n  border-radius: 6px;\n  border: 1px solid ${({ color }) => color };\n  text-shadow: 0 1px 0px rgba(0, 0, 0, 0.5), 0 -1px 0px rgba(0, 0, 0, 0.5), 1px 0 0px rgba(0, 0, 0, 0.5), -1px 0 0px rgba(0, 0, 0, 0.5);\n  color: white;\n  cursor: ${({ disabled }) => disabled ? 'not-allowed' : 'pointer' };\n  display: flex;\n  justify-content: center;\n  letter-spacing: 0.07rem;\n  transition: 250ms all;\n  user-select: none;\n  font-size: 1.2rem;\n  height: 40px;\n  padding: 0 30px;\n  &:hover:not(:disabled) {\n    filter: contrast(200%);\n  }\n  &:active:not(:disabled) {\n    filter: contrast(90%);\n  }\n  &:disabled {\n    filter: grayscale(80%);\n  }\n`;\nconst ButtonContent = styled.div``;\n\nconst Button = ({ className, color, onClick, children, disabled, width, title, type, loading }) => {\n  const handleClick = () => {\n    if (!disabled) {\n      onClick();\n    }\n  }\n\n  return (\n    <StyledButton\n      title={title}\n      className={className}\n      onClick={handleClick}\n      color={color.toUpperCase()}\n      onKeyPress={(e) => {\n        if (e.key === 'Enter') {\n          handleClick();\n        }\n      }}\n      disabled={disabled || loading}\n      width={width}\n      type={type}\n    >\n      <ButtonContent>{loading ? <Loading /> : children}</ButtonContent>\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  width: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n};\nButton.defaultProps = {\n  className: '',\n  color: '#42368E',\n  onClick: () => {},\n  disabled: false,\n  width: 'auto',\n  title: '',\n  type: 'button',\n  loading: false,\n};\n\nexport default Button;","import { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst PopupContainer = styled.div`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  top: 0;\n  left: 0;\n  justify-content: center;\n  z-index: 100;\n`;\nconst SlideInAnimation = keyframes`\n  from { transform: translate(0, -100%); }\n  to { transform: translate(0, 0); }\n`;\nconst SlideOutAnimation = keyframes`\n  from { transform: translate(0, 0); }\n  to { transform: translate(0, -100%); }\n`;\n\nconst PopupContent = styled.div`\n  padding: 20px;\n  width: 100%;\n  background: ${({ status }) => {\n    if (status === 'error' || status === 'failure') return '#FFAAAA';\n    if (status === 'warning') return '#FFFFAA';\n    if (status === 'success') return '#AAFFAA';\n    return '#DDDDDD';\n  }};\n  box-shadow: '1px 1px 4px 1px rgba(0,0,0,0.10)';\n  border-radius: 0 0 3px 3px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  animation: 250ms linear ${({ isClosing }) => isClosing ? SlideOutAnimation : SlideInAnimation };\n  animation-fill-mode: both;\n  opacity: 0.95;\n`;\nconst CloseIcon = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  font-size: 3rem;\n  transform: rotate(45deg);\n  cursor: pointer;\n`;\nconst Content = styled.div`\n  font-size: 1.4rem;\n  font-weight: 700;\n`;\n\nconst Popup = ({ className, children, onClose, status, delay }) => {\n  const [isClosing, setIsClosing] = useState(false);\n  \n  useEffect(() => {\n    let delayCloseTimeout = '';\n    // Popup has just opened/been shown\n    if (!isClosing) {\n      // After delay, show slide up animation, then close self\n      delayCloseTimeout = setTimeout(() => { setIsClosing(true); }, delay);\n    } else {\n      // Popup is already closing, wait 1s to give time for the animation to finish\n      setTimeout(() => { onClose() }, 1000);\n    }\n    return () => {\n      // Make sure to clear the timeout if this closes before it runs\n      if (delayCloseTimeout) { clearTimeout(delayCloseTimeout); }\n    }\n  }, [isClosing, onClose, delay]);\n\n  return (\n    <PopupContainer className={className}>\n      <PopupContent status={status.toLowerCase()} isClosing={isClosing}>\n        <CloseIcon onClick={() => setIsClosing(true)}>+</CloseIcon>\n        <Content>{children}</Content>\n      </PopupContent>\n    </PopupContainer>\n  );\n};\n\nPopup.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n  status: PropTypes.string,\n  delay: PropTypes.number,\n};\nPopup.defaultProps = {\n  className: '',\n  children: null,\n  onClose: () => {},\n  status: 'warning',\n  delay: 2000,\n};\n\nexport default Popup;\n","export const NETWORK = process.env.REACT_APP_NETWORK\nexport const PRODUCTION = NETWORK == 'mainnet'\nexport const EXPLORER_URL = PRODUCTION ? 'https://explorer.provenance.io' : 'https://explorer.test.provenance.io'\nexport const GRPC_URL = PRODUCTION ? 'https://wallet.provenance.io/proxy' : 'https://wallet.test.provenance.io/proxy'\n// export const GRPC_URL = 'http://localhost:8080'\nexport const WALLET_URL = PRODUCTION ? 'https://wallet.provenance.io' : 'https://wallet.test.provenance.io'\nexport const ROOT_NAME = 'wallettest3.pb'\nexport const FEE_DENOM = 'nhash'\n","export const PRIMARY_BACKGROUND = '#F6F5F4'\nexport const TEXT = '#000'\nexport const TEXT_ACCENT = '#5184A4'\nexport const LIGHT = '#FFF'\nexport const DARKEN = '#EDEBE9'\nexport const DARK = '#655C53'\nexport const WARN = '#E53B10'","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Colors } from \"consts\";\n\nconst InputContainer = styled.div`\n  position: relative;\n  flex-basis: ${({ width }) => width};\n  display: flex;\n`;\nconst StyledInput = styled.input`\n  padding: 4px 10px;\n  height: 30px;\n  width: 100%;\n  box-sizing: content-box;\n  border-radius: 0;\n  margin-right: 4px;\n  margin-bottom: 10px;\n  border: 1px solid ${Colors.DARK};\n`;\nconst Label = styled.label`\n  font-size: 1rem;\n  font-weight: 700;\n  position: absolute;\n  top: -16px;\n  left: 0;\n`;\n\nconst Input = ({\n  className,\n  label,\n  value,\n  onChange,\n  placeholder,\n  width,\n  disabled,\n}) => (\n  <InputContainer width={width} className={className}>\n    {label && <Label>{label}</Label>}\n    <StyledInput\n      value={value}\n      placeholder={placeholder}\n      onChange={({ target }) => onChange(target.value)}\n      disabled={disabled}\n    />\n  </InputContainer>\n);\n\nInput.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n};\nInput.defaultProps = {\n  className: \"\",\n  width: \"100%\",\n  label: \"\",\n  value: \"\",\n  onChange: () => {},\n  placeholder: \"Enter Value\",\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Svg = styled.svg`\n  margin: auto;\n  display: block;\n`;\n\nconst Loading = ({ className, color, height, width }) => (\n  <Svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 100 100\"\n    preserveAspectRatio=\"xMidYMid\"\n    className={className}\n    height={height}\n    width={width}\n  >\n    <circle\n      cx=\"50\"\n      cy=\"50\"\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"10\"\n      r=\"35\"\n      strokeDasharray=\"164.93361431346415 56.97787143782138\"\n    >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n        />\n    </circle>\n</Svg>\n);\n\nLoading.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n};\nLoading.defaultProps = {\n  className: '',\n  color: '#eeeeee',\n  height: '20px',\n  width: '20px',\n};\n\nexport default Loading;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Colors } from \"consts\";\n\nconst Container = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nconst Group = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: flex-start;\n  flex-basis: 100%;\n`;\nconst SelectContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\nconst StyledSelect = styled.select`\n  width: 100%;\n  padding: 14px 18px;\n  border-radius: 4px;\n  margin: 0;\n  border: 1px solid ${Colors.DARK};\n  font-size: 1.4rem;\n  flex-grow: ${({ type }) => (type === \"radio\" ? \"initial\" : \"1\")};\n  font-weight: bold;\n  background: ${Colors.LIGHT};\n  cursor: pointer;\n  color: ${Colors.DARK};\n  &:focus,\n  &:focus-visible,\n  &:active {\n    outline-color: ${Colors.DARK};\n  }\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n`;\nconst DropdownIcon = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 18px;\n  color: ${Colors.TEXT};\n  pointer-events: none;\n  cursor: pointer;\n  font-size: 1.8rem;\n  text-align: middle;\n  font-weight: bold;\n`;\nconst Label = styled.label`\n  margin-bottom: 16px;\n  font-weight: bold;\n  font-size: 1.8rem;\n  display: inline-block;\n  color: #333333;\n`;\n\nconst Dropdown = ({\n  className,\n  label,\n  options,\n  name,\n  value: initialValue,\n  onChange,\n}) => {\n  const renderOptions = () =>\n    options.map((title, index) => (\n      <option key={title} value={title} disabled={index === 0}>\n        {title}\n      </option>\n    ));\n\n  return (\n    <Container className={className}>\n      {label && <Label htmlFor={name}>{label}</Label>}\n      <Group>\n        <SelectContainer>\n          <StyledSelect\n            value={initialValue || options[0]}\n            onChange={({ target }) => onChange(target.value)}\n          >\n            {renderOptions()}\n          </StyledSelect>\n          <DropdownIcon>^</DropdownIcon>\n        </SelectContainer>\n      </Group>\n    </Container>\n  );\n};\n\nDropdown.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.node,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nDropdown.defaultProps = {\n  className: \"\",\n  label: \"\",\n  value: null,\n};\n\nexport default Dropdown;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  padding: 20px;\n  border: 2px solid ${({ color }) => color };\n  background: ${({ color, isLoading }) => isLoading ? '#CCCCCC' : `${color}50` };\n  border-radius: 5px;\n  display: flex;\n  max-width: 100%;\n  align-items: center;\n  justify-content: ${({ justify }) => justify };\n  ${({ noMargin }) => !noMargin && 'margin-bottom: 30px;' }\n  box-shadow: 1px 1px 3px 1px ${({ color }) => color };\n`;\n\nexport const ActionContainer = ({ children, color, justify, loading, noMargin }) => (\n  <Container color={color} justify={justify} isLoading={loading} noMargin={noMargin}>{children}</Container>\n);\n\nActionContainer.propTypes = {\n  color: PropTypes.string,\n  children: PropTypes.node,\n  justify: PropTypes.string,\n  loading: PropTypes.bool,\n  noMargin: PropTypes.bool,\n};\nActionContainer.defaultProps = {\n  color: '#42368E',\n  children: null,\n  justify: 'center',\n  loading: false,\n  noMargin: false,\n};\n","import { useState, useEffect } from \"react\";\nimport {\n  WINDOW_MESSAGES,\n  useWalletConnect,\n} from \"@provenanceio/walletconnect-js\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input } from \"Components\";\nimport { ActionContainer } from \"./ActionContainer\";\n\nconst windowMessageLookup = (windowMessage) => [\n  `${WINDOW_MESSAGES[`${windowMessage}_COMPLETE`]}`,\n  `${WINDOW_MESSAGES[`${windowMessage}_FAILED`]}`,\n];\n\nexport const Action = ({\n  method,\n  setPopup,\n  fields,\n  buttonTxt,\n  windowMessage,\n}) => {\n  const { walletConnectService, walletConnectState } = useWalletConnect();\n  // Get loading state for specific method\n  const loading = walletConnectState[`${method}Loading`];\n  // Get complete and failed messages\n  const [windowMsgComplete, windowMsgFailed] =\n    windowMessageLookup(windowMessage);\n  // Build state object from fields data (fields are an array of obj, see propTypes)\n  const initialInputValues = {};\n  fields.forEach(({ name, value }) => {\n    initialInputValues[name] = value;\n  });\n  const [inputValues, setInputValues] = useState(initialInputValues);\n  // Create all event listeners for this method\n  useEffect(() => {\n    // Delegate Hash Events\n    walletConnectService.addListener(windowMsgComplete, (result) => {\n      console.log(`WalletConnectJS | ${method} Complete | Result: `, result); // eslint-disable-line no-console\n      setPopup(\n        `${method} Complete! See console for result details`,\n        \"success\",\n        5000\n      );\n    });\n    walletConnectService.addListener(windowMsgFailed, (result) => {\n      const { error } = result;\n      console.log(`WalletConnectJS | ${method} Failed | Result: `, result); // eslint-disable-line no-console\n      setPopup(\n        `${method} Failed! ${error} | See console for more details`,\n        \"failure\",\n        5000\n      );\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(windowMsgComplete);\n      walletConnectService.removeAllListeners(windowMsgFailed);\n    };\n  }, [\n    walletConnectService,\n    setPopup,\n    windowMsgComplete,\n    windowMsgFailed,\n    method,\n  ]);\n\n  const changeInputValue = (name, value) => {\n    const newInputValues = { ...inputValues };\n    newInputValues[name] = value;\n    setInputValues(newInputValues);\n  };\n\n  const renderInputs = () =>\n    fields.map(({ name, width, label, placeholder }) => (\n      <Input\n        key={name}\n        width={width}\n        value={inputValues[name]}\n        label={label}\n        placeholder={placeholder}\n        onChange={(value) => changeInputValue(name, value)}\n      />\n    ));\n\n  // If we only have a single, send the value it without the key (as itself, non obj)\n  const getSendData = () =>\n    Object.keys(inputValues).length > 1\n      ? inputValues\n      : inputValues[Object.keys(inputValues)[0]];\n\n  return (\n    <ActionContainer loading={loading}>\n      {renderInputs()}\n      <Button\n        loading={loading}\n        onClick={() => walletConnectService[method](getSendData())}\n      >\n        {buttonTxt}\n      </Button>\n    </ActionContainer>\n  );\n};\n\nAction.propTypes = {\n  method: PropTypes.string.isRequired,\n  setPopup: PropTypes.func.isRequired,\n  fields: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      name: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      placeholder: PropTypes.string,\n      width: PropTypes.string,\n    })\n  ),\n  buttonTxt: PropTypes.string.isRequired,\n  windowMessage: PropTypes.string.isRequired,\n};\n\nAction.defaultProps = {\n  fields: [],\n};\n","import { useEffect } from 'react';\nimport { WINDOW_MESSAGES } from '@provenanceio/walletconnect-js';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button } from 'Components';\nimport { ActionContainer } from './ActionContainer';\n\nconst Info = styled.div`\n  font-size: 1.4rem;\n  margin-right: 40px;\n`;\nexport const Connect = ({ walletConnectService, setPopup }) => {\n  const color = '#498AFD';\n\n  useEffect(() => {\n    walletConnectService.addListener(WINDOW_MESSAGES.CONNECTED, (result) => {\n      console.log('WalletConnectJS | Connected | Result: ', result); // eslint-disable-line no-console\n      setPopup('Wallet Connected', 'success');\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(WINDOW_MESSAGES.CONNECTED);\n    }\n  }, [walletConnectService, setPopup]);\n\n  return (\n    <ActionContainer color={color} noMargin>\n      <Info>Connect Wallet</Info>\n      <Button width=\"20%\" color={color} onClick={walletConnectService.connect}>Connect</Button>\n    </ActionContainer>\n  );\n};\n\nConnect.propTypes = {\n  walletConnectService: PropTypes.shape({\n    connect: PropTypes.func,\n    addListener: PropTypes.func,\n    removeAllListeners: PropTypes.func,\n  }).isRequired,\n  setPopup: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { WINDOW_MESSAGES } from '@provenanceio/walletconnect-js';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button } from 'Components';\nimport { ActionContainer } from './ActionContainer';\n\nconst Info = styled.div`\n  font-size: 1.4rem;\n  margin-right: 40px;\n`;\nexport const Disconnect = ({ walletConnectService, setPopup }) => {\n  const color = '#FFAAAA';\n  \n  useEffect(() => {\n    walletConnectService.addListener(WINDOW_MESSAGES.DISCONNECT, (result) => {\n      console.log('WalletConnectJS | Disconnect | Result: ', result); // eslint-disable-line no-console\n      setPopup('Wallet Disconnected', 'failure');\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(WINDOW_MESSAGES.DISCONNECT);\n    }\n  }, [walletConnectService, setPopup]);\n\n  return (\n    <ActionContainer color={color} justify=\"space-between\">\n      <Info>Disconnect the connected wallet</Info>\n      <Button width=\"20%\" color={color} onClick={walletConnectService.disconnect}>Disconnect</Button>\n    </ActionContainer>\n  );\n};\n\nDisconnect.propTypes = {\n  walletConnectService: PropTypes.shape({\n    disconnect: PropTypes.func,\n    addListener: PropTypes.func,\n    removeAllListeners: PropTypes.func,\n  }).isRequired,\n  setPopup: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.h1`\n  font-size: 3rem;\n  line-height: 3rem;\n  font-weight: bold;\n  letter-spacing: 0.25rem;\n  margin-bottom: 40px;\n  transition: 6s all;\n`;\nexport const SubHeader = styled.h2`\n  font-size: 2rem;\n  line-height: 2rem;\n  font-weight: bold;\n`;","import { QueryAllBalancesResponse } from '@provenanceio/wallet-lib/lib/proto/cosmos/bank/v1beta1/query_pb';\n\nexport class ConversionUtil {\n    static getHashBalance(balanceResponse?: QueryAllBalancesResponse.AsObject): number | null {\n        if (!balanceResponse) {\n            return null;\n        }\n        let nhash = balanceResponse.balancesList.find(coin => coin.denom === \"nhash\");\n        if (!nhash?.amount) {\n            return null;\n        }\n        try {\n            return this.convertNanoHashToHash(+nhash.amount);\n        } catch (error) {\n            console.log(`Failed to convert derived nano amount [${nhash?.amount}] to hash: ${error}`);\n            return null;\n        }\n    }\n\n    static convertNanoHashToHash(nanoHash: number): number {\n        return nanoHash / 1000000000;\n    }\n}\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport {EXPLORER_URL} from \"consts\";\n\nconst Text = styled.p`\n  font-size: 1.6rem;\n  line-height: 3rem;\n  margin: 0;\n`;\n\nconst AddressLink = ({\n    className,\n    address,\n}) => {\n    return <Text className={className}>\n        Address:{\" \"}\n        <a\n            href={`${EXPLORER_URL}/accounts/${address}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n        >\n            {address}\n        </a>\n    </Text>;\n};\n\nAddressLink.propTypes = {\n    className: PropTypes.string,\n    address: PropTypes.string.isRequired,\n};\n\nAddressLink.defaultProps = {\n    className: \"\",\n};\n\nexport default AddressLink;\n","import styled from \"styled-components\";\nimport { Component, FunctionComponent, useState } from 'react';\nimport { Colors } from \"consts\";\n\nexport interface Tab {\n    title: string,\n    element: Component\n}\n\nexport interface TabContainerProps {\n    tabs: Tab[]\n}\n\nconst TabContainerWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n`\n\nconst TabHeaderWrapper = styled.div`\n\n`\n\ninterface TabHeaderProps {\n    active?: boolean\n}\n\nconst TabHeader = styled.button<TabHeaderProps>`\n    border: 1px solid ${Colors.DARK};\n    border-bottom: none;\n    display: inline-block;\n    padding: 4px;\n    background: ${({ active }) => active ? Colors.DARKEN : Colors.LIGHT};\n    cursor: pointer;\n    &:not(:last-child) {\n        border-right: none;\n    }\n    &:first-child {\n        border-top-left-radius: 5px;\n    }\n    &:last-child {\n        border-top-right-radius: 5px;\n    }\n    &:hover {\n        background: ${Colors.DARKEN};\n    }\n`\n\nconst TabWrapper = styled.div`\n    padding: 10px;\n    background-color: ${Colors.LIGHT};\n\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    border: 1px solid ${Colors.DARK};\n`\n\nexport const TabContainer: FunctionComponent<TabContainerProps> = ({ tabs }) => {\n    const [selected, setSelected] = useState(0)\n    return <TabContainerWrapper>\n        <TabHeaderWrapper>{tabs.map((tab, i) => <TabHeader active={selected === i} key={`tab-${i}`} onClick={() => setSelected(i)}>{tab.title}</TabHeader>)}</TabHeaderWrapper>\n        <TabWrapper>{tabs[selected].element}</TabWrapper>\n    </TabContainerWrapper>\n}\n","import styled from 'styled-components';\n\nexport const BigParagraph = styled.p`\n  font-size: 1.6rem;\n  line-height: 3rem;\n  margin: 0;\n`;\n","import { useState, useEffect } from \"react\";\nimport {\n  useWalletConnect,\n  QRCodeModal,\n  WINDOW_MESSAGES as WINDOW_MESSAGE,\n} from \"@provenanceio/walletconnect-js\";\nimport styled from \"styled-components\";\nimport { Connect, Disconnect, Popup } from \"Components\";\nimport { ROOT_NAME } from \"consts\";\nimport { REACT_APP_WCJS_VERSION } from \"./version\"; // eslint-disable-line\nimport { useWallet } from \"@provenanceio/wallet-lib\";\nimport { TEXT_ACCENT, PRIMARY_BACKGROUND, TEXT } from \"./consts/colors\";\nimport { Header, SubHeader } from \"Components/Headers\";\nimport { ConversionUtil } from \"./util/ConversionUtil\";\nimport { TabContainer } from \"Components/Tabs\";\nimport AddressLink from \"Components/AddressLink\";\nimport { BigParagraph } from \"Components/Display\";\n\nconst Wrapper = styled.div`\n  background: ${PRIMARY_BACKGROUND};\n\n  a {\n    color: ${TEXT_ACCENT};\n    &:hover {\n      color: ${TEXT};\n    }\n  }\n`;\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  /* justify-content: center; */\n  max-width: 100%;\n  min-height: 100vh;\n  position: relative;\n`;\nconst Content = styled.div`\n  min-width: 600px;\n  padding: 30px 50px;\n  border-radius: 4px;\n  margin-bottom: 40px;\n`;\n\nexport const App = () => {\n  const [popupContent, setPopupContent] = useState(\"\");\n  const [popupStatus, setPopupStatus] = useState(\"success\");\n  const [popupDuration, setPopupDuration] = useState(2500);\n  const [hashAmount, setHashAmount] = useState(null);\n  const [listenersAdded, setListenersAdded] = useState(false);\n\n  const { walletConnectService: wcs, walletConnectState } = useWalletConnect();\n  const { address, connected, peer } = walletConnectState;\n\n  const setPopup = (message, status, duration) => {\n    setPopupContent(message);\n    if (status) {\n      setPopupStatus(status);\n    }\n    if (duration) {\n      setPopupDuration(duration);\n    }\n  };\n\n  const { grpcService } = useWallet();\n\n  const fetchBalance = () => {\n    if (address) {\n      grpcService.getBalancesList(address).then((balances) => {\n        let hashAmount = ConversionUtil.getHashBalance(balances);\n        if (hashAmount) {\n          setHashAmount(hashAmount);\n        }\n      });\n    } else {\n      setHashAmount(null);\n    }\n  };\n  useEffect(() => {\n    fetchBalance();\n  }, [address]);\n\n  useEffect(() => {\n    if (!listenersAdded) {\n      console.log(\"Adding event listeners\");\n      setListenersAdded(true);\n      wcs.addListener(WINDOW_MESSAGE.CUSTOM_ACTION_COMPLETE, (result) => {\n        console.log(\n          `WalletConnectJS | Custom Action Complete | Result: `,\n          result\n        );\n      });\n\n      wcs.addListener(WINDOW_MESSAGE.CUSTOM_ACTION_FAILED, (result) => {\n        const { error } = result;\n        console.log(\n          `WalletConnectJS | Custom Action Failed | result, error: `,\n          result,\n          error\n        );\n      });\n    }\n  }, [listenersAdded]);\n\n  return (\n    <Wrapper>\n      <HomeContainer>\n        {popupContent && (\n          <Popup\n            delay={popupDuration}\n            onClose={() => setPopupContent(\"\")}\n            status={popupStatus}\n          >\n            {popupContent}\n          </Popup>\n        )}\n        <Header>InVoice</Header>\n        <Content>\n          {connected ? (\n            <>\n              <Disconnect walletConnectService={wcs} setPopup={setPopup} />\n            </>\n          ) : (\n            <Connect walletConnectService={wcs} setPopup={setPopup} />\n          )}\n        </Content>\n        <QRCodeModal\n          walletConnectService={wcs}\n          walletConnectState={walletConnectState}\n          title=\"Scan to initiate walletConnect-js session\"\n        />\n        <div>\n          WalletConnect-JS Version: {REACT_APP_WCJS_VERSION || \"??.??.??\"}\n        </div>\n      </HomeContainer>\n    </Wrapper>\n  );\n};\n","export const REACT_APP_WCJS_VERSION = \"0.1.43\"\n","import ReactDOM from \"react-dom\";\nimport { WalletConnectContextProvider } from \"@provenanceio/walletconnect-js\";\nimport { WalletContextProvider } from \"@provenanceio/wallet-lib\";\nimport { StrictMode } from \"react\";\nimport { App } from \"./App\";\n// Bring in Google Fonts and base styles\nimport \"./base.css\";\nimport { GRPC_URL, NETWORK, WALLET_URL } from \"./consts/network\";\n\nReactDOM.render(\n  <StrictMode>\n    <WalletConnectContextProvider network={NETWORK}>\n      <WalletContextProvider\n        grpcServiceAddress={GRPC_URL}\n        walletUrl={WALLET_URL}\n      >\n        <App />\n      </WalletContextProvider>\n    </WalletConnectContextProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}