{"version":3,"sources":["Components/Modal/Modal.tsx","proto/invoice_protos_pb.js","consts/date.ts","models/NameContract.ts","proto/util_protos_pb.js","util/ConversionUtil.ts","hooks/useInvoiceList.ts","util/currency.ts","util/encoding.ts","util/strings.ts","util/proto.ts","Services/WasmService.ts","Services/InvoiceContractService.ts","Components/MultiMessageStepModal/MultiMessageStepModal.tsx","Services/NameContractService.ts","consts/network.ts","Components/Headers/index.tsx","Components/Button/Button.js","Components/Popup/Popup.js","Components/Form/FormWrapper.tsx","Components/Form/FormRow.tsx","Components/Form/FormActions.tsx","Components/Form/InputError.tsx","Components/Input/Input.js","Components/Loading/Loading.js","Components/Dropdown/Dropdown.js","Components/Actions/ActionContainer.js","Components/Actions/Action.js","Components/Actions/Connect.js","Components/Actions/Disconnect.js","Components/AddressLink/AddressLink.js","Components/Tabs/Tabs.tsx","Components/Layout/Sidebar/SidebarLayout.tsx","Components/Display/index.tsx","Components/Search/Search.tsx","Components/Pages/List/ListInvoices.tsx","Components/Vendor/VendorSelector.tsx","hooks/useVendors.ts","Components/Error/ErrorBar.tsx","Components/Submitting/SubmittingOverlay.tsx","Components/Pages/Create/InvoiceLineItem.tsx","Components/Pages/Create/CreateInvoice.tsx","hooks/useCreateInvoice.ts","hooks/useGetDenoms.ts","Components/PaymentModal/PaymentModal.tsx","Components/QRModal/QRModal.tsx","Components/ShareButton/ShareButton.tsx","Components/Pages/Details/InvoiceDetails.tsx","hooks/useGetInvoice.ts","App.js","version.js","index.js","consts/colors.ts","models/InvoiceContract.ts","Services/index.ts","models/ContractBase.ts"],"names":["Wrapper","styled","div","Body","Colors","LIGHT","Close","button","Modal","children","requestClose","onClick","e","stopPropagation","jspb","require","goog","global","Function","util_protos_pb","object","extend","proto","exportSymbol","invoice","Invoice","opt_data","Message","initialize","this","repeatedFields_","inherits","DEBUG","COMPILED","displayName","LineItem","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","invoiceUuid","getInvoiceUuid","UUID","fromAddress","getFieldWithDefault","toAddress","invoiceCreatedDate","getInvoiceCreatedDate","Date","invoiceDueDate","getInvoiceDueDate","description","paymentDenom","lineItemsList","toObjectList","getLineItemsList","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readMessage","setInvoiceUuid","readString","setFromAddress","setToAddress","setInvoiceCreatedDate","setInvoiceDueDate","setDescription","setPaymentDenom","addLineItems","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","writeMessage","getFromAddress","length","writeString","getToAddress","getDescription","getPaymentDenom","writeRepeatedMessage","getWrapperField","setWrapperField","clearInvoiceUuid","hasInvoiceUuid","getField","setProto3StringField","clearInvoiceCreatedDate","hasInvoiceCreatedDate","clearInvoiceDueDate","hasInvoiceDueDate","getRepeatedWrapperField","setLineItemsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearLineItemsList","lineUuid","getLineUuid","name","quantity","price","getPrice","Decimal","setLineUuid","setName","readInt32","setQuantity","setPrice","getName","getQuantity","writeInt32","clearLineUuid","hasLineUuid","setProto3IntField","clearPrice","hasPrice","exports","INVOICE_DATE_FORMAT","DISPLAY_DATE_FORMAT","QueryNamesByAddress","address","query_names_by_address","QueryAddressByName","query_address_by_name","SearchNamesRequest","search","search_for_names","QuerySettings","query_request","RegisterName","register","ContractMsg","setValue","getValue","ConversionUtil","balanceResponse","nhash","balancesList","find","coin","denom","amount","convertNanoHashToHash","error","console","log","nanoHash","useInvoiceList","useWalletConnect","walletConnectState","useQuery","a","fetch","BASE_URL","json","map","Buffer","from","usdFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","currencyFormatter","format","urlSafeBase64ToBase64","replace","enumStringToHumanReadable","input","split","reduce","res","word","charAt","toUpperCase","substr","toLowerCase","newInvoice","newRandomUuid","newLineItem","uuidv4","newDate","date","DateProto","newDecimal","toString","decodeB64","b64","toInvoice","invoiceTotal","acc","item","lineItem","lineItemPrice","calculateTotal","invoices","WasmService","nameQueryClient","NameQueryClient","GRPC_URL","wasmQueryClient","WasmQueryClient","Promise","resolve","reject","QueryResolveRequest","Error","code","getAddress","contractAddress","query","queryData","JSON","stringify","smartContractState","QuerySmartContractStateRequest","setAddress","setQueryData","parse","getData_asU8","InvoiceContractService","rootName","wasmService","lookupContractByName","getContractAddress","QueryInvoiceSettings","queryWasmCustom","payableUuid","QueryPayableState","setPayableUuid","contractDetail","all","getContractConfig","contractAddr","contractConfig","MsgExecuteContract","setMsg","RegisterPayable","setPayableType","payableType","setScopeId","scopeId","setPayableDenom","invoiceDenom","setPayableTotal","toJson","setFundsList","Coin","setAmount","onboarding_cost","setDenom","onboarding_denom","setContract","setSender","MakePayment","parseSignMessage","anyProto","deserializer","modifier","m","deserialized","MultiMessageStepModal","messages","onComplete","useState","current","setCurrent","wcs","useNavigate","walletConnectService","handleSign","customAction","Any","setTypeUrl","typeUrl","method","useEffect","c","Math","min","NameContractService","queryRes","names","fee_amount","FEE_DENOM","any","NETWORK","process","PRODUCTION","EXPLORER_URL","WALLET_URL","ROOT_NAME","ROOT_PAYABLE_NAME","Header","h1","SubHeader","h2","H3","h3","Title","DARK","Value","TitleHeader","title","StyledButton","width","backgroundColor","borderColor","color","disabled","secondary","css","ButtonContent","Button","className","type","loading","handleClick","onKeyPress","key","defaultProps","PopupContainer","SlideInAnimation","keyframes","SlideOutAnimation","PopupContent","status","isClosing","CloseIcon","Content","Popup","onClose","delay","setIsClosing","delayCloseTimeout","setTimeout","clearTimeout","HeaderRow","Action","FormWrapper","action","headerDetails","FormRow","columns","FormActions","WARN","InputError","InputContainer","StyledInput","Label","label","Input","onChange","placeholder","required","registerConfig","useFormContext","control","useFormState","errors","target","Svg","svg","Loading","height","xmlns","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","repeatCount","dur","values","keyTimes","Container","Group","SelectContainer","StyledSelect","select","DropdownIcon","TEXT","Dropdown","options","htmlFor","index","isLoading","justify","noMargin","ActionContainer","setPopup","fields","buttonTxt","windowMessage","WINDOW_MESSAGES","windowMessageLookup","windowMsgComplete","windowMsgFailed","initialInputValues","forEach","inputValues","setInputValues","addListener","result","removeAllListeners","newInputValues","changeInputValue","Object","keys","Info","Connect","CONNECTED","connect","Disconnect","DISCONNECT","disconnect","AddressLink","active","DARKEN","altText","showAddressText","href","rel","p","Sidebar","DARK_BACKGROUND","LIGHT_TEXT","SidebarLayout","sidebarContent","SidebarLink","NavLink","attrs","activeclassname","exact","TEXT_ACCENT","SearchInput","borderRadius","marginBottom","maxWidth","Search","formMethods","useForm","TotalDetails","InvoiceTable","TableElement","InvoiceRowWrapper","InvoiceRow","formatter","useMemo","to","InvoiceHeaderWrapper","InvoiceHeader","ListInvoices","data","isError","navigate","details","i","VendorSelector","searchTerm","nameService","searchNames","results","useVendors","vendors","v","ErrorBar","SubmittingOverlay","InvoiceLineItem","TermsSelector","LineItemWrapper","CreateInvoice","publicKey","onCreate","lineItems","rest","body","headers","resBody","useCreateInvoice","denoms","reviewing","setReviewing","submitting","setSubmitting","signing","setSigning","setMessages","handleComplete","setHandleComplete","setError","reValidateMode","defaultValues","invoice_date","line_item","handleSubmit","setLineItems","addLineItem","dummyItem","getValues","createInvoice","startDate","dueDate","addDays","parseInt","terms","vendor","createResult","invoiceContractService","scopeGenerationDetail","writeScopeRequest","MsgWriteScopeRequest","writeSessionRequest","MsgWriteSessionRequest","writeRecordRequest","MsgWriteRecordRequest","generateCreateInvoiceBase64Message","payablesContractExecutionDetail","onSubmit","preventDefault","li","PaymentModal","outstandingBalance","initialAmount","marginTop","max","QrWrapper","QRModal","copyMessage","setCopyMessage","setQrContent","ref","useRef","url","window","location","canvas","toBlob","blob","textAlign","navigator","clipboard","write","ClipboardItem","size","text","onCopy","ShareIcon","d","ShareButton","qrOpen","setQrOpen","SimpleTwoColumn","InvoiceLineItems","InvoiceItemDetail","InvoiceLineItemHeader","InvoicePayments","InvoicePaymentHeader","PAYMENT_BLUE","InvoiceFooter","InvoiceDetails","uuid","useParams","invoiceCalcJson","invoiceCalc","useGetCalc","refreshInvoice","refetch","paymentOpen","setPaymentOpen","service","dateFormat","handlePayment","generateMakePaymentBase64Message","paidOff","paymentStatus","remainingOwed","ownerAddress","payerAddress","createdDate","invoiceStatus","total","payments","payment","timestamp","effectiveTime","paymentAmount","originalOwed","paymentSum","borderBottom","gridColumn","PRIMARY_BACKGROUND","HomeContainer","WalletConnectVersion","App","popupContent","setPopupContent","popupStatus","setPopupStatus","popupDuration","setPopupDuration","setHashAmount","setListenersAdded","connected","peer","duration","grpcService","useWallet","getBalancesList","then","balances","hashAmount","getHashBalance","WINDOW_MESSAGE","CUSTOM_ACTION_COMPLETE","CUSTOM_ACTION_FAILED","basename","path","element","QRCodeModal","queryClient","QueryClient","ReactDOM","render","network","bridge","grpcServiceAddress","walletUrl","client","document","getElementById","ACTION","query_state","query_payable","payable_uuid","register_payable","payable_type","scope_id","payable_denom","payable_total","make_payment"],"mappings":"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","file":"static/js/main.6a6af972.chunk.js","sourcesContent":["import { Colors } from \"consts\"\nimport { FunctionComponent } from \"react\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n    position: fixed;\n\n    background: rgba(0, 0, 0, .7);\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1000;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    pre {\n        overflow-x: scroll;\n    }\n`\n\nconst Body = styled.div`\n    background: ${Colors.LIGHT};\n    border-radius: 4px;\n    padding: 30px;\n    word-break: break-word;\n    min-width: 300px;\n    max-width: 90vw;\n    position: relative;\n`\n\nconst Close = styled.button`\n    border: none;\n    background: transparent;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    width: 2em;\n    height: 2em;\n    text-align: center;\n    cursor: pointer;\n    border-radius: 50%;\n    &:hover {\n        background: rgba(0, 0, 0, .1);\n    }\n`\n\nexport interface ModalProps {\n    requestClose?: () => any\n}\n\nexport const Modal: FunctionComponent<ModalProps> = ({ children, requestClose }) => {\n    return <Wrapper onClick={() => requestClose && requestClose()}>\n        <Body onClick={e => e.stopPropagation()}>\n            {requestClose && <Close onClick={requestClose}>X</Close>}\n            {children}\n        </Body>\n    </Wrapper>\n}","// source: invoice_protos.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar util_protos_pb = require('./util_protos_pb.js');\ngoog.object.extend(proto, util_protos_pb);\ngoog.exportSymbol('proto.invoice.Invoice', null, global);\ngoog.exportSymbol('proto.invoice.LineItem', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.invoice.Invoice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.invoice.Invoice.repeatedFields_, null);\n};\ngoog.inherits(proto.invoice.Invoice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.invoice.Invoice.displayName = 'proto.invoice.Invoice';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.invoice.LineItem = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.invoice.LineItem, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.invoice.LineItem.displayName = 'proto.invoice.LineItem';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.invoice.Invoice.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.invoice.Invoice.prototype.toObject = function(opt_includeInstance) {\n  return proto.invoice.Invoice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.invoice.Invoice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Invoice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    invoiceUuid: (f = msg.getInvoiceUuid()) && util_protos_pb.UUID.toObject(includeInstance, f),\n    fromAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    toAddress: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    invoiceCreatedDate: (f = msg.getInvoiceCreatedDate()) && util_protos_pb.Date.toObject(includeInstance, f),\n    invoiceDueDate: (f = msg.getInvoiceDueDate()) && util_protos_pb.Date.toObject(includeInstance, f),\n    description: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    paymentDenom: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    lineItemsList: jspb.Message.toObjectList(msg.getLineItemsList(),\n    proto.invoice.LineItem.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.invoice.Invoice}\n */\nproto.invoice.Invoice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.invoice.Invoice;\n  return proto.invoice.Invoice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.invoice.Invoice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.invoice.Invoice}\n */\nproto.invoice.Invoice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new util_protos_pb.UUID;\n      reader.readMessage(value,util_protos_pb.UUID.deserializeBinaryFromReader);\n      msg.setInvoiceUuid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFromAddress(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToAddress(value);\n      break;\n    case 4:\n      var value = new util_protos_pb.Date;\n      reader.readMessage(value,util_protos_pb.Date.deserializeBinaryFromReader);\n      msg.setInvoiceCreatedDate(value);\n      break;\n    case 5:\n      var value = new util_protos_pb.Date;\n      reader.readMessage(value,util_protos_pb.Date.deserializeBinaryFromReader);\n      msg.setInvoiceDueDate(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentDenom(value);\n      break;\n    case 8:\n      var value = new proto.invoice.LineItem;\n      reader.readMessage(value,proto.invoice.LineItem.deserializeBinaryFromReader);\n      msg.addLineItems(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.invoice.Invoice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.invoice.Invoice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.invoice.Invoice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Invoice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInvoiceUuid();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      util_protos_pb.UUID.serializeBinaryToWriter\n    );\n  }\n  f = message.getFromAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getToAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getInvoiceCreatedDate();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      util_protos_pb.Date.serializeBinaryToWriter\n    );\n  }\n  f = message.getInvoiceDueDate();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      util_protos_pb.Date.serializeBinaryToWriter\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getPaymentDenom();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getLineItemsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      8,\n      f,\n      proto.invoice.LineItem.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional UUID invoice_uuid = 1;\n * @return {?proto.invoice.UUID}\n */\nproto.invoice.Invoice.prototype.getInvoiceUuid = function() {\n  return /** @type{?proto.invoice.UUID} */ (\n    jspb.Message.getWrapperField(this, util_protos_pb.UUID, 1));\n};\n\n\n/**\n * @param {?proto.invoice.UUID|undefined} value\n * @return {!proto.invoice.Invoice} returns this\n*/\nproto.invoice.Invoice.prototype.setInvoiceUuid = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.clearInvoiceUuid = function() {\n  return this.setInvoiceUuid(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.invoice.Invoice.prototype.hasInvoiceUuid = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string from_address = 2;\n * @return {string}\n */\nproto.invoice.Invoice.prototype.getFromAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.setFromAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string to_address = 3;\n * @return {string}\n */\nproto.invoice.Invoice.prototype.getToAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.setToAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional Date invoice_created_date = 4;\n * @return {?proto.invoice.Date}\n */\nproto.invoice.Invoice.prototype.getInvoiceCreatedDate = function() {\n  return /** @type{?proto.invoice.Date} */ (\n    jspb.Message.getWrapperField(this, util_protos_pb.Date, 4));\n};\n\n\n/**\n * @param {?proto.invoice.Date|undefined} value\n * @return {!proto.invoice.Invoice} returns this\n*/\nproto.invoice.Invoice.prototype.setInvoiceCreatedDate = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.clearInvoiceCreatedDate = function() {\n  return this.setInvoiceCreatedDate(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.invoice.Invoice.prototype.hasInvoiceCreatedDate = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional Date invoice_due_date = 5;\n * @return {?proto.invoice.Date}\n */\nproto.invoice.Invoice.prototype.getInvoiceDueDate = function() {\n  return /** @type{?proto.invoice.Date} */ (\n    jspb.Message.getWrapperField(this, util_protos_pb.Date, 5));\n};\n\n\n/**\n * @param {?proto.invoice.Date|undefined} value\n * @return {!proto.invoice.Invoice} returns this\n*/\nproto.invoice.Invoice.prototype.setInvoiceDueDate = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.clearInvoiceDueDate = function() {\n  return this.setInvoiceDueDate(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.invoice.Invoice.prototype.hasInvoiceDueDate = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string description = 6;\n * @return {string}\n */\nproto.invoice.Invoice.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string payment_denom = 7;\n * @return {string}\n */\nproto.invoice.Invoice.prototype.getPaymentDenom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.setPaymentDenom = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * repeated LineItem line_items = 8;\n * @return {!Array<!proto.invoice.LineItem>}\n */\nproto.invoice.Invoice.prototype.getLineItemsList = function() {\n  return /** @type{!Array<!proto.invoice.LineItem>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.invoice.LineItem, 8));\n};\n\n\n/**\n * @param {!Array<!proto.invoice.LineItem>} value\n * @return {!proto.invoice.Invoice} returns this\n*/\nproto.invoice.Invoice.prototype.setLineItemsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n\n\n/**\n * @param {!proto.invoice.LineItem=} opt_value\n * @param {number=} opt_index\n * @return {!proto.invoice.LineItem}\n */\nproto.invoice.Invoice.prototype.addLineItems = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.invoice.LineItem, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.clearLineItemsList = function() {\n  return this.setLineItemsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.invoice.LineItem.prototype.toObject = function(opt_includeInstance) {\n  return proto.invoice.LineItem.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.invoice.LineItem} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.LineItem.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    lineUuid: (f = msg.getLineUuid()) && util_protos_pb.UUID.toObject(includeInstance, f),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    quantity: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    price: (f = msg.getPrice()) && util_protos_pb.Decimal.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.invoice.LineItem}\n */\nproto.invoice.LineItem.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.invoice.LineItem;\n  return proto.invoice.LineItem.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.invoice.LineItem} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.invoice.LineItem}\n */\nproto.invoice.LineItem.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new util_protos_pb.UUID;\n      reader.readMessage(value,util_protos_pb.UUID.deserializeBinaryFromReader);\n      msg.setLineUuid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setQuantity(value);\n      break;\n    case 5:\n      var value = new util_protos_pb.Decimal;\n      reader.readMessage(value,util_protos_pb.Decimal.deserializeBinaryFromReader);\n      msg.setPrice(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.invoice.LineItem.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.invoice.LineItem.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.invoice.LineItem} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.LineItem.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLineUuid();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      util_protos_pb.UUID.serializeBinaryToWriter\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getQuantity();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getPrice();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      util_protos_pb.Decimal.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional UUID line_uuid = 1;\n * @return {?proto.invoice.UUID}\n */\nproto.invoice.LineItem.prototype.getLineUuid = function() {\n  return /** @type{?proto.invoice.UUID} */ (\n    jspb.Message.getWrapperField(this, util_protos_pb.UUID, 1));\n};\n\n\n/**\n * @param {?proto.invoice.UUID|undefined} value\n * @return {!proto.invoice.LineItem} returns this\n*/\nproto.invoice.LineItem.prototype.setLineUuid = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.invoice.LineItem} returns this\n */\nproto.invoice.LineItem.prototype.clearLineUuid = function() {\n  return this.setLineUuid(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.invoice.LineItem.prototype.hasLineUuid = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.invoice.LineItem.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.LineItem} returns this\n */\nproto.invoice.LineItem.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.invoice.LineItem.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.LineItem} returns this\n */\nproto.invoice.LineItem.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int32 quantity = 4;\n * @return {number}\n */\nproto.invoice.LineItem.prototype.getQuantity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.invoice.LineItem} returns this\n */\nproto.invoice.LineItem.prototype.setQuantity = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional Decimal price = 5;\n * @return {?proto.invoice.Decimal}\n */\nproto.invoice.LineItem.prototype.getPrice = function() {\n  return /** @type{?proto.invoice.Decimal} */ (\n    jspb.Message.getWrapperField(this, util_protos_pb.Decimal, 5));\n};\n\n\n/**\n * @param {?proto.invoice.Decimal|undefined} value\n * @return {!proto.invoice.LineItem} returns this\n*/\nproto.invoice.LineItem.prototype.setPrice = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.invoice.LineItem} returns this\n */\nproto.invoice.LineItem.prototype.clearPrice = function() {\n  return this.setPrice(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.invoice.LineItem.prototype.hasPrice = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\ngoog.object.extend(exports, proto.invoice);\n","export const INVOICE_DATE_FORMAT = 'yyyy-MM-dd'\nexport const DISPLAY_DATE_FORMAT = 'MMMM d, yyyy'","import { ContractMsg } from \"./ContractBase\"\n\nexport class QueryNamesByAddress {\n    query_names_by_address: {\n        address: string\n    }\n\n    constructor(address: string) {\n        this.query_names_by_address = { address }\n    }\n}\n\nexport interface QueryNamesByAddressResponse {\n    address: string,\n    names: string[]\n}\n\nexport class QueryAddressByName {\n    query_address_by_name: {\n        name: string\n    }\n\n    constructor(name: string) {\n        this.query_address_by_name = { name }\n    }\n}\n\nexport interface QueryAddressByNameResponse {\n    address: string,\n    name: string\n}\n\nexport class SearchNamesRequest {\n    search_for_names: {\n        search: string\n    }\n\n    constructor(search: string) {\n        this.search_for_names = { search };\n    }\n}\n\nexport class NameMetaData {\n    name: string\n    address: string\n\n    constructor(name: string, address: string) {\n        this.name = name;\n        this.address = address;\n    }\n}\n\nexport interface SearchNamesQueryResponse {\n    search: string,\n    names: NameMetaData[]\n}\n\nexport class QuerySettings {\n    query_request: {} = {}\n}\n\nexport interface QuerySettingsResponse {\n    name: string,\n    fee_amount: string,\n    fee_collection_address: string,\n}\n\nexport class RegisterName extends ContractMsg {\n    register: {\n        name: string\n    } = { name: '' }\n\n    setName(name: string): RegisterName {\n        this.register.name = name\n        return this\n    }\n}\n","// source: util_protos.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.invoice.Date', null, global);\ngoog.exportSymbol('proto.invoice.Decimal', null, global);\ngoog.exportSymbol('proto.invoice.UUID', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.invoice.UUID = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.invoice.UUID, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.invoice.UUID.displayName = 'proto.invoice.UUID';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.invoice.Decimal = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.invoice.Decimal, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.invoice.Decimal.displayName = 'proto.invoice.Decimal';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.invoice.Date = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.invoice.Date, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.invoice.Date.displayName = 'proto.invoice.Date';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.invoice.UUID.prototype.toObject = function(opt_includeInstance) {\n  return proto.invoice.UUID.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.invoice.UUID} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.UUID.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.invoice.UUID}\n */\nproto.invoice.UUID.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.invoice.UUID;\n  return proto.invoice.UUID.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.invoice.UUID} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.invoice.UUID}\n */\nproto.invoice.UUID.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.invoice.UUID.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.invoice.UUID.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.invoice.UUID} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.UUID.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string value = 1;\n * @return {string}\n */\nproto.invoice.UUID.prototype.getValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.UUID} returns this\n */\nproto.invoice.UUID.prototype.setValue = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.invoice.Decimal.prototype.toObject = function(opt_includeInstance) {\n  return proto.invoice.Decimal.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.invoice.Decimal} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Decimal.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.invoice.Decimal}\n */\nproto.invoice.Decimal.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.invoice.Decimal;\n  return proto.invoice.Decimal.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.invoice.Decimal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.invoice.Decimal}\n */\nproto.invoice.Decimal.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.invoice.Decimal.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.invoice.Decimal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.invoice.Decimal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Decimal.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string value = 1;\n * @return {string}\n */\nproto.invoice.Decimal.prototype.getValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Decimal} returns this\n */\nproto.invoice.Decimal.prototype.setValue = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.invoice.Date.prototype.toObject = function(opt_includeInstance) {\n  return proto.invoice.Date.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.invoice.Date} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Date.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.invoice.Date}\n */\nproto.invoice.Date.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.invoice.Date;\n  return proto.invoice.Date.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.invoice.Date} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.invoice.Date}\n */\nproto.invoice.Date.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.invoice.Date.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.invoice.Date.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.invoice.Date} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Date.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string value = 1;\n * @return {string}\n */\nproto.invoice.Date.prototype.getValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Date} returns this\n */\nproto.invoice.Date.prototype.setValue = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.invoice);\n","import { QueryAllBalancesResponse } from '@provenanceio/wallet-lib/lib/proto/cosmos/bank/v1beta1/query_pb';\n\nexport class ConversionUtil {\n    static getHashBalance(balanceResponse?: QueryAllBalancesResponse.AsObject): number | null {\n        if (!balanceResponse) {\n            return null;\n        }\n        let nhash = balanceResponse.balancesList.find(coin => coin.denom === \"nhash\");\n        if (!nhash?.amount) {\n            return null;\n        }\n        try {\n            return this.convertNanoHashToHash(+nhash.amount);\n        } catch (error) {\n            console.log(`Failed to convert derived nano amount [${nhash?.amount}] to hash: ${error}`);\n            return null;\n        }\n    }\n\n    static convertNanoHashToHash(nanoHash: number): number {\n        return nanoHash / 1000000000;\n    }\n}\n","import { BASE_URL } from \"consts\"\nimport { randomUUID } from \"crypto\"\nimport { useQuery } from \"react-query\"\nimport { LineItem, Invoice } from '../proto/invoice_protos_pb'\nimport { UUID, Decimal, Date as DateProto } from '../proto/util_protos_pb'\nimport { newDate, newDecimal, newInvoice, newLineItem, newRandomUuid } from \"../util\"\nimport { useWalletConnect } from '@provenanceio/walletconnect-js';\n\nexport const useInvoiceList = () => {\n    const { walletConnectState: { address } } = useWalletConnect()\n\n    return useQuery<Invoice[]>(['invoices'], async () => {\n        return (await (await fetch(`${BASE_URL}/invoices/address/from/${address}`)).json())\n            .map((invoice: string) => Invoice.deserializeBinary(Buffer.from(invoice, 'base64')))\n    })\n}","type FormatFn = (value: number) => string\n\nconst usdFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n})\n\nexport const currencyFormatter = (currency: string): FormatFn => {\n    switch (currency) {\n        case 'USD':\n            return value => usdFormatter.format(value)\n            break;\n        default:\n            return value => `${value}${currency}`\n    }\n}\n","export const urlSafeBase64ToBase64 = (value: string) => value.replace(/_/g, '/').replace(/-/g, '+')","export const enumStringToHumanReadable = (input: string) =>\n    input\n        .split(\"_\")\n        .reduce(\n            (res, word) =>\n                `${res} ${word.charAt(0).toUpperCase()}${word\n                        .substr(1)\n                        .toLowerCase()}`,\n            \"\"\n        );\n","import { Invoice, LineItem } from '../proto/invoice_protos_pb';\nimport { UUID, Date as DateProto, Decimal } from '../proto/util_protos_pb';\nimport { v4 as uuidv4 } from 'uuid';\nimport { format } from 'date-fns';\nimport { INVOICE_DATE_FORMAT } from 'consts';\n\nexport const newInvoice = () => (new Invoice()).setInvoiceUuid(newRandomUuid());\nexport const newLineItem = () => (new LineItem()).setLineUuid(newRandomUuid());\nexport const newUuid = () => new UUID();\nexport const newRandomUuid = () => newUuid().setValue(uuidv4())\nexport const newDate = (date: Date = new Date()) => new DateProto().setValue(format(date, INVOICE_DATE_FORMAT));\nexport const newDecimal = (value: number | string = 0) => new Decimal().setValue(value.toString());\n\nexport const decodeB64 = (b64: string) => Buffer.from(b64, 'base64')\nexport const toInvoice = (b64: string) => Invoice.deserializeBinary(decodeB64(b64))\n\nexport const lineItemPrice = (lineItem: LineItem) => +(lineItem?.getPrice()?.getValue() || 0)\nexport const lineItemTotal = (lineItem: LineItem) => lineItemPrice(lineItem) * lineItem.getQuantity()\nexport const invoiceTotal = (invoice: Invoice) => invoice?.getLineItemsList().reduce((acc, item) => acc + lineItemTotal(item), 0)\nexport const calculateTotal = (invoices: Invoice[]) => invoices.reduce((acc, invoice) => acc + invoiceTotal(invoice), 0)\n","import { Error as ServerError } from 'grpc-web';\nimport { QueryClient as WasmQueryClient } from \"@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/query_grpc_web_pb\";\nimport { QuerySmartContractStateRequest } from \"@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/query_pb\";\nimport { GRPC_URL } from '../consts/network';\nimport { QueryClient as NameQueryClient } from \"@provenanceio/wallet-lib/lib/proto/provenance/name/v1/query_grpc_web_pb\";\nimport { QueryResolveRequest } from \"@provenanceio/wallet-lib/lib/proto/provenance/name/v1/query_pb\";\n\nexport class WasmService {\n    nameQueryClient: NameQueryClient = new NameQueryClient(GRPC_URL, null)\n    wasmQueryClient: WasmQueryClient = new WasmQueryClient(GRPC_URL, null)\n\n    lookupContractByName(name: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            this.nameQueryClient.resolve(new QueryResolveRequest().setName(name), null, (error: ServerError, res) => {\n                if (error) {\n                    reject(new Error(`wasmService.lookupContractByName error: Code: ${error.code} Message: ${error.message}`))\n                } else {\n                    resolve(res.getAddress())\n                }\n            })\n        })\n    }\n\n    queryWasmCustom<T, R>(contractAddress: string, query: T): Promise<R> {\n        return new Promise((resolve, reject) => {\n            const queryData = Buffer.from(JSON.stringify(query), \"utf-8\").toString(\"base64\")\n            this.wasmQueryClient.smartContractState(new QuerySmartContractStateRequest()\n                .setAddress(contractAddress)\n                .setQueryData(queryData)\n                , null, (error: ServerError, res) => {\n                if (error) {\n                    reject(new Error(`wasmService.queryWasmCustom error: Code: ${error.code} Message: ${error.message}`))\n                } else {\n                    resolve(JSON.parse(Buffer.from(res.getData_asU8()).toString('utf-8')))\n                }\n            })\n        })\n    }\n}","import { WasmService } from 'Services';\nimport { MsgExecuteContract } from '@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/tx_pb'\nimport { Coin } from '@provenanceio/wallet-lib/lib/proto/cosmos/base/v1beta1/coin_pb'\nimport { Any } from '@provenanceio/wallet-lib/lib/proto/google/protobuf/any_pb'\nimport { MakePayment, QueryInvoiceSettings, QueryInvoiceSettingsResponse, QueryPayableState, QueryPayableStateResponse, RegisterPayable } from '../models';\nimport { FEE_DENOM } from 'consts';\nimport { PayablesContractExecutionDetail } from 'hooks';\n\nexport class InvoiceContractService {\n    wasmService = new WasmService()\n    contractAddress: string | null = null\n    rootName: string\n\n    constructor(rootName: string) {\n        this.rootName = rootName\n    }\n\n    async getContractAddress(): Promise<string> {\n        if (this.contractAddress != null) {\n            return this.contractAddress\n        }\n        this.contractAddress = await this.wasmService.lookupContractByName(this.rootName)\n        return this.contractAddress\n    }\n\n    async getContractConfig(): Promise<QueryInvoiceSettingsResponse> {\n        return this.wasmService.queryWasmCustom<QueryInvoiceSettings, QueryInvoiceSettingsResponse>(await this.getContractAddress(), new QueryInvoiceSettings())\n    }\n\n    async getPayableState(payableUuid: string): Promise<QueryPayableStateResponse> {\n        return this.wasmService.queryWasmCustom<QueryPayableState, QueryPayableStateResponse>(await this.getContractAddress(), new QueryPayableState().setPayableUuid(payableUuid))\n    }\n\n    async generateCreateInvoiceBase64Message(contractDetail: PayablesContractExecutionDetail, address: string): Promise<string> {\n        const [contractAddr, contractConfig] = await Promise.all([\n            this.getContractAddress(),\n            this.getContractConfig()\n        ])\n        const message = new MsgExecuteContract()\n            .setMsg(Buffer.from(new RegisterPayable()\n                .setPayableType(contractDetail.payableType)\n                .setPayableUuid(contractDetail.payableUuid)\n                .setScopeId(contractDetail.scopeId)\n                .setPayableDenom(contractDetail.invoiceDenom)\n                .setPayableTotal(`${contractDetail.invoiceTotal}`)\n                .toJson()\n            , 'utf-8').toString('base64'))\n            .setFundsList([new Coin().setAmount(contractConfig.onboarding_cost).setDenom(contractConfig.onboarding_denom)])\n            .setContract(contractAddr)\n            .setSender(address);\n        // Directly hardcoded from https://github.com/CuCreekCo/ProvenanceWalletConnect/blob/d2227d716ddb3f95783624b50e0e70220e33a858/ProvenanceWalletConnect/Handlers/WalletConnectHandlers.swift#L408\n        // const any = new Any()\n        //     .setTypeUrl(\"/cosmwasm.wasm.v1.MsgExecuteContract\")\n        //     .setValue(message.serializeBinary());\n        // todo: rectify this so it matches how name service works?\n        return Buffer.from(message.serializeBinary()).toString(\"base64\");\n    }\n\n    async generateMakePaymentBase64Message(payableUuid: string, amount: number, paymentDenom: string, address: string): Promise<string> {\n        const [contractAddr, contractConfig] = await Promise.all([\n            this.getContractAddress(),\n            this.getContractConfig()\n        ])\n        const message = new MsgExecuteContract()\n            .setMsg(Buffer.from(new MakePayment()\n                .setPayableUuid(payableUuid)\n                .toJson()\n            , 'utf-8').toString('base64'))\n            .setFundsList([new Coin().setAmount(`${amount}`).setDenom(paymentDenom)])\n            .setContract(contractAddr)\n            .setSender(address);\n        // Directly hardcoded from https://github.com/CuCreekCo/ProvenanceWalletConnect/blob/d2227d716ddb3f95783624b50e0e70220e33a858/ProvenanceWalletConnect/Handlers/WalletConnectHandlers.swift#L408\n        // const any = new Any()\n        //     .setTypeUrl(\"/cosmwasm.wasm.v1.MsgExecuteContract\")\n        //     .setValue(message.serializeBinary());\n        // todo: rectify this so it matches how name service works?\n        return Buffer.from(message.serializeBinary()).toString(\"base64\");\n    }\n}\n","import { Header, SubHeader } from \"Components/Headers\";\nimport { Colors } from \"consts\";\nimport { FunctionComponent, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useWalletConnect } from '@provenanceio/walletconnect-js';\nimport { useNavigate } from \"react-router-dom\";\nimport { Any } from '@provenanceio/wallet-lib/lib/proto/google/protobuf/any_pb';\nimport { Message } from 'google-protobuf'\nimport { decodeB64 } from \"../../util\";\nimport { Modal } from \"Components/Modal\";\n\nexport interface SignMessage {\n    proto: any,\n    anyProto: any\n}\n\nexport function parseSignMessage<T extends Message>(anyProto: any, deserializer: (b: Buffer) => T, modifier: (message: T) => T = (m) => m): SignMessage {\n    const deserialized = modifier(deserializer(decodeB64(anyProto.value)))\n    anyProto.value = Buffer.from(deserialized.serializeBinary()).toString('base64')\n    return {\n        proto: deserialized.toObject(),\n        anyProto\n    }\n}\n\nexport interface MultiMessageStepModalProps {\n    messages: SignMessage[],\n    onComplete?: () => any,\n}\n\nexport const MultiMessageStepModal: FunctionComponent<MultiMessageStepModalProps> = ({ messages, onComplete }) => {\n    const [current, setCurrent] = useState(0)\n    const navigate = useNavigate()\n\n    const { walletConnectService: wcs } = useWalletConnect()\n\n    const handleSign = async (message: SignMessage) => await wcs.customAction({\n        message: Buffer.from(new Any().setTypeUrl(message.anyProto.typeUrl).setValue(message.anyProto.value).serializeBinary()).toString('base64'),\n        description: message.anyProto.typeUrl,\n        method: \"provenance_sendTransaction\",\n    })\n\n    useEffect(() => {\n        (async () => {\n            for (const message of messages) {\n                await handleSign(message)\n                setCurrent(c => Math.min(c + 1, messages.length - 1))\n            }\n            onComplete && onComplete()\n        })()\n    }, [messages])\n\n    if (messages.length == 0) {\n        return <></>\n    }\n\n    return <Modal>\n        <Header>Sign Message ({current + 1} / {messages.length})</Header>\n        <pre>{JSON.stringify(messages[current].proto, null, 2)}</pre>\n        <SubHeader>Please Check Your Device for Signature Prompt</SubHeader>\n    </Modal>\n}","import {\n    NameMetaData,\n    QueryAddressByName,\n    QueryAddressByNameResponse,\n    QueryNamesByAddress,\n    QueryNamesByAddressResponse,\n    QuerySettingsResponse,\n    SearchNamesQueryResponse,\n    SearchNamesRequest,\n} from 'models';\nimport { WasmService } from 'Services';\nimport { MsgExecuteContract } from '@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/tx_pb'\nimport { Coin } from '@provenanceio/wallet-lib/lib/proto/cosmos/base/v1beta1/coin_pb'\nimport { Any } from '@provenanceio/wallet-lib/lib/proto/google/protobuf/any_pb'\nimport { QuerySettings, RegisterName } from '../models/NameContract';\nimport { FEE_DENOM } from 'consts';\n\nexport class NameContractService {\n    wasmService = new WasmService()\n    contractAddress: string | null = null\n    rootName: string\n\n    constructor(rootName: string) {\n        this.rootName = rootName\n    }\n\n    async getContractAddress(): Promise<string> {\n        if (this.contractAddress != null) {\n            return this.contractAddress\n        }\n        this.contractAddress = await this.wasmService.lookupContractByName(this.rootName)\n        return this.contractAddress\n    }\n\n    async getContractConfig(): Promise<QuerySettingsResponse> {\n        return this.wasmService.queryWasmCustom<QuerySettings, QuerySettingsResponse>(await this.getContractAddress(), new QuerySettings())\n    }\n\n    async listNames(address: string): Promise<string[]> {\n        const queryRes = await this.wasmService.queryWasmCustom<QueryNamesByAddress, QueryNamesByAddressResponse>(await this.getContractAddress(), new QueryNamesByAddress(address))\n        \n        return queryRes.names\n    }\n\n    async resolveName(name: string): Promise<string> {\n        const queryRes = await this.wasmService.queryWasmCustom<QueryAddressByName, QueryAddressByNameResponse>(await this.getContractAddress(), new QueryAddressByName(name))\n        \n        return queryRes.address\n    }\n\n    async searchNames(search: string): Promise<NameMetaData[]> {\n        const queryRes = await this.wasmService.queryWasmCustom<SearchNamesRequest, SearchNamesQueryResponse>(await this.getContractAddress(), new SearchNamesRequest(search));\n\n        return queryRes.names;\n    }\n\n    async generateNameRegisterBase64Message(name: string, address: string): Promise<string> {\n        const [contractAddr, contractConfig] = await Promise.all([\n            this.getContractAddress(),\n            this.getContractConfig()\n        ])\n        \n        const message = new MsgExecuteContract()\n            .setMsg(Buffer.from(new RegisterName().setName(name).toJson(), 'utf-8').toString('base64'))\n            .setFundsList([new Coin().setAmount(contractConfig.fee_amount).setDenom(FEE_DENOM)])\n            .setContract(contractAddr)\n            .setSender(address);\n        // Directly hardcoded from https://github.com/CuCreekCo/ProvenanceWalletConnect/blob/d2227d716ddb3f95783624b50e0e70220e33a858/ProvenanceWalletConnect/Handlers/WalletConnectHandlers.swift#L408\n        const any = new Any()\n            .setTypeUrl(\"/cosmwasm.wasm.v1.MsgExecuteContract\")\n            .setValue(message.serializeBinary());\n        return Buffer.from(any.serializeBinary()).toString(\"base64\");\n    }\n}\n","export const NETWORK = process.env.REACT_APP_NETWORK\nexport const PRODUCTION = NETWORK == 'mainnet'\nexport const EXPLORER_URL = PRODUCTION ? 'https://explorer.provenance.io' : 'https://explorer.test.provenance.io'\nexport const GRPC_URL = PRODUCTION ? 'https://wallet.provenance.io/proxy' : 'https://wallet.test.provenance.io/proxy'\n// export const GRPC_URL = 'http://localhost:8080'\nexport const WALLET_URL = PRODUCTION ? 'https://wallet.provenance.io' : 'https://wallet.test.provenance.io'\nexport const ROOT_NAME = 'wallettest3.pb'\nexport const FEE_DENOM = 'nhash'\n\n// export const BASE_URL = 'http://localhost:13459/v1'\nexport const BASE_URL = 'https://test.figure.tech/service-invoice/v1'\nexport const ROOT_PAYABLE_NAME = 'payablestest17.pb'\n","import styled from 'styled-components';\nimport { Colors } from 'consts';\nimport { FunctionComponent } from 'react';\n\nexport const Header = styled.h1`\n  font-size: 3rem;\n  line-height: 3rem;\n  font-weight: bold;\n  letter-spacing: 0.25rem;\n  margin-bottom: 40px;\n  transition: 6s all;\n`;\nexport const SubHeader = styled.h2`\n  font-size: 2rem;\n  line-height: 2rem;\n  font-weight: bold;\n`;\n\nexport const H3 = styled.h3`\n  font-size: 1.5rem;\n  line-height: 2rem;\n`\n\nexport interface TitleHeaderProps {\n  title: string\n}\n\nconst Title = styled(H3)`\n  color: ${Colors.DARK};\n  margin: 0;\n`\n\nconst Value = styled(Header)`\n  margin-top: 10px;\n  margin-bottom: 0;\n`\n\nexport const TitleHeader: FunctionComponent<TitleHeaderProps> = ({ title, children }) => <div>\n  <Title>{title}</Title>\n  <Value>{children}</Value>\n</div>","import styled, { css } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Loading } from \"Components\";\n\nconst StyledButton = styled.button`\n  flex-basis: ${({ width }) => width};\n  width: ${({ width }) => width};\n  ${({ width }) => width === \"auto\" && \"min-width: 150px\"};\n  align-items: center;\n  background: ${({ backgroundColor }) => backgroundColor};\n  white-space: nowrap;\n  border-radius: 6px;\n  border: 1px solid\n    ${({ borderColor, backgroundColor }) => borderColor || backgroundColor};\n  color: ${({ color }) => color};\n  cursor: ${({ disabled }) => (disabled ? \"not-allowed\" : \"pointer\")};\n  display: flex;\n  justify-content: center;\n  letter-spacing: 0.07rem;\n  transition: 250ms all;\n  user-select: none;\n  font-size: 1.2rem;\n  height: 40px;\n  padding: 0 30px;\n  &:hover:not(:disabled) {\n    filter: contrast(200%);\n    ${({ secondary, color, backgroundColor }) =>\n      secondary &&\n      css`\n        background-color: ${color};\n        color: ${backgroundColor};\n      `}\n  }\n  &:active:not(:disabled) {\n    filter: contrast(90%);\n  }\n  &:disabled {\n    filter: grayscale(80%);\n  }\n`;\nconst ButtonContent = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = ({\n  className,\n  backgroundColor,\n  onClick,\n  children,\n  disabled,\n  width,\n  title,\n  type,\n  loading,\n  borderColor,\n  color,\n  secondary,\n}) => {\n  const handleClick = () => {\n    if (!disabled) {\n      onClick();\n    }\n  };\n\n  if (secondary) {\n    [color, backgroundColor, borderColor] = [\n      backgroundColor,\n      color,\n      backgroundColor,\n    ];\n  }\n\n  return (\n    <StyledButton\n      title={title}\n      className={className}\n      onClick={handleClick}\n      color={color}\n      secondary={secondary}\n      backgroundColor={backgroundColor.toUpperCase()}\n      borderColor={(borderColor || backgroundColor).toUpperCase()}\n      onKeyPress={(e) => {\n        if (e.key === \"Enter\") {\n          handleClick();\n        }\n      }}\n      disabled={disabled || loading}\n      width={width}\n      type={type}\n    >\n      <ButtonContent>{loading ? <Loading /> : children}</ButtonContent>\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  width: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  borderColor: PropTypes.string,\n  color: PropTypes.string,\n  secondary: PropTypes.bool,\n};\nButton.defaultProps = {\n  className: \"\",\n  backgroundColor: \"#42368E\",\n  onClick: () => {},\n  disabled: false,\n  width: \"auto\",\n  title: \"\",\n  type: \"button\",\n  loading: false,\n  color: \"white\",\n  secondary: false,\n  borderColor: \"transparent\",\n};\n\nexport default Button;\n","import { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst PopupContainer = styled.div`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  top: 0;\n  left: 0;\n  justify-content: center;\n  z-index: 100;\n`;\nconst SlideInAnimation = keyframes`\n  from { transform: translate(0, -100%); }\n  to { transform: translate(0, 0); }\n`;\nconst SlideOutAnimation = keyframes`\n  from { transform: translate(0, 0); }\n  to { transform: translate(0, -100%); }\n`;\n\nconst PopupContent = styled.div`\n  padding: 20px;\n  width: 100%;\n  background: ${({ status }) => {\n    if (status === 'error' || status === 'failure') return '#FFAAAA';\n    if (status === 'warning') return '#FFFFAA';\n    if (status === 'success') return '#AAFFAA';\n    return '#DDDDDD';\n  }};\n  box-shadow: '1px 1px 4px 1px rgba(0,0,0,0.10)';\n  border-radius: 0 0 3px 3px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  animation: 250ms linear ${({ isClosing }) => isClosing ? SlideOutAnimation : SlideInAnimation };\n  animation-fill-mode: both;\n  opacity: 0.95;\n`;\nconst CloseIcon = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  font-size: 3rem;\n  transform: rotate(45deg);\n  cursor: pointer;\n`;\nconst Content = styled.div`\n  font-size: 1.4rem;\n  font-weight: 700;\n`;\n\nconst Popup = ({ className, children, onClose, status, delay }) => {\n  const [isClosing, setIsClosing] = useState(false);\n  \n  useEffect(() => {\n    let delayCloseTimeout = '';\n    // Popup has just opened/been shown\n    if (!isClosing) {\n      // After delay, show slide up animation, then close self\n      delayCloseTimeout = setTimeout(() => { setIsClosing(true); }, delay);\n    } else {\n      // Popup is already closing, wait 1s to give time for the animation to finish\n      setTimeout(() => { onClose() }, 1000);\n    }\n    return () => {\n      // Make sure to clear the timeout if this closes before it runs\n      if (delayCloseTimeout) { clearTimeout(delayCloseTimeout); }\n    }\n  }, [isClosing, onClose, delay]);\n\n  return (\n    <PopupContainer className={className}>\n      <PopupContent status={status.toLowerCase()} isClosing={isClosing}>\n        <CloseIcon onClick={() => setIsClosing(true)}>+</CloseIcon>\n        <Content>{children}</Content>\n      </PopupContent>\n    </PopupContainer>\n  );\n};\n\nPopup.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n  status: PropTypes.string,\n  delay: PropTypes.number,\n};\nPopup.defaultProps = {\n  className: '',\n  children: null,\n  onClose: () => {},\n  status: 'warning',\n  delay: 2000,\n};\n\nexport default Popup;\n","import { FunctionComponent, ReactChild } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from 'consts';\n\nexport interface FormWrapperProps {\n    title: string,\n    action?: ReactChild,\n    headerDetails?: ReactChild\n}\n\nconst Wrapper = styled.div`\n    background: ${Colors.LIGHT};\n    padding: 30px;\n    border-radius: 10px;\n\n    .inputContainer {\n        margin-top: 30px;\n    }\n`\n\nconst Header = styled.div`\n    padding-bottom: 30px;\n    border-bottom: 1px solid ${Colors.DARK};\n`\n\nconst HeaderRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    &:not(:last-child) {\n        margin-bottom: 20px;\n    }\n`\n\nconst Title = styled.div`\n    font-size: 3em;\n    font-weight: bold;\n`\n\nconst Action = styled.div``\n\nexport const FormWrapper: FunctionComponent<FormWrapperProps> = ({ title, action, headerDetails, children }) => <Wrapper>\n    <Header>\n        <HeaderRow>\n            <Title>{title}</Title>\n            {action && <Action>{action}</Action>}\n        </HeaderRow>\n        {headerDetails && <HeaderRow>\n            {headerDetails}\n        </HeaderRow>}\n    </Header>\n    {children}\n</Wrapper>","import styled from \"styled-components\";\n\nexport interface FormRowProps {\n    columns?: number\n}\n\nexport const FormRow = styled.div<FormRowProps>`\n    display: grid;\n    grid-template-columns: repeat(${({ columns }) => columns || 1}, 1fr);\n    grid-gap: 10px;\n`","import styled from \"styled-components\";\n\nexport const FormActions = styled.div`\n    button:not(:last-child) {\n        margin-bottom: 10px;\n    }\n`","import { Colors } from \"consts\";\nimport { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    color: ${Colors.WARN};\n`\n\nexport interface InputErrorProps {\n    children: string | { message: string }\n}\n\nexport const InputError: FunctionComponent<InputErrorProps> = ({ children }) => {\n    if (!children) {\n        return <></>\n    }\n\n    return <Wrapper>{(typeof children === 'string' ? children : children.message) || 'required'}</Wrapper>\n}","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Colors } from \"consts\";\nimport { useFormContext, useFormState } from \"react-hook-form\";\nimport { InputError } from \"Components/Form\";\n\nconst InputContainer = styled.div`\n  position: relative;\n  flex-basis: ${({ width }) => width};\n  display: flex;\n`;\nconst StyledInput = styled.input`\n  padding: 4px 10px;\n  height: 30px;\n  width: 100%;\n  box-sizing: content-box;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  border: 1px solid ${Colors.DARK};\n`;\nconst Label = styled.label`\n  font-size: 1rem;\n  font-weight: 700;\n  position: absolute;\n  top: -2rem;\n  left: 0;\n`;\n\nconst Input = ({\n  className,\n  label,\n  value,\n  onChange,\n  placeholder,\n  width,\n  disabled,\n  style,\n  type,\n  name,\n  required,\n  registerConfig,\n}) => {\n  const { register, control } = useFormContext();\n  const {\n    errors: { [name]: error },\n  } = useFormState({ control });\n\n  return (\n    <>\n      <InputContainer width={width} className={`${className} inputContainer`}>\n        {label && <Label>{label}</Label>}\n        <StyledInput\n          placeholder={placeholder}\n          onChange={({ target }) => onChange(target.value)}\n          disabled={disabled}\n          style={style}\n          type={type}\n          {...register(name, { required, ...registerConfig })}\n        />\n      </InputContainer>\n      {error && <InputError>{error}</InputError>}\n    </>\n  );\n};\n\nInput.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  style: PropTypes.any,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  registerConfig: PropTypes.any,\n};\nInput.defaultProps = {\n  className: \"\",\n  width: \"100%\",\n  label: \"\",\n  value: \"\",\n  onChange: () => {},\n  placeholder: \"Enter Value\",\n  style: {},\n  type: \"text\",\n  required: false,\n  registerConfig: {},\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Svg = styled.svg`\n  margin: auto;\n  display: block;\n`;\n\nconst Loading = ({ className, color, height, width }) => (\n  <Svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 100 100\"\n    preserveAspectRatio=\"xMidYMid\"\n    className={className}\n    height={height}\n    width={width}\n  >\n    <circle\n      cx=\"50\"\n      cy=\"50\"\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"10\"\n      r=\"35\"\n      strokeDasharray=\"164.93361431346415 56.97787143782138\"\n    >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n        />\n    </circle>\n</Svg>\n);\n\nLoading.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n};\nLoading.defaultProps = {\n  className: '',\n  color: '#eeeeee',\n  height: '20px',\n  width: '20px',\n};\n\nexport default Loading;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Colors } from \"consts\";\nimport { useFormContext } from \"react-hook-form\";\n\nconst Container = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nconst Group = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: flex-start;\n  flex-basis: 100%;\n`;\nconst SelectContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\nconst StyledSelect = styled.select`\n  width: 100%;\n  padding: 11px 18px;\n  border-radius: 4px;\n  margin: 0;\n  border: 1px solid ${Colors.DARK};\n  font-size: 1.4rem;\n  flex-grow: ${({ type }) => (type === \"radio\" ? \"initial\" : \"1\")};\n  font-weight: bold;\n  background: ${Colors.LIGHT};\n  cursor: pointer;\n  color: ${Colors.DARK};\n  &:focus,\n  &:focus-visible,\n  &:active {\n    outline-color: ${Colors.DARK};\n  }\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n`;\nconst DropdownIcon = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 18px;\n  color: ${Colors.TEXT};\n  pointer-events: none;\n  cursor: pointer;\n  font-size: 1.8rem;\n  text-align: middle;\n  font-weight: bold;\n`;\nconst Label = styled.label`\n  margin-bottom: 16px;\n  font-weight: bold;\n  display: inline-block;\n  position: absolute;\n  left: 0;\n  top: -2rem;\n  color: #333333;\n`;\n\nconst Dropdown = ({\n  className,\n  label,\n  options,\n  name,\n  value,\n  onChange,\n  disabled,\n  required,\n}) => {\n  const renderOptions = () =>\n    options.map((title, index) => (\n      <option key={title} value={title} disabled={index === 0}>\n        {title}\n      </option>\n    ));\n\n  const { register } = useFormContext();\n\n  return (\n    <Container className={`${className}`}>\n      <Group>\n        <SelectContainer className=\"inputContainer\">\n          {label && <Label htmlFor={name}>{label}</Label>}\n          <StyledSelect\n            {...register(name, { required })}\n            onChange={({ target }) => onChange(target.value)}\n            disabled={disabled}\n          >\n            {renderOptions()}\n          </StyledSelect>\n          <DropdownIcon>^</DropdownIcon>\n        </SelectContainer>\n      </Group>\n    </Container>\n  );\n};\n\nDropdown.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.node,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n};\nDropdown.defaultProps = {\n  className: \"\",\n  label: \"\",\n  value: null,\n  disabled: false,\n  onChange: () => {},\n  required: false,\n};\n\nexport default Dropdown;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  padding: 20px;\n  border: 2px solid ${({ color }) => color};\n  background: ${({ color, isLoading }) =>\n    isLoading ? \"#CCCCCC\" : `${color}50`};\n  border-radius: 5px;\n  display: flex;\n  max-width: 100%;\n  align-items: center;\n  justify-content: ${({ justify }) => justify};\n  ${({ noMargin }) => !noMargin && \"margin-bottom: 30px;\"}\n`;\n\nexport const ActionContainer = ({\n  children,\n  color,\n  justify,\n  loading,\n  noMargin,\n}) => (\n  <Container\n    color={color}\n    justify={justify}\n    isLoading={loading}\n    noMargin={noMargin}\n  >\n    {children}\n  </Container>\n);\n\nActionContainer.propTypes = {\n  color: PropTypes.string,\n  children: PropTypes.node,\n  justify: PropTypes.string,\n  loading: PropTypes.bool,\n  noMargin: PropTypes.bool,\n};\nActionContainer.defaultProps = {\n  color: \"#42368E\",\n  children: null,\n  justify: \"center\",\n  loading: false,\n  noMargin: false,\n};\n","import { useState, useEffect } from \"react\";\nimport {\n  WINDOW_MESSAGES,\n  useWalletConnect,\n} from \"@provenanceio/walletconnect-js\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input } from \"Components\";\nimport { ActionContainer } from \"./ActionContainer\";\n\nconst windowMessageLookup = (windowMessage) => [\n  `${WINDOW_MESSAGES[`${windowMessage}_COMPLETE`]}`,\n  `${WINDOW_MESSAGES[`${windowMessage}_FAILED`]}`,\n];\n\nexport const Action = ({\n  method,\n  setPopup,\n  fields,\n  buttonTxt,\n  windowMessage,\n}) => {\n  const { walletConnectService, walletConnectState } = useWalletConnect();\n  // Get loading state for specific method\n  const loading = walletConnectState[`${method}Loading`];\n  // Get complete and failed messages\n  const [windowMsgComplete, windowMsgFailed] =\n    windowMessageLookup(windowMessage);\n  // Build state object from fields data (fields are an array of obj, see propTypes)\n  const initialInputValues = {};\n  fields.forEach(({ name, value }) => {\n    initialInputValues[name] = value;\n  });\n  const [inputValues, setInputValues] = useState(initialInputValues);\n  // Create all event listeners for this method\n  useEffect(() => {\n    // Delegate Hash Events\n    walletConnectService.addListener(windowMsgComplete, (result) => {\n      console.log(`WalletConnectJS | ${method} Complete | Result: `, result); // eslint-disable-line no-console\n      setPopup(\n        `${method} Complete! See console for result details`,\n        \"success\",\n        5000\n      );\n    });\n    walletConnectService.addListener(windowMsgFailed, (result) => {\n      const { error } = result;\n      console.log(`WalletConnectJS | ${method} Failed | Result: `, result); // eslint-disable-line no-console\n      setPopup(\n        `${method} Failed! ${error} | See console for more details`,\n        \"failure\",\n        5000\n      );\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(windowMsgComplete);\n      walletConnectService.removeAllListeners(windowMsgFailed);\n    };\n  }, [\n    walletConnectService,\n    setPopup,\n    windowMsgComplete,\n    windowMsgFailed,\n    method,\n  ]);\n\n  const changeInputValue = (name, value) => {\n    const newInputValues = { ...inputValues };\n    newInputValues[name] = value;\n    setInputValues(newInputValues);\n  };\n\n  const renderInputs = () =>\n    fields.map(({ name, width, label, placeholder }) => (\n      <Input\n        key={name}\n        width={width}\n        value={inputValues[name]}\n        label={label}\n        placeholder={placeholder}\n        onChange={(value) => changeInputValue(name, value)}\n      />\n    ));\n\n  // If we only have a single, send the value it without the key (as itself, non obj)\n  const getSendData = () =>\n    Object.keys(inputValues).length > 1\n      ? inputValues\n      : inputValues[Object.keys(inputValues)[0]];\n\n  return (\n    <ActionContainer loading={loading}>\n      {renderInputs()}\n      <Button\n        loading={loading}\n        onClick={() => walletConnectService[method](getSendData())}\n      >\n        {buttonTxt}\n      </Button>\n    </ActionContainer>\n  );\n};\n\nAction.propTypes = {\n  method: PropTypes.string.isRequired,\n  setPopup: PropTypes.func.isRequired,\n  fields: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      name: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      placeholder: PropTypes.string,\n      width: PropTypes.string,\n    })\n  ),\n  buttonTxt: PropTypes.string.isRequired,\n  windowMessage: PropTypes.string.isRequired,\n};\n\nAction.defaultProps = {\n  fields: [],\n};\n","import { useEffect } from \"react\";\nimport { WINDOW_MESSAGES } from \"@provenanceio/walletconnect-js\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"Components\";\nimport { ActionContainer } from \"./ActionContainer\";\n\nconst Info = styled.div`\n  font-size: 1.4rem;\n  margin-right: 40px;\n`;\nexport const Connect = ({ walletConnectService, setPopup }) => {\n  const color = \"#498AFD\";\n\n  useEffect(() => {\n    walletConnectService.addListener(WINDOW_MESSAGES.CONNECTED, (result) => {\n      console.log(\"WalletConnectJS | Connected | Result: \", result); // eslint-disable-line no-console\n      setPopup(\"Wallet Connected\", \"success\");\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(WINDOW_MESSAGES.CONNECTED);\n    };\n  }, [walletConnectService, setPopup]);\n\n  return (\n    <ActionContainer color={color} noMargin>\n      <Info>Connect Wallet</Info>\n      <Button backgroundColor={color} onClick={walletConnectService.connect}>\n        Connect\n      </Button>\n    </ActionContainer>\n  );\n};\n\nConnect.propTypes = {\n  walletConnectService: PropTypes.shape({\n    connect: PropTypes.func,\n    addListener: PropTypes.func,\n    removeAllListeners: PropTypes.func,\n  }).isRequired,\n  setPopup: PropTypes.func.isRequired,\n};\n","import { useEffect } from \"react\";\nimport { WINDOW_MESSAGES } from \"@provenanceio/walletconnect-js\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"Components\";\nimport { ActionContainer } from \"./ActionContainer\";\nimport { Colors } from \"consts\";\n\nconst Info = styled.div`\n  font-size: 1.4rem;\n  margin-right: 40px;\n  flex-basis: 80%;\n`;\nexport const Disconnect = ({ walletConnectService, setPopup }) => {\n  const color = Colors.WARN;\n\n  useEffect(() => {\n    walletConnectService.addListener(WINDOW_MESSAGES.DISCONNECT, (result) => {\n      console.log(\"WalletConnectJS | Disconnect | Result: \", result); // eslint-disable-line no-console\n      setPopup(\"Wallet Disconnected\", \"failure\");\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(WINDOW_MESSAGES.DISCONNECT);\n    };\n  }, [walletConnectService, setPopup]);\n\n  return (\n    <ActionContainer color={color} justify=\"space-between\">\n      <Info>Disconnect the connected wallet</Info>\n      <Button backgroundColor={color} onClick={walletConnectService.disconnect}>\n        Disconnect\n      </Button>\n    </ActionContainer>\n  );\n};\n\nDisconnect.propTypes = {\n  walletConnectService: PropTypes.shape({\n    disconnect: PropTypes.func,\n    addListener: PropTypes.func,\n    removeAllListeners: PropTypes.func,\n  }).isRequired,\n  setPopup: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport {EXPLORER_URL} from \"consts\";\n\nconst AddressLink = ({\n    address,\n    altText,\n    showAddressText,\n}) => <div>\n        <a\n            href={`${EXPLORER_URL}/accounts/${address}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n        >\n            {showAddressText ? \"Address: \" : \"\"}\n            {altText ? altText : address}\n        </a>\n    </div>;\n\nAddressLink.propTypes = {\n    className: PropTypes.string,\n    address: PropTypes.string.isRequired,\n    altText: PropTypes.string,\n    showAddressText: PropTypes.bool,\n};\n\nAddressLink.defaultProps = {\n    className: \"\",\n    altText: null,\n    showAddressText: true,\n};\n\nexport default AddressLink;\n","import styled from \"styled-components\";\nimport { Component, FunctionComponent, useState } from 'react';\nimport { Colors } from \"consts\";\n\nexport interface Tab {\n    title: string,\n    element: Component\n}\n\nexport interface TabContainerProps {\n    tabs: Tab[]\n}\n\nconst TabContainerWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n`\n\nconst TabHeaderWrapper = styled.div`\n\n`\n\ninterface TabHeaderProps {\n    active?: boolean\n}\n\nconst TabHeader = styled.button<TabHeaderProps>`\n    border: 1px solid ${Colors.DARK};\n    border-bottom: none;\n    display: inline-block;\n    padding: 4px;\n    background: ${({ active }) => active ? Colors.DARKEN : Colors.LIGHT};\n    cursor: pointer;\n    &:not(:last-child) {\n        border-right: none;\n    }\n    &:first-child {\n        border-top-left-radius: 5px;\n    }\n    &:last-child {\n        border-top-right-radius: 5px;\n    }\n    &:hover {\n        background: ${Colors.DARKEN};\n    }\n`\n\nconst TabWrapper = styled.div`\n    padding: 10px;\n    background-color: ${Colors.LIGHT};\n\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    border: 1px solid ${Colors.DARK};\n`\n\nexport const TabContainer: FunctionComponent<TabContainerProps> = ({ tabs }) => {\n    const [selected, setSelected] = useState(0)\n    return <TabContainerWrapper>\n        <TabHeaderWrapper>{tabs.map((tab, i) => <TabHeader active={selected === i} key={`tab-${i}`} onClick={() => setSelected(i)}>{tab.title}</TabHeader>)}</TabHeaderWrapper>\n        <TabWrapper>{tabs[selected].element}</TabWrapper>\n    </TabContainerWrapper>\n}\n","import { FunctionComponent } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Component } from \"typedoc/dist/lib/utils\";\nimport { DARK_BACKGROUND, LIGHT, LIGHT_TEXT, TEXT_ACCENT } from \"../../../consts/colors\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-grow: 1;\n    height: 100vh;\n`\n\nconst Sidebar = styled.div`\n    min-width: 300px;\n    background: ${DARK_BACKGROUND};\n    color: ${LIGHT_TEXT};\n    padding: 20px;\n`\n\nconst Content = styled.div`\n    flex-grow: 1;\n    padding: 20px;\n    overflow-y: scroll;\n`\n\nexport interface SidebarLayoutProps {\n    sidebarContent: Component,\n}\n\nexport const SidebarLayout: FunctionComponent<SidebarLayoutProps> = ({ sidebarContent, children }) => {\n    return <Wrapper>\n        <Sidebar>{sidebarContent}</Sidebar>\n        <Content>{children}</Content>\n    </Wrapper>\n}\n\nexport const SidebarLink = styled(NavLink).attrs({ activeclassname: 'active', exact: 'true' })`\n    display: block;\n    color: ${LIGHT_TEXT};\n    font-size: 2rem;\n    padding: 20px;\n    margin-left: -20px;\n    margin-right: -20px;\n    &:hover {\n        color: ${TEXT_ACCENT};\n    }\n    &:last-of-type {\n        margin-bottom: 40px;\n    }\n    &.active {\n        background: ${LIGHT_TEXT};\n        color: ${DARK_BACKGROUND};\n    }\n`","import styled from 'styled-components';\n\nexport const BigParagraph = styled.p`\n  font-size: 1.6rem;\n  line-height: 3rem;\n  margin: 0;\n`;\n","import { FunctionComponent } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport Input from '../Input/Input';\n\ninterface SearchInputProps {\n    maxWidth?: number\n}\n\nconst SearchInput = styled(Input).attrs(({ style: { borderRadius: '20px', marginBottom: 0 } }))<SearchInputProps>`\n    max-width: ${({ maxWidth }) => (`${maxWidth}px` || 'none')};\n`\n\nexport interface SearchProps {\n    maxWidth?: number,\n}\n\nexport const Search: FunctionComponent<SearchProps> = ({ maxWidth }) => {\n    const formMethods = useForm()\n    return <FormProvider {...formMethods}>\n        <SearchInput disabled={false} maxWidth={maxWidth} placeholder=\"Search\" name=\"search\" />\n    </FormProvider>\n}","import { FunctionComponent, useMemo } from \"react\";\nimport { useInvoiceList } from \"../../../hooks/useInvoiceList\";\nimport { FormWrapper } from \"../../Form\";\nimport { Button } from 'Components';\nimport { Invoice } from \"../../../proto/invoice_protos_pb\";\nimport styled from \"styled-components\";\nimport { TitleHeader } from \"../../Headers\";\nimport { calculateTotal, currencyFormatter, invoiceTotal } from \"../../../util\";\nimport { Search } from \"../../Search\";\nimport { Colors } from 'consts';\nimport { Link, useNavigate } from 'react-router-dom'\n\nconst TotalDetails = styled.div`\n    display: flex;\n    flex-grow: 1;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst InvoiceTable = styled.div`\n    width: 100%;\n    margin-top: 30px;\n    color: ${Colors.DARK};\n`\n\ninterface InvoiceRowProps {\n    invoice: Invoice\n}\n\nconst TableElement = styled.div`\n    font-size: 1.2rem;\n`\n\nconst InvoiceRowWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 2fr 2fr 2fr;\n    border-top: 1px solid black;\n    padding: 10px;\n    align-items: center;\n\n    color: ${Colors.TEXT};\n    &:hover {\n        background: rgba(0, 0, 0, .2);\n    }\n\n    > *:last-child {\n        display: flex;\n        justify-content: flex-end;\n    }\n`\n\nconst InvoiceRow: FunctionComponent<InvoiceRowProps> = ({ invoice }) => {\n    const paymentDenom = invoice.getPaymentDenom()\n    const formatter = useMemo(() => currencyFormatter(paymentDenom), [paymentDenom])\n\n    return <Link to={`/${invoice.getInvoiceUuid()?.getValue()}`}>\n        <InvoiceRowWrapper>\n            <TableElement>{invoice.getDescription()}</TableElement>\n            <TableElement>{invoice.getToAddress()}</TableElement>\n            <TableElement><b>{formatter(invoiceTotal(invoice))}</b></TableElement>\n        </InvoiceRowWrapper>\n    </Link>\n}\n\nconst InvoiceHeaderWrapper = styled(InvoiceRowWrapper)`\n    border-top: none;\n    font-weight: bold;\n    &:hover {\n        background: transparent;\n    }\n`\n\nconst InvoiceHeader = () => <InvoiceHeaderWrapper>\n    <TableElement>Description</TableElement>\n    <TableElement>Vendor</TableElement>\n    <TableElement>Amount</TableElement>\n</InvoiceHeaderWrapper>\n\nexport interface ListInvoicesProps {\n\n}\n\n\nexport const ListInvoices: FunctionComponent<ListInvoicesProps> = ({}) => {\n    const { data: invoices, isLoading, isError, error } = useInvoiceList()\n    const navigate = useNavigate()\n\n    if (isLoading) {\n        return <div>Loading...</div>\n    }\n\n    if (isError) {\n        return <div>Error fetching invoices</div>\n    }\n\n    const details = <TotalDetails>\n        <TitleHeader title=\"Total Amount Outstanding\">{invoices && calculateTotal(invoices)} (VARIOUS CURRENCIES?)</TitleHeader>\n        <TitleHeader title=\"Total Invoices Outstanding\">{invoices?.length || 0}</TitleHeader>\n        <Search maxWidth={300} />\n    </TotalDetails>\n\n    return <FormWrapper title=\"Invoices\" action={<Button onClick={() => navigate('/create')}>New Invoice</Button>} headerDetails={details}>\n        {invoices && <InvoiceTable>\n            <InvoiceHeader />\n            {invoices.map((invoice, i) => <InvoiceRow key={invoice?.getInvoiceUuid()?.getValue() + `-${i}`} invoice={invoice}/>)}\n        </InvoiceTable>}\n    </FormWrapper>\n}","import { FunctionComponent, useState } from \"react\";\nimport { useVendors } from \"../../hooks/useVendors\";\nimport Dropdown from '../Dropdown/Dropdown';\n\ninterface VendorSelectorProps {\n    disabled?: boolean,\n    required?: boolean | string,\n}\n\nexport const VendorSelector: FunctionComponent<VendorSelectorProps> = ({ disabled, required }) => {\n    const [searchTerm, setSearchTerm] = useState('')\n    const { data: vendors, isLoading } = useVendors(searchTerm)\n\n    if (isLoading) {\n        return <div>Loading...</div>\n    }\n\n    if (!vendors) {\n        return <div>Error fetching vendors</div>\n    }\n\n    return <Dropdown disabled={!!disabled} required={required} name=\"vendor\" label=\"Vendor\" options={['Select a Vendor...', ...vendors.map(v => v.name)]} />\n}","import { ROOT_NAME } from \"consts\"\nimport { useQuery } from \"react-query\"\nimport { NameContractService } from \"Services/NameContractService\"\n\nexport const useVendors = (search: string) => {\n    const nameService = new NameContractService(ROOT_NAME)\n    return useQuery(['vendors', search], async () => {\n        const results = await nameService.searchNames(search)\n        return results\n    })\n}","import styled from \"styled-components\";\nimport { Colors } from 'consts';\nimport { LIGHT_TEXT } from '../../consts/colors';\n\nexport const ErrorBar = styled.div`\n    padding: 10px 20px;\n    color: white;\n    font-size: 2rem;\n    text-align: center;\n    background: ${Colors.WARN};\n    margin-top: 20px;\n`","import styled from \"styled-components\";\n\nexport const SubmittingOverlay = styled.div`\n    position: fixed;\n    background: rgba(0, 0, 0, .5);\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    color: white;\n    pointer-events: none;\n`","import { FunctionComponent } from \"react\"\nimport styled from \"styled-components\"\nimport { Colors } from 'consts';\nimport { DARK } from '../../../consts/colors';\nimport { LineItem } from \"../../../proto/invoice_protos_pb\";\nimport { Input } from 'Components';\nimport { FormRow } from \"../../Form\";\nimport { newDecimal } from \"../../../util\";\n\nconst Wrapper = styled.div`\n    padding: 0 20px 10px 20px;\n    border: 1px solid ${Colors.DARK};\n    border-radius: 4px;\n    margin-bottom: 10px;\n`\n\nexport interface InvoiceLineItemProps {\n    index: number,\n    disabled?: boolean,\n}\n\nexport const InvoiceLineItem: FunctionComponent<InvoiceLineItemProps> = ({ index, disabled }) => {\n    return <Wrapper>\n        <Input disabled={disabled} required=\"please enter a name\" label=\"Name\" name={`line_item.${index}.name`} />\n        <Input disabled={disabled} required=\"please enter a description\" label=\"Description\" name={`line_item.${index}.description`} />\n        <FormRow columns={2}>\n            <Input disabled={disabled} required=\"please enter a quantity\" type=\"number\" label=\"Quantity\" name={`line_item.${index}.quantity`} />\n            <Input disabled={disabled} required=\"please enter a price\" type=\"number\" label=\"Price\" name={`line_item.${index}.price`} />\n        </FormRow>\n    </Wrapper>\n}","import { FunctionComponent, useEffect, useState } from \"react\";\nimport { FormActions, FormRow, FormWrapper } from \"../../Form\";\nimport { SubHeader } from 'Components/Headers';\nimport { Input } from 'Components';\nimport { VendorSelector } from \"../../Vendor/VendorSelector\";\nimport Dropdown from \"../../Dropdown/Dropdown\";\nimport { Button } from 'Components';\nimport { useNavigate } from 'react-router-dom';\nimport { Invoice, LineItem } from \"../../../proto/invoice_protos_pb\";\nimport { Date as DateProto } from \"../../../proto/util_protos_pb\";\nimport { addDays, format, parse } from 'date-fns'\nimport { newDate, newInvoice, newLineItem, newRandomUuid, newDecimal, decodeB64 } from \"../../../util\";\nimport { ErrorBar } from \"../../Error/ErrorBar\";\nimport { SubmittingOverlay } from \"../../Submitting/SubmittingOverlay\";\nimport { CreateInvoiceResponse, useCreateInvoice } from \"../../../hooks/useCreateInvoice\";\nimport { InvoiceLineItem } from \"./InvoiceLineItem\";\nimport styled from \"styled-components\";\nimport { useForm, FormProvider, useFormState } from 'react-hook-form'\nimport { useWalletConnect } from '@provenanceio/walletconnect-js';\nimport { MultiMessageStepModal, parseSignMessage, SignMessage } from \"Components/MultiMessageStepModal\";\nimport { MsgWriteScopeRequest, MsgWriteSessionRequest, MsgWriteRecordRequest } from '@provenanceio/wallet-lib/lib/proto/provenance/metadata/v1/tx_pb'\nimport { MsgExecuteContract } from '@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/tx_pb';\nimport { InvoiceContractService } from \"Services\";\nimport { INVOICE_DATE_FORMAT, ROOT_PAYABLE_NAME } from \"consts\";\nimport { useGetDenoms } from \"hooks\";\n\ninterface TermsSelectorProps {\n    value?: string,\n    disabled?: boolean,\n    required?: boolean | string,\n}\n\nconst TermsSelector: FunctionComponent<TermsSelectorProps> = ({ value, disabled, required, }) => {\n    const [selected, setSelected] = useState(value || '90 Days')\n    const options = ['90 Days', '180 Days']\n\n    return <Dropdown disabled={disabled} required={required} name=\"terms\" label=\"Terms\" options={['Select Terms...', ...options]} />\n}\n\nconst LineItemWrapper = styled.div`\n    margin-bottom: 20px;\n`\ninterface CreateInvoiceProps {\n    \n}\n\nexport const CreateInvoice: FunctionComponent<CreateInvoiceProps> = ({ }) => {\n    const { onCreate } = useCreateInvoice()\n    const { data: denoms } = useGetDenoms()\n\n    const navigate = useNavigate()\n\n    const [reviewing, setReviewing] = useState(false)\n    const [submitting, setSubmitting] = useState(false)\n    const [signing, setSigning] = useState(false)\n    const [messages, setMessages] = useState<SignMessage[]>([])\n    const [handleComplete, setHandleComplete] = useState(() => () => navigate('/'))\n    const [error, setError] = useState('')\n\n    const { walletConnectState: { address } } = useWalletConnect()\n\n    const defaultLineItems: { name: string, description: string, quantity: number, price: number }[] = []\n    const formMethods = useForm({\n        reValidateMode: 'onBlur',\n        defaultValues: {\n            invoice_date: format(new Date(), INVOICE_DATE_FORMAT),\n            // todo: remove below, for testing only\n            description: 'the best description',\n            line_item: defaultLineItems,\n            paymentDenom: 'nhash'\n        }\n    })\n\n    // todo: remove, for testing\n    const newDummyLineItem = (i: number) => newLineItem()\n        .setName(`line item ${i}`)\n        .setDescription(`line item ${i} description`)\n        .setQuantity(i)\n        .setPrice(newDecimal(+`${i}${i}`))\n\n    const { handleSubmit } = formMethods\n\n    const [lineItems, setLineItems] = useState<LineItem[]>([])\n    const addLineItem = () => {\n        // setLineItems([...lineItems, newLineItem()])\n        const dummyItem = newDummyLineItem(lineItems.length + 1)\n        formMethods.setValue(`line_item`, [...formMethods.getValues().line_item, {\n            name: dummyItem.getName(),\n            description: dummyItem.getDescription(),\n            quantity: dummyItem.getQuantity(),\n            price: +(dummyItem.getPrice()?.getValue() || 0)\n        }])\n        setLineItems([...lineItems, dummyItem])\n    }\n    useEffect(() => {\n        addLineItem()\n    }, [])\n\n    const createInvoice = async (data: any) => {\n        setSubmitting(true)\n        setError('')\n        \n        try {\n            const invoice = newInvoice()\n            const startDate = parse(data.invoice_date, INVOICE_DATE_FORMAT, new Date())\n            const dueDate = addDays(startDate, parseInt(data.terms))\n            invoice.setToAddress(data.vendor)\n                .setFromAddress(address)\n                .setInvoiceCreatedDate(newDate(startDate))\n                .setInvoiceDueDate(newDate(dueDate))\n                .setDescription(data.description)\n                .setPaymentDenom(data.paymentDenom)\n                .setLineItemsList(data.line_item.map((lineItem: any) => newLineItem()\n                    .setName(lineItem.name)\n                    .setDescription(lineItem.description)\n                    .setQuantity(lineItem.quantity)\n                    .setPrice(newDecimal(lineItem.price))\n                ))\n                \n            const createResult = await onCreate(invoice)\n\n            const invoiceContractService = new InvoiceContractService(ROOT_PAYABLE_NAME)\n\n            setMessages([\n                parseSignMessage(createResult.scopeGenerationDetail.writeScopeRequest, MsgWriteScopeRequest.deserializeBinary),\n                parseSignMessage(createResult.scopeGenerationDetail.writeSessionRequest, MsgWriteSessionRequest.deserializeBinary),\n                parseSignMessage(createResult.scopeGenerationDetail.writeRecordRequest, MsgWriteRecordRequest.deserializeBinary),\n                parseSignMessage({typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract', value: await invoiceContractService.generateCreateInvoiceBase64Message(createResult.payablesContractExecutionDetail, address)}, MsgExecuteContract.deserializeBinary),\n            ])\n            setHandleComplete(() => () => navigate(`/invoices/${invoice?.getInvoiceUuid()?.getValue()}`))\n\n            setSigning(true)\n        } catch (e) {\n            console.log({ e })\n            setError(e)\n            setSubmitting(false)\n            setReviewing(false)\n        }\n    }\n\n    return <FormWrapper title=\"Create Invoice\">\n        {signing && <MultiMessageStepModal messages={messages} onComplete={handleComplete} />}\n        {submitting && <SubmittingOverlay>Submitting...</SubmittingOverlay>}\n            <FormProvider {...formMethods}>\n                <form onSubmit={e => e.preventDefault()}>\n                    <VendorSelector required disabled={reviewing} />\n                    <FormRow columns={2}>\n                        <Input type=\"date\" required disabled={reviewing} label=\"Invoice Date\" name=\"invoice_date\"></Input>\n                        <TermsSelector required disabled={reviewing} />\n                    </FormRow>\n                    <Input disabled={reviewing} required=\"please enter a description\" label=\"Description\" name=\"description\" />\n                    <Dropdown name=\"paymentDenom\" label=\"Payment Denom\" options={['Select a Payment Denom', ...(denoms || [])]} />\n                    <LineItemWrapper>\n                        <SubHeader>Line Items</SubHeader>\n                        {lineItems.map((li, i) => <InvoiceLineItem disabled={reviewing} index={i} key={`invoice-lineitem-${i}`}></InvoiceLineItem>)}\n                        <Button disabled={reviewing} onClick={addLineItem}>Add Line Item</Button>\n                    </LineItemWrapper>\n                    <FormActions>\n                        {reviewing ?\n                            <Button width=\"100%\" type=\"submit\" onClick={handleSubmit(createInvoice)}>Submit</Button> :\n                            <Button width=\"100%\" type=\"button\" onClick={() => setReviewing(true)}>Review</Button>\n                        }\n                        <Button type=\"button\" secondary width=\"100%\" onClick={() => reviewing ? setReviewing(false) : navigate('/')}>Cancel</Button>\n                    </FormActions>\n                </form>\n            </FormProvider>\n        {error && <ErrorBar>{`${error}`}</ErrorBar>}\n    </FormWrapper>\n}\n","import { BASE_URL } from \"consts\"\nimport { Invoice } from \"../proto/invoice_protos_pb\"\nimport { useWalletConnect } from '@provenanceio/walletconnect-js'\nimport { urlSafeBase64ToBase64 } from \"../util\"\n\nexport interface PayablesContractExecutionDetail {\n    payableType: string,\n    payableUuid: string,\n    scopeId: string,\n    invoiceDenom: string,\n    invoiceTotal: number,\n}\n\nexport interface CreateInvoiceResponse {\n    invoice: any,\n    payablesContractExecutionDetail: PayablesContractExecutionDetail,\n    scopeGenerationDetail: {\n        writeScopeRequest: any,\n        writeSessionRequest: any,\n        writeRecordRequest: any,\n    }\n}\n\nexport const useCreateInvoice = () => {\n    const { walletConnectState } = useWalletConnect()\n\n    const { address, publicKey } = walletConnectState\n    return {\n        onCreate: async (invoice: Invoice): Promise<CreateInvoiceResponse> => {\n            const { lineItemsList: lineItems, ...rest } = invoice.toObject()\n            const body = JSON.stringify({ ...rest, lineItems })\n            const res = await fetch(`${BASE_URL}/invoices/onboard`, { method: 'POST', body, headers: {\n                'Content-Type': 'application/json',\n                'x-public-key': urlSafeBase64ToBase64(publicKey),\n                'x-address': address,\n            } })\n            const resBody = await res.json()\n\n            if (res.status != 200) {\n                throw Error(`Error Creating Invoice: ${resBody.error}`)\n            }\n\n            return resBody\n        }\n    }\n}\n","import { BASE_URL } from \"consts\"\nimport { useQuery } from \"react-query\"\n\nexport const useGetDenoms = () => {\n    return useQuery<string[]>(['denoms'], async () => {\n        const res = await fetch(`${BASE_URL}/denom/all`)\n        \n        return await res.json()\n    })\n}","import { Button, Input } from \"Components\";\nimport { Header } from \"Components/Headers\";\nimport { Modal } from \"Components/Modal\";\nimport { FunctionComponent, useMemo } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { currencyFormatter } from \"../../util\";\n\nexport interface PaymentModalProps {\n    invoiceUuid: string,\n    outstandingBalance: number,\n    paymentDenom: string,\n    initialAmount?: number,\n    onSubmit: (amount: number) => void,\n    requestClose?: () => any,\n}\n\nexport const PaymentModal: FunctionComponent<PaymentModalProps> = ({ invoiceUuid, outstandingBalance, paymentDenom, initialAmount, onSubmit, requestClose }) => {\n    const formMethods = useForm()\n\n    const formatter = useMemo(() => currencyFormatter(paymentDenom), [paymentDenom])\n\n    return <Modal requestClose={requestClose}>\n        <FormProvider {...formMethods}>\n            <form onSubmit={formMethods.handleSubmit((data: any) => onSubmit(data.amount))}>\n                <Header style={{ marginTop: 0 }}>Make a Payment</Header>\n                <Input required=\"Please specify a payment amount\" type=\"number\" name=\"amount\" label={`Amount (${paymentDenom})`} registerConfig={{ max: outstandingBalance }} />\n                <div>Outstanding Balance: {formatter(outstandingBalance)}</div>\n                <Button width=\"100%\" type=\"submit\">Submit</Button>\n            </form>\n        </FormProvider>\n    </Modal>\n}","import { FunctionComponent, MouseEventHandler, useEffect, useRef, useState } from \"react\";\nimport { QRCode } from \"react-qrcode-logo\";\nimport { useLocation } from \"react-router-dom\";\nimport { Modal } from 'Components/Modal';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Button, Popup } from \"Components\";\nimport styled from \"styled-components\";\nimport { Colors } from \"consts\";\n\nconst QrWrapper = styled.div`\n    cursor: pointer;\n    margin-bottom: 20px;\n`\n\ninterface ClipboardItem {\n    readonly types: string[];\n    readonly presentationStyle: \"unspecified\" | \"inline\" | \"attachment\";\n    getType(): Promise<Blob>;\n}\n\ninterface ClipboardItemData {\n    [mimeType: string]: Blob | string | Promise<Blob | string>;\n}\n\ndeclare var ClipboardItem: {\n    prototype: ClipboardItem;\n    new (itemData: ClipboardItemData): ClipboardItem;\n};\n\nexport interface QRModalProps {\n    requestClose: () => any\n}\n\nexport const QRModal: FunctionComponent<QRModalProps> = ({ requestClose }) => {\n    const [copyMessage, setCopyMessage] = useState(\"\")\n    const [qrContent, setQrContent] = useState<any>(null)\n    const ref = useRef<QRCode>(null)\n    \n    const url = window.location.href;\n\n    useEffect(() => {\n        (ref?.current as any)?.canvas.current.toBlob((blob: any) => {\n            setQrContent(blob)\n        })\n    }, [ref])\n\n    const copyQrToClipboard: MouseEventHandler = e => {\n        try {\n            const content = (e.target as HTMLCanvasElement).toBlob(blob => {\n                if (!blob) {\n                    setCopyMessage(\"Failed to copy qr contents to clipboard, please share link\")\n                } else {\n                    (navigator.clipboard as any).write([new ClipboardItem({ \"image/png\": blob })])\n                    setCopyMessage(\"QR Code Copied to Clipboard\")\n                }\n            })\n        } catch (e) {\n            setCopyMessage(\"Failed to copy qr contents to clipboard, please share link\")\n        }\n    }\n\n    return <Modal requestClose={requestClose}>\n        <div style={{ textAlign: 'center' }}>click on QR code to copy</div>\n        <QrWrapper onClick={copyQrToClipboard}>\n            <QRCode ref={ref} size={300} value={url} />\n        </QrWrapper>\n        <CopyToClipboard text={url} onCopy={(text, result) => {\n            console.log({ text, result })\n            setCopyMessage(`${text} was copied to clipboard`)\n        }}>\n            <Button width=\"100%\">Copy URL to Clipboard</Button>\n        </CopyToClipboard>\n        {copyMessage && <Popup onClose={() => {\n            setCopyMessage(\"\")\n            requestClose()\n        }}>{copyMessage}</Popup>}\n    </Modal>\n}","import { FunctionComponent, useState } from 'react';\nimport { Button } from 'Components';\nimport { QRModal } from 'Components/QRModal';\nimport styled from 'styled-components';\nimport { Colors } from 'consts';\n\nconst ShareIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">    <path d=\"M 18 2 A 3 3 0 0 0 15 5 A 3 3 0 0 0 15.054688 5.5605469 L 7.9394531 9.7109375 A 3 3 0 0 0 6 9 A 3 3 0 0 0 3 12 A 3 3 0 0 0 6 15 A 3 3 0 0 0 7.9355469 14.287109 L 15.054688 18.439453 A 3 3 0 0 0 15 19 A 3 3 0 0 0 18 22 A 3 3 0 0 0 21 19 A 3 3 0 0 0 18 16 A 3 3 0 0 0 16.0625 16.712891 L 8.9453125 12.560547 A 3 3 0 0 0 9 12 A 3 3 0 0 0 8.9453125 11.439453 L 16.060547 7.2890625 A 3 3 0 0 0 18 8 A 3 3 0 0 0 21 5 A 3 3 0 0 0 18 2 z\"/></svg>\n\nconst StyledButton = styled(Button)`\n    svg {\n        fill: white;\n        margin-right: 10px;\n    }\n`\n\nexport interface ShareButtonProps {\n\n}\n\nexport const ShareButton: FunctionComponent<ShareButtonProps> = ({}) => {\n    const [qrOpen, setQrOpen] = useState(false)\n\n    return <>\n        {qrOpen && <QRModal requestClose={() => setQrOpen(false)} />}\n        <StyledButton onClick={() => setQrOpen(true)}><ShareIcon /> Share</StyledButton>\n    </>\n}","import { useMemo, useState } from 'react'\nimport { FormWrapper } from \"Components/Form\";\nimport { Colors, DISPLAY_DATE_FORMAT, INVOICE_DATE_FORMAT, ROOT_PAYABLE_NAME } from \"consts\";\nimport { parse, format } from \"date-fns\";\nimport { useGetCalc } from \"hooks\";\nimport { FunctionComponent } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { enumStringToHumanReadable, currencyFormatter } from \"../../../util\";\nimport { Button } from 'Components';\nimport { PaymentModal } from 'Components/PaymentModal';\nimport { MultiMessageStepModal, parseSignMessage, SignMessage } from 'Components/MultiMessageStepModal';\nimport { InvoiceContractService } from 'Services';\nimport { useWalletConnect } from '@provenanceio/walletconnect-js';\nimport { MsgExecuteContract } from '@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/tx_pb';\nimport {LineItemCalc, PaymentCalc} from \"../../../models/InvoiceCalc\";\nimport AddressLink from \"../../AddressLink\";\nimport { ShareButton } from 'Components/ShareButton';\n\nconst InvoiceHeader = styled.div`\n    display: flex;\n    font-size: 1.4rem;\n    padding: 30px 0;\n    justify-content: space-between;\n\n    > * {\n        flex-grow: 0;\n        flex-basis: min-content;\n        white-space: nowrap;\n    }\n`\n\nconst SimpleTwoColumn = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 10px;\n\n    > :nth-child(odd) {\n        text-align: right;\n    }\n`\n\nconst InvoiceLineItems = styled.div``\n\nconst InvoiceItemDetail = styled.div`\n    display: grid;\n    grid-template-columns: 4fr 2fr 1fr 1fr;\n    grid-gap: 10px;\n    padding: 10px 20px;\n    font-size: 1.3rem;\n\n    > :nth-child(2) {\n        text-align: center;\n    }\n\n    > :nth-child(3), > :nth-child(4) {\n        text-align: right;\n    }\n\n    &:nth-child(odd):not(:first-child) {\n        background-color: rgba(0, 0, 0, .1);\n    }\n`\n\nconst InvoiceLineItemHeader = styled(InvoiceItemDetail)`\n    background: ${Colors.DARK_BACKGROUND};\n    color: ${Colors.LIGHT};\n    font-weight: bold;\n`\n\nconst InvoicePayments = styled.div``\n\nconst InvoicePaymentHeader = styled(InvoiceItemDetail)`\n    background: ${Colors.PAYMENT_BLUE};\n    color: ${Colors.LIGHT};\n    font-weight: bold;\n`\n\nconst InvoiceFooter = styled.div`\n    display: grid;\n    grid-gap: 10px;\n    padding: 10px 20px;\n    border-top: 2px solid ${Colors.DARKEN};\n    grid-template-columns: 4fr 3fr 1fr;\n    font-size: 1.3rem;\n    text-align: right;\n`\n\nconst ActionContainer = styled.div`\n    display: flex;\n    > :not(:last-child) {\n        margin-right: 5px;\n    }\n`\n\nexport interface InvoiceDetailsProps {\n\n}\n\nexport const InvoiceDetails: FunctionComponent<InvoiceDetailsProps> = ({ }) => {\n    const { uuid } = useParams()\n    const { data: invoiceCalc, isError, isLoading, refetch: refreshInvoice, } = useGetCalc(uuid || '')\n    const [paymentOpen, setPaymentOpen] = useState(false)\n    const [messages, setMessages] = useState<SignMessage[]>([])\n\n    const { walletConnectState: { address } } = useWalletConnect()\n\n    const paymentDenom = invoiceCalc?.paymentDenom || 'USD'\n    const formatter = useMemo(() => currencyFormatter(paymentDenom), [paymentDenom])\n\n    const service = new InvoiceContractService(ROOT_PAYABLE_NAME)\n\n    if (!invoiceCalc || isError) {\n        return <div>Error retrieving invoice</div>\n    }\n\n    if (isLoading) {\n        return <div>Loading...</div>\n    }\n\n    const dateFormat = (date?: string) => format(parse(date || '', INVOICE_DATE_FORMAT, new Date()), DISPLAY_DATE_FORMAT)\n\n    const timestampToDate = (timestamp: string) => format(Date.parse(timestamp), DISPLAY_DATE_FORMAT)\n\n    const handlePayment = async (amount: number) => {\n        setPaymentOpen(false)\n\n        const message = await service.generateMakePaymentBase64Message(invoiceCalc?.uuid || '', amount, paymentDenom, address)\n\n        setMessages([\n            parseSignMessage({ typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract', value: message }, MsgExecuteContract.deserializeBinary)\n        ])\n    }\n\n    const handleCompletedPayment = () => {\n        setMessages([])\n        refreshInvoice()\n    }\n\n    const action = <ActionContainer>\n        <ShareButton />\n        <Button disabled={!invoiceCalc || invoiceCalc.paidOff || invoiceCalc.paymentStatus == 'RESTRICTED'} onClick={() => setPaymentOpen(true)}>Make Payment</Button>\n    </ActionContainer>\n\n    return <>\n        {messages?.length > 0 && <MultiMessageStepModal messages={messages} onComplete={handleCompletedPayment} />}\n        {paymentOpen && <PaymentModal requestClose={() => setPaymentOpen(false)} invoiceUuid={uuid || ''} outstandingBalance={invoiceCalc?.remainingOwed} paymentDenom={invoiceCalc.paymentDenom} initialAmount={0} onSubmit={handlePayment} />}\n        <FormWrapper title=\"Invoice Details\" action={action}>\n            <InvoiceHeader>\n                <div>\n                    <div>\n                        <b>Description:</b> {invoiceCalc.description}\n                    </div>\n                    <div>\n                        <b>From:</b> {invoiceCalc.ownerAddress}\n                    </div>\n                    <div>\n                        <b>To:</b> {invoiceCalc.payerAddress}\n                    </div>\n                </div>\n                <div>\n                    <SimpleTwoColumn>\n                        <b>UUID:</b>\n                        <div>{invoiceCalc.uuid}</div>\n                        <b>Created Date:</b>\n                        <div>{dateFormat(invoiceCalc.createdDate)}</div>\n                        <b>Due Date:</b>\n                        <div>{dateFormat(invoiceCalc.dueDate)}</div>\n                        <b>Onboarding Status:</b>\n                        <div>{enumStringToHumanReadable(invoiceCalc.invoiceStatus)}</div>\n                        <b>Payment Status:</b>\n                        <div>{enumStringToHumanReadable(invoiceCalc.paymentStatus)}</div>\n                    </SimpleTwoColumn>\n                </div>\n            </InvoiceHeader>\n            <InvoiceLineItems>\n                <InvoiceLineItemHeader>\n                    <div>Items</div>\n                    <div>Quantity</div>\n                    <div>Price</div>\n                    <div>Amount</div>\n                </InvoiceLineItemHeader>\n                {invoiceCalc?.lineItems?.map((lineItem: LineItemCalc, i: number) => <InvoiceItemDetail key={`lineItem-${i}`}>\n                    <div>\n                        <b>{lineItem.name}</b>\n                        <p>{lineItem.description}</p>\n                    </div>\n                    <div>{lineItem.quantity}</div>\n                    <div>{formatter(lineItem.price)}</div>\n                    <div><b>{formatter(lineItem.total)}</b></div>\n                </InvoiceItemDetail>)}\n            </InvoiceLineItems>\n            {invoiceCalc?.payments?.length > 0 && (\n                <InvoicePayments>\n                    <InvoicePaymentHeader>\n                        <div>Payments</div>\n                        <div>Date</div>\n                        <div>Sender</div>\n                        <div>Amount</div>\n                    </InvoicePaymentHeader>\n                    {invoiceCalc?.payments?.map((payment: PaymentCalc, i: number) => <InvoiceItemDetail key={`payment=${i}`}>\n                        <div>UUID: {payment.uuid}</div>\n                        <div>{timestampToDate(payment.effectiveTime)}</div>\n                        <AddressLink address={payment.fromAddress} showAddressText={false} altText={'View'} />\n                        <div><b>{payment.paymentAmount}{payment.paymentDenom}</b></div>\n                    </InvoiceItemDetail>)}\n                </InvoicePayments>\n            )}\n            <InvoiceFooter>\n                <div />\n                <b>Total:</b>\n                <b>{formatter(invoiceCalc?.originalOwed || 0)}</b>\n                <div />\n                <b>Payments:</b>\n                <b>{invoiceCalc?.paymentSum > 0 ? \"- \" : \"\"}{formatter(invoiceCalc?.paymentSum || 0)}</b>\n                <div style={{borderBottom: '2px solid grey', gridColumn: '2/4' }} />\n                <div />\n                <b>Amount Due:</b>\n                <div><b>{formatter(invoiceCalc?.remainingOwed || 0)}</b></div>\n            </InvoiceFooter>\n        </FormWrapper>\n    </>\n}\n","import { useQuery } from \"react-query\"\nimport { toInvoice } from \"../util\";\nimport { BASE_URL } from '../consts/network';\nimport { InvoiceCalc } from \"../models/InvoiceCalc\";\n\nexport const useGetInvoice = (uuid: string) => {\n    return useQuery(['invoices', uuid], async () => {\n        const res = await fetch(`${BASE_URL}/invoices/${uuid}`)\n        \n        const invoice = await res.text()\n\n        return toInvoice(invoice)\n    })\n}\n\nexport const useGetCalc = (uuid: string) => {\n    return useQuery(['calc', uuid], async () => {\n        const res = await fetch(`${BASE_URL}/invoices/calc/${uuid}`)\n\n        const invoiceCalcJson = await res.text()\n\n        const invoiceCalc: InvoiceCalc = JSON.parse(invoiceCalcJson)\n\n        return invoiceCalc\n    })\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  useWalletConnect,\n  QRCodeModal,\n  WINDOW_MESSAGES as WINDOW_MESSAGE,\n} from \"@provenanceio/walletconnect-js\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Connect, Disconnect, Popup } from \"Components\";\nimport { ROOT_NAME } from \"consts\";\nimport { REACT_APP_WCJS_VERSION } from \"./version\"; // eslint-disable-line\nimport { useWallet } from \"@provenanceio/wallet-lib\";\nimport { TEXT_ACCENT, PRIMARY_BACKGROUND, TEXT } from \"./consts/colors\";\nimport { Header, SubHeader } from \"Components/Headers\";\nimport { ConversionUtil } from \"./util/ConversionUtil\";\nimport { TabContainer } from \"Components/Tabs\";\nimport AddressLink from \"Components/AddressLink\";\nimport { BigParagraph } from \"Components/Display\";\nimport { SidebarLayout, SidebarLink } from \"./Components/Layout/Sidebar\";\nimport { ListInvoices } from \"./Components/Pages/List/ListInvoices\";\nimport { CreateInvoice } from \"./Components/Pages/Create/CreateInvoice\";\nimport { InvoiceDetails } from \"Components/Pages/Details\";\n\nconst Wrapper = styled.div`\n  background: ${PRIMARY_BACKGROUND};\n`;\nconst HomeContainer = styled.div`\n  max-width: 100%;\n  min-height: 100vh;\n  position: relative;\n`;\nconst Content = styled.div`\n  min-width: 600px;\n  padding: 30px 50px;\n  border-radius: 4px;\n  margin-bottom: 40px;\n`;\nconst WalletConnectVersion = styled.div`\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n`;\n\nexport const App = () => {\n  const [popupContent, setPopupContent] = useState(\"\");\n  const [popupStatus, setPopupStatus] = useState(\"success\");\n  const [popupDuration, setPopupDuration] = useState(2500);\n  const [hashAmount, setHashAmount] = useState(null);\n  const [listenersAdded, setListenersAdded] = useState(false);\n\n  const { walletConnectService: wcs, walletConnectState } = useWalletConnect();\n  const { address, connected, peer } = walletConnectState;\n\n  const setPopup = (message, status, duration) => {\n    setPopupContent(message);\n    if (status) {\n      setPopupStatus(status);\n    }\n    if (duration) {\n      setPopupDuration(duration);\n    }\n  };\n\n  const { grpcService } = useWallet();\n\n  const fetchBalance = () => {\n    if (address) {\n      grpcService.getBalancesList(address).then((balances) => {\n        let hashAmount = ConversionUtil.getHashBalance(balances);\n        if (hashAmount) {\n          setHashAmount(hashAmount);\n        }\n      });\n    } else {\n      setHashAmount(null);\n    }\n  };\n  useEffect(() => {\n    fetchBalance();\n  }, [address]);\n\n  useEffect(() => {\n    setListenersAdded(true);\n    wcs.addListener(WINDOW_MESSAGE.CUSTOM_ACTION_COMPLETE, (result) => {\n      console.log(\n        `WalletConnectJS | Custom Action Complete | Result: `,\n        result\n      );\n    });\n\n    wcs.addListener(WINDOW_MESSAGE.CUSTOM_ACTION_FAILED, (result) => {\n      const { error } = result;\n      console.log(\n        `WalletConnectJS | Custom Action Failed | result, error: `,\n        result,\n        error\n      );\n    });\n  }, []);\n\n  return (\n    <Wrapper>\n      <HomeContainer>\n        <Router basename=\"fe-invoice\">\n          {popupContent && (\n            <Popup\n              delay={popupDuration}\n              onClose={() => setPopupContent(\"\")}\n              status={popupStatus}\n            >\n              {popupContent}\n            </Popup>\n          )}\n          <SidebarLayout\n            sidebarContent={\n              <>\n                <Header>InVoice</Header>\n                {connected ? (\n                  <>\n                    <SidebarLink to=\"/\">My Invoices</SidebarLink>\n                    <SidebarLink to=\"/create\">Create Invoice</SidebarLink>\n                    <Disconnect\n                      walletConnectService={wcs}\n                      setPopup={setPopup}\n                    />\n                  </>\n                ) : (\n                  <Connect walletConnectService={wcs} setPopup={setPopup} />\n                )}\n                <WalletConnectVersion>\n                  WalletConnect-JS Version:{\" \"}\n                  {REACT_APP_WCJS_VERSION || \"??.??.??\"}\n                </WalletConnectVersion>\n              </>\n            }\n          >\n            {connected && (\n              <Routes>\n                <Route path=\"/\" element={<ListInvoices />} />\n                <Route path=\"/create\" element={<CreateInvoice />} />\n                <Route path=\"/:uuid\" element={<InvoiceDetails />} />\n                <Route path=\"*\" element={<ListInvoices />} />\n              </Routes>\n            )}\n          </SidebarLayout>\n          <QRCodeModal\n            walletConnectService={wcs}\n            walletConnectState={walletConnectState}\n            title=\"Scan to initiate walletConnect-js session\"\n          />\n        </Router>\n      </HomeContainer>\n    </Wrapper>\n  );\n};\n","export const REACT_APP_WCJS_VERSION = \"0.1.51\"\n","import ReactDOM from \"react-dom\";\nimport { WalletConnectContextProvider } from \"@provenanceio/walletconnect-js\";\nimport { WalletContextProvider } from \"@provenanceio/wallet-lib\";\nimport { StrictMode } from \"react\";\nimport { App } from \"./App\";\n// Bring in Google Fonts and base styles\nimport \"./base.css\";\nimport { GRPC_URL, NETWORK, WALLET_URL } from \"./consts/network\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <StrictMode>\n    <WalletConnectContextProvider\n      network={NETWORK}\n      bridge=\"https://bridge.walletconnect.org/\"\n    >\n      <WalletContextProvider\n        grpcServiceAddress={GRPC_URL}\n        walletUrl={WALLET_URL}\n      >\n        <QueryClientProvider client={queryClient}>\n          <App />\n        </QueryClientProvider>\n      </WalletContextProvider>\n    </WalletConnectContextProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const PRIMARY_BACKGROUND = '#F2EEE3'\nexport const DARK_BACKGROUND = '#2D2D2A';\nexport const LIGHT_TEXT = '#E5DCC5'\nexport const TEXT = '#000'\nexport const TEXT_ACCENT = '#5184A4'\nexport const LIGHT = '#FFF'\nexport const DARKEN = '#EDEBE9'\nexport const DARK = '#655C53'\nexport const WARN = '#E53B10'\nexport const ACTION = '#42368E';\nexport const PAYMENT_BLUE = '#566BF5';\n","import { ContractMsg } from \"./ContractBase\"\n\nexport class QueryInvoiceSettings {\n    query_state: {} = {}\n}\n\nexport interface QueryInvoiceSettingsResponse {\n    // Name of the contract that is tagged on various things\n    contract_name: string,\n    // Cost to onboard each payable\n    onboarding_cost: string, // todo: validate type\n    // Coin type for onboarding charge\n    onboarding_denom: string,\n    // The address that will collect onboarding fees\n    fee_collection_address: string,\n    // Percentage of each transaction that is taken as fee\n    fee_percent: string, // i.e. '0.5'\n    // Address of the oracle application that can withdraw excess fees after fee percent is removed from onboarding_cost\n    oracle_address: string,\n}\n\nexport class QueryPayableState {\n    query_payable: {\n        payable_uuid: string,\n    } = {\n        payable_uuid: ''\n    }\n\n    setPayableUuid(payable_uuid: string): QueryPayableState {\n        this.query_payable.payable_uuid = payable_uuid\n        return this\n    }\n}\n\nexport interface QueryPayableStateResponse {\n    payable_uuid: string,\n    // The address of the scope created during onboarding of a payable\n    scope_id: string,\n    // The denomination the payable accepts for payment\n    payable_denom: string,\n    // The amount of payable_denom that the payable was originally created to reflect\n    payable_total_owed: string,\n    // The amount of payable_denom left unpaid on the payable\n    payable_remaining_owed: string,\n    // Whether or not the oracle has reviewed the structure of the payable and determine if it is\n    // a valid payable\n    oracle_approved: boolean,\n}\n\nexport class RegisterPayable extends ContractMsg {\n    register_payable: {\n        payable_type: string,\n        payable_uuid: string,\n        scope_id: string,\n        payable_denom: string,\n        payable_total: string,\n    } = {\n        payable_type: '',\n        payable_uuid: '',\n        scope_id: '',\n        payable_denom: '',\n        payable_total: '',\n    }\n\n    setPayableType(payable_type: string): RegisterPayable {\n        this.register_payable.payable_type = payable_type\n        return this\n    }\n\n    setPayableUuid(payable_uuid: string): RegisterPayable {\n        this.register_payable.payable_uuid = payable_uuid\n        return this\n    }\n\n    setScopeId(scope_id: string): RegisterPayable {\n        this.register_payable.scope_id = scope_id\n        return this\n    }\n\n    setPayableDenom(payable_denom: string): RegisterPayable {\n        this.register_payable.payable_denom = payable_denom\n        return this\n    }\n\n    setPayableTotal(payable_total: string): RegisterPayable {\n        this.register_payable.payable_total = payable_total\n        return this\n    }\n}\nexport class MakePayment extends ContractMsg {\n    make_payment: {\n        payable_uuid: string,\n    } = {\n        payable_uuid: '',\n    }\n\n    setPayableUuid(payable_uuid: string): MakePayment {\n        this.make_payment.payable_uuid = payable_uuid\n        return this\n    }\n}\n","export * from './WasmService'\nexport * from './InvoiceContractService'","export class ContractMsg {\n    toJson(): string {\n        return JSON.stringify(this)\n    }\n}"],"sourceRoot":""}