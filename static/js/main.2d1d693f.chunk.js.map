{"version":3,"sources":["models/NameContract.ts","proto/util_protos_pb.js","util/ConversionUtil.ts","services/NameContractService.ts","proto/invoice_protos_pb.js","services/WasmService.ts","services/InvoiceContractService.ts","util/proto.ts","Components/MultiMessageStepModal/MultiMessageStepModal.tsx","util/currency.ts","util/strings.ts","Components/Button/Button.js","Components/Popup/Popup.js","Components/Form/FormWrapper.tsx","Components/Form/FormRow.tsx","Components/Form/FormActions.tsx","Components/Form/InputError.tsx","Components/Input/Input.js","Components/Loading/Loading.js","Components/Dropdown/Dropdown.js","Components/Actions/ActionContainer.js","Components/Actions/Action.js","Components/Actions/Connect.js","Components/Actions/Disconnect.js","Components/AddressLink/AddressLink.js","Components/Tabs/Tabs.tsx","Components/Layout/Sidebar/SidebarLayout.tsx","Components/Display/index.tsx","hooks/useInvoiceList.ts","hooks/useGetNames.ts","Components/Search/Search.tsx","Components/Filters/ListFilters.tsx","Components/Filters/ToggleFilter.tsx","Components/Pages/List/ListInvoices.tsx","Components/Vendor/VendorSelector.tsx","hooks/useVendors.ts","Components/Error/ErrorBar.tsx","Components/Submitting/SubmittingOverlay.tsx","Components/Pages/Create/InvoiceLineItem.tsx","Components/Pages/Create/CreateInvoice.tsx","hooks/useCreateInvoice.ts","hooks/useGetDenoms.ts","Components/PaymentModal/PaymentModal.tsx","Components/QRModal/QRModal.tsx","Components/ShareButton/ShareButton.tsx","Components/Pages/Details/InvoiceDetails.tsx","hooks/useGetInvoice.ts","App.js","version.js","index.js","consts/network.ts","consts/colors.ts","Components/Headers/index.tsx","consts/date.ts","consts/size.ts","models/InvoiceContract.ts","services/index.ts","models/ContractBase.ts","Components/Modal/Modal.tsx"],"names":["QueryNamesByAddress","address","query_names_by_address","this","QueryAddressByName","name","query_address_by_name","SearchNamesRequest","search","search_for_names","QuerySettings","query_request","RegisterName","register","ContractMsg","jspb","require","goog","global","Function","exportSymbol","proto","invoice","UUID","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","Decimal","Date","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","value","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setValue","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","getValue","length","writeString","setProto3StringField","object","extend","exports","ConversionUtil","balanceResponse","nhash","balancesList","find","coin","denom","amount","convertNanoHashToHash","error","console","log","nanoHash","NameContractService","rootName","wasmService","WasmService","contractAddress","a","lookupContractByName","getContractAddress","queryWasmCustom","queryRes","names","Promise","all","getContractConfig","contractAddr","contractConfig","MsgExecuteContract","setMsg","Buffer","from","setName","toJson","toString","setFundsList","Coin","setAmount","fee_amount","setDenom","FEE_DENOM","setContract","setSender","any","Any","setTypeUrl","util_protos_pb","Invoice","repeatedFields_","LineItem","invoiceUuid","getInvoiceUuid","fromAddress","toAddress","invoiceCreatedDate","getInvoiceCreatedDate","invoiceDueDate","getInvoiceDueDate","description","paymentDenom","lineItemsList","toObjectList","getLineItemsList","readMessage","setInvoiceUuid","setFromAddress","setToAddress","setInvoiceCreatedDate","setInvoiceDueDate","setDescription","setPaymentDenom","addLineItems","undefined","writeMessage","getFromAddress","getToAddress","getDescription","getPaymentDenom","writeRepeatedMessage","getWrapperField","setWrapperField","clearInvoiceUuid","hasInvoiceUuid","getField","clearInvoiceCreatedDate","hasInvoiceCreatedDate","clearInvoiceDueDate","hasInvoiceDueDate","getRepeatedWrapperField","setLineItemsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearLineItemsList","lineUuid","getLineUuid","quantity","price","getPrice","setLineUuid","readInt32","setQuantity","setPrice","getName","getQuantity","writeInt32","clearLineUuid","hasLineUuid","setProto3IntField","clearPrice","hasPrice","nameQueryClient","NameQueryClient","GRPC_URL","wasmQueryClient","WasmQueryClient","resolve","reject","QueryResolveRequest","res","Error","code","getAddress","query","queryData","JSON","stringify","smartContractState","QuerySmartContractStateRequest","setAddress","setQueryData","parse","getData_asU8","InvoiceContractService","QueryInvoiceSettings","payableUuid","QueryPayableState","setPayableUuid","contractDetail","RegisterPayable","setPayableType","payableType","setScopeId","scopeId","setPayableDenom","invoiceDenom","setPayableTotal","invoiceTotal","onboarding_cost","onboarding_denom","MakePayment","newInvoice","newRandomUuid","newLineItem","uuidv4","newDate","date","DateProto","format","INVOICE_DATE_FORMAT","newDecimal","decodeB64","b64","toInvoice","parseSignMessage","anyProto","deserializer","modifier","m","deserialized","MultiMessageStepModal","messages","onComplete","useState","current","setCurrent","wcs","useNavigate","useWalletConnect","walletConnectService","handleSign","customAction","typeUrl","method","useEffect","c","Math","min","usdFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","currencyFormatter","enumStringToHumanReadable","input","split","reduce","word","charAt","toUpperCase","substr","toLowerCase","StyledButton","styled","button","width","backgroundColor","borderColor","color","disabled","secondary","css","ButtonContent","div","Button","className","onClick","children","title","type","loading","handleClick","onKeyPress","e","key","defaultProps","PopupContainer","SlideInAnimation","keyframes","SlideOutAnimation","PopupContent","status","isClosing","CloseIcon","Content","Popup","onClose","delay","setIsClosing","delayCloseTimeout","setTimeout","clearTimeout","Wrapper","Colors","LIGHT","Header","DARK","HeaderRow","SM","Title","Action","FormWrapper","action","headerDetails","FormRow","columns","FormActions","WARN","InputError","InputContainer","StyledInput","Label","label","Input","onChange","placeholder","required","registerConfig","useFormContext","control","useFormState","errors","target","Svg","svg","Loading","height","xmlns","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","repeatCount","dur","values","keyTimes","Container","Group","SelectContainer","StyledSelect","select","DropdownIcon","TEXT","Dropdown","options","htmlFor","map","index","isLoading","justify","noMargin","LG","ActionContainer","setPopup","fields","buttonTxt","windowMessage","walletConnectState","WINDOW_MESSAGES","windowMessageLookup","windowMsgComplete","windowMsgFailed","initialInputValues","forEach","inputValues","setInputValues","addListener","result","removeAllListeners","newInputValues","changeInputValue","Object","keys","Info","Connect","CONNECTED","connect","Disconnect","DISCONNECT","disconnect","AddressLink","active","DARKEN","altText","showAddressText","href","EXPLORER_URL","rel","p","Sidebar","DARK_BACKGROUND","LIGHT_TEXT","SidebarLayout","sidebarContent","SidebarLink","NavLink","attrs","activeclassname","exact","TEXT_ACCENT","useInvoiceList","nameService","ROOT_NAME","useQuery","listNames","useGetNames","myNames","data","fetch","BASE_URL","json","headers","body","addresses","results","SearchInput","borderRadius","marginBottom","maxWidth","MD","Search","formMethods","useForm","IconWrapper","Icon","d","transform","ListFilters","Item","option","ToggleFilter","opt","i","TotalDetails","InvoiceTable","TableElement","InvoiceRowWrapper","InvoiceRow","formatter","useMemo","to","uuid","totalOwed","calc","remainingOwed","paymentStatus","InvoiceHeaderWrapper","InvoiceHeader","ListInvoices","setFrom","invoices","isError","navigate","details","VendorSelector","searchTerm","searchNames","useVendors","vendors","v","ErrorBar","SubmittingOverlay","InvoiceLineItem","TermsSelector","LineItemWrapper","CreateInvoice","onCreate","lineItems","rest","resBody","useCreateInvoice","denoms","reviewing","setReviewing","submitting","setSubmitting","signing","setSigning","setMessages","handleComplete","setHandleComplete","setError","reValidateMode","defaultValues","invoice_date","line_item","handleSubmit","setLineItems","addLineItem","dummyItem","getValues","createInvoice","startDate","dueDate","addDays","parseInt","terms","vendor","lineItem","createResult","invoiceContractService","ROOT_PAYABLE_NAME","scopeGenerationDetail","writeScopeRequest","MsgWriteScopeRequest","writeSessionRequest","MsgWriteSessionRequest","writeRecordRequest","MsgWriteRecordRequest","generateCreateInvoiceBase64Message","payablesContractExecutionDetail","onSubmit","preventDefault","li","PaymentModal","outstandingBalance","initialAmount","requestClose","Modal","marginTop","max","QrWrapper","QRModal","copyMessage","setCopyMessage","setQrContent","ref","useRef","url","window","location","canvas","toBlob","blob","textAlign","navigator","clipboard","write","ClipboardItem","size","text","onCopy","ShareIcon","ShareButton","qrOpen","setQrOpen","SimpleTwoColumn","InvoiceLineItems","InvoiceItemDetail","InvoiceLineItemHeader","InvoicePayments","InvoicePaymentHeader","PAYMENT_BLUE","InvoiceFooter","InvoiceDetails","useParams","invoiceCalcJson","invoiceCalc","useGetCalc","refreshInvoice","refetch","paymentOpen","setPaymentOpen","service","dateFormat","DISPLAY_DATE_FORMAT","handlePayment","generateMakePaymentBase64Message","paidOff","ownerAddress","payerAddress","createdDate","invoiceStatus","total","payments","payment","timestamp","effectiveTime","paymentAmount","gridColumn","originalOwed","paymentSum","borderBottom","PRIMARY_BACKGROUND","HomeContainer","WalletConnectVersion","Logo","App","popupContent","setPopupContent","popupStatus","setPopupStatus","popupDuration","setPopupDuration","setHashAmount","setListenersAdded","connected","peer","duration","grpcService","useWallet","getBalancesList","then","balances","hashAmount","getHashBalance","WINDOW_MESSAGE","CUSTOM_ACTION_COMPLETE","CUSTOM_ACTION_FAILED","basename","path","element","QRCodeModal","queryClient","QueryClient","ReactDOM","render","network","NETWORK","grpcServiceAddress","walletUrl","WALLET_URL","client","document","getElementById","process","PRODUCTION","ACTION","h1","SubHeader","h2","H3","h3","Value","TitleHeader","query_state","query_payable","payable_uuid","register_payable","payable_type","scope_id","payable_denom","payable_total","make_payment","Body","Close","stopPropagation"],"mappings":"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","file":"static/js/main.2d1d693f.chunk.js","sourcesContent":["import { ContractMsg } from \"./ContractBase\"\n\nexport class QueryNamesByAddress {\n    query_names_by_address: {\n        address: string\n    }\n\n    constructor(address: string) {\n        this.query_names_by_address = { address }\n    }\n}\n\nexport interface QueryNamesByAddressResponse {\n    address: string,\n    names: string[]\n}\n\nexport class QueryAddressByName {\n    query_address_by_name: {\n        name: string\n    }\n\n    constructor(name: string) {\n        this.query_address_by_name = { name }\n    }\n}\n\nexport interface QueryAddressByNameResponse {\n    address: string,\n    name: string\n}\n\nexport class SearchNamesRequest {\n    search_for_names: {\n        search: string\n    }\n\n    constructor(search: string) {\n        this.search_for_names = { search };\n    }\n}\n\nexport class NameMetaData {\n    name: string\n    address: string\n\n    constructor(name: string, address: string) {\n        this.name = name;\n        this.address = address;\n    }\n}\n\nexport interface SearchNamesQueryResponse {\n    search: string,\n    names: NameMetaData[]\n}\n\nexport class QuerySettings {\n    query_request: {} = {}\n}\n\nexport interface QuerySettingsResponse {\n    name: string,\n    fee_amount: string,\n    fee_collection_address: string,\n}\n\nexport class RegisterName extends ContractMsg {\n    register: {\n        name: string\n    } = { name: '' }\n\n    setName(name: string): RegisterName {\n        this.register.name = name\n        return this\n    }\n}\n","// source: util_protos.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.invoice.Date', null, global);\ngoog.exportSymbol('proto.invoice.Decimal', null, global);\ngoog.exportSymbol('proto.invoice.UUID', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.invoice.UUID = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.invoice.UUID, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.invoice.UUID.displayName = 'proto.invoice.UUID';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.invoice.Decimal = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.invoice.Decimal, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.invoice.Decimal.displayName = 'proto.invoice.Decimal';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.invoice.Date = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.invoice.Date, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.invoice.Date.displayName = 'proto.invoice.Date';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.invoice.UUID.prototype.toObject = function(opt_includeInstance) {\n  return proto.invoice.UUID.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.invoice.UUID} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.UUID.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.invoice.UUID}\n */\nproto.invoice.UUID.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.invoice.UUID;\n  return proto.invoice.UUID.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.invoice.UUID} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.invoice.UUID}\n */\nproto.invoice.UUID.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.invoice.UUID.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.invoice.UUID.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.invoice.UUID} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.UUID.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string value = 1;\n * @return {string}\n */\nproto.invoice.UUID.prototype.getValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.UUID} returns this\n */\nproto.invoice.UUID.prototype.setValue = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.invoice.Decimal.prototype.toObject = function(opt_includeInstance) {\n  return proto.invoice.Decimal.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.invoice.Decimal} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Decimal.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.invoice.Decimal}\n */\nproto.invoice.Decimal.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.invoice.Decimal;\n  return proto.invoice.Decimal.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.invoice.Decimal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.invoice.Decimal}\n */\nproto.invoice.Decimal.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.invoice.Decimal.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.invoice.Decimal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.invoice.Decimal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Decimal.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string value = 1;\n * @return {string}\n */\nproto.invoice.Decimal.prototype.getValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Decimal} returns this\n */\nproto.invoice.Decimal.prototype.setValue = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.invoice.Date.prototype.toObject = function(opt_includeInstance) {\n  return proto.invoice.Date.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.invoice.Date} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Date.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.invoice.Date}\n */\nproto.invoice.Date.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.invoice.Date;\n  return proto.invoice.Date.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.invoice.Date} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.invoice.Date}\n */\nproto.invoice.Date.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.invoice.Date.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.invoice.Date.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.invoice.Date} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Date.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string value = 1;\n * @return {string}\n */\nproto.invoice.Date.prototype.getValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Date} returns this\n */\nproto.invoice.Date.prototype.setValue = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.invoice);\n","import { QueryAllBalancesResponse } from '@provenanceio/wallet-lib/lib/proto/cosmos/bank/v1beta1/query_pb';\n\nexport class ConversionUtil {\n    static getHashBalance(balanceResponse?: QueryAllBalancesResponse.AsObject): number | null {\n        if (!balanceResponse) {\n            return null;\n        }\n        let nhash = balanceResponse.balancesList.find(coin => coin.denom === \"nhash\");\n        if (!nhash?.amount) {\n            return null;\n        }\n        try {\n            return this.convertNanoHashToHash(+nhash.amount);\n        } catch (error) {\n            console.log(`Failed to convert derived nano amount [${nhash?.amount}] to hash: ${error}`);\n            return null;\n        }\n    }\n\n    static convertNanoHashToHash(nanoHash: number): number {\n        return nanoHash / 1000000000;\n    }\n}\n","import {\n    NameMetaData,\n    QueryAddressByName,\n    QueryAddressByNameResponse,\n    QueryNamesByAddress,\n    QueryNamesByAddressResponse,\n    QuerySettingsResponse,\n    SearchNamesQueryResponse,\n    SearchNamesRequest,\n} from 'models';\nimport { WasmService } from 'services';\nimport { MsgExecuteContract } from '@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/tx_pb'\nimport { Coin } from '@provenanceio/wallet-lib/lib/proto/cosmos/base/v1beta1/coin_pb'\nimport { Any } from '@provenanceio/wallet-lib/lib/proto/google/protobuf/any_pb'\nimport { QuerySettings, RegisterName } from '../models/NameContract';\nimport { FEE_DENOM } from 'consts';\n\nexport class NameContractService {\n    wasmService = new WasmService()\n    contractAddress: string | null = null\n    rootName: string\n\n    constructor(rootName: string) {\n        this.rootName = rootName\n    }\n\n    async getContractAddress(): Promise<string> {\n        if (this.contractAddress != null) {\n            return this.contractAddress\n        }\n        this.contractAddress = await this.wasmService.lookupContractByName(this.rootName)\n        return this.contractAddress\n    }\n\n    async getContractConfig(): Promise<QuerySettingsResponse> {\n        return this.wasmService.queryWasmCustom<QuerySettings, QuerySettingsResponse>(await this.getContractAddress(), new QuerySettings())\n    }\n\n    async listNames(address: string): Promise<string[]> {\n        const queryRes = await this.wasmService.queryWasmCustom<QueryNamesByAddress, QueryNamesByAddressResponse>(await this.getContractAddress(), new QueryNamesByAddress(address))\n        \n        return queryRes.names\n    }\n\n    async resolveName(name: string): Promise<string> {\n        const queryRes = await this.wasmService.queryWasmCustom<QueryAddressByName, QueryAddressByNameResponse>(await this.getContractAddress(), new QueryAddressByName(name))\n        \n        return queryRes.address\n    }\n\n    async searchNames(search: string): Promise<NameMetaData[]> {\n        const queryRes = await this.wasmService.queryWasmCustom<SearchNamesRequest, SearchNamesQueryResponse>(await this.getContractAddress(), new SearchNamesRequest(search));\n\n        return queryRes.names;\n    }\n\n    async generateNameRegisterBase64Message(name: string, address: string): Promise<string> {\n        const [contractAddr, contractConfig] = await Promise.all([\n            this.getContractAddress(),\n            this.getContractConfig()\n        ])\n        \n        const message = new MsgExecuteContract()\n            .setMsg(Buffer.from(new RegisterName().setName(name).toJson(), 'utf-8').toString('base64'))\n            .setFundsList([new Coin().setAmount(contractConfig.fee_amount).setDenom(FEE_DENOM)])\n            .setContract(contractAddr)\n            .setSender(address);\n        // Directly hardcoded from https://github.com/CuCreekCo/ProvenanceWalletConnect/blob/d2227d716ddb3f95783624b50e0e70220e33a858/ProvenanceWalletConnect/Handlers/WalletConnectHandlers.swift#L408\n        const any = new Any()\n            .setTypeUrl(\"/cosmwasm.wasm.v1.MsgExecuteContract\")\n            .setValue(message.serializeBinary());\n        return Buffer.from(any.serializeBinary()).toString(\"base64\");\n    }\n}\n","// source: invoice_protos.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar util_protos_pb = require('./util_protos_pb.js');\ngoog.object.extend(proto, util_protos_pb);\ngoog.exportSymbol('proto.invoice.Invoice', null, global);\ngoog.exportSymbol('proto.invoice.LineItem', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.invoice.Invoice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.invoice.Invoice.repeatedFields_, null);\n};\ngoog.inherits(proto.invoice.Invoice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.invoice.Invoice.displayName = 'proto.invoice.Invoice';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.invoice.LineItem = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.invoice.LineItem, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.invoice.LineItem.displayName = 'proto.invoice.LineItem';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.invoice.Invoice.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.invoice.Invoice.prototype.toObject = function(opt_includeInstance) {\n  return proto.invoice.Invoice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.invoice.Invoice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Invoice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    invoiceUuid: (f = msg.getInvoiceUuid()) && util_protos_pb.UUID.toObject(includeInstance, f),\n    fromAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    toAddress: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    invoiceCreatedDate: (f = msg.getInvoiceCreatedDate()) && util_protos_pb.Date.toObject(includeInstance, f),\n    invoiceDueDate: (f = msg.getInvoiceDueDate()) && util_protos_pb.Date.toObject(includeInstance, f),\n    description: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    paymentDenom: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    lineItemsList: jspb.Message.toObjectList(msg.getLineItemsList(),\n    proto.invoice.LineItem.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.invoice.Invoice}\n */\nproto.invoice.Invoice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.invoice.Invoice;\n  return proto.invoice.Invoice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.invoice.Invoice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.invoice.Invoice}\n */\nproto.invoice.Invoice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new util_protos_pb.UUID;\n      reader.readMessage(value,util_protos_pb.UUID.deserializeBinaryFromReader);\n      msg.setInvoiceUuid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFromAddress(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToAddress(value);\n      break;\n    case 4:\n      var value = new util_protos_pb.Date;\n      reader.readMessage(value,util_protos_pb.Date.deserializeBinaryFromReader);\n      msg.setInvoiceCreatedDate(value);\n      break;\n    case 5:\n      var value = new util_protos_pb.Date;\n      reader.readMessage(value,util_protos_pb.Date.deserializeBinaryFromReader);\n      msg.setInvoiceDueDate(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentDenom(value);\n      break;\n    case 8:\n      var value = new proto.invoice.LineItem;\n      reader.readMessage(value,proto.invoice.LineItem.deserializeBinaryFromReader);\n      msg.addLineItems(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.invoice.Invoice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.invoice.Invoice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.invoice.Invoice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.Invoice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInvoiceUuid();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      util_protos_pb.UUID.serializeBinaryToWriter\n    );\n  }\n  f = message.getFromAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getToAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getInvoiceCreatedDate();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      util_protos_pb.Date.serializeBinaryToWriter\n    );\n  }\n  f = message.getInvoiceDueDate();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      util_protos_pb.Date.serializeBinaryToWriter\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getPaymentDenom();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getLineItemsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      8,\n      f,\n      proto.invoice.LineItem.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional UUID invoice_uuid = 1;\n * @return {?proto.invoice.UUID}\n */\nproto.invoice.Invoice.prototype.getInvoiceUuid = function() {\n  return /** @type{?proto.invoice.UUID} */ (\n    jspb.Message.getWrapperField(this, util_protos_pb.UUID, 1));\n};\n\n\n/**\n * @param {?proto.invoice.UUID|undefined} value\n * @return {!proto.invoice.Invoice} returns this\n*/\nproto.invoice.Invoice.prototype.setInvoiceUuid = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.clearInvoiceUuid = function() {\n  return this.setInvoiceUuid(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.invoice.Invoice.prototype.hasInvoiceUuid = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string from_address = 2;\n * @return {string}\n */\nproto.invoice.Invoice.prototype.getFromAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.setFromAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string to_address = 3;\n * @return {string}\n */\nproto.invoice.Invoice.prototype.getToAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.setToAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional Date invoice_created_date = 4;\n * @return {?proto.invoice.Date}\n */\nproto.invoice.Invoice.prototype.getInvoiceCreatedDate = function() {\n  return /** @type{?proto.invoice.Date} */ (\n    jspb.Message.getWrapperField(this, util_protos_pb.Date, 4));\n};\n\n\n/**\n * @param {?proto.invoice.Date|undefined} value\n * @return {!proto.invoice.Invoice} returns this\n*/\nproto.invoice.Invoice.prototype.setInvoiceCreatedDate = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.clearInvoiceCreatedDate = function() {\n  return this.setInvoiceCreatedDate(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.invoice.Invoice.prototype.hasInvoiceCreatedDate = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional Date invoice_due_date = 5;\n * @return {?proto.invoice.Date}\n */\nproto.invoice.Invoice.prototype.getInvoiceDueDate = function() {\n  return /** @type{?proto.invoice.Date} */ (\n    jspb.Message.getWrapperField(this, util_protos_pb.Date, 5));\n};\n\n\n/**\n * @param {?proto.invoice.Date|undefined} value\n * @return {!proto.invoice.Invoice} returns this\n*/\nproto.invoice.Invoice.prototype.setInvoiceDueDate = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.clearInvoiceDueDate = function() {\n  return this.setInvoiceDueDate(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.invoice.Invoice.prototype.hasInvoiceDueDate = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string description = 6;\n * @return {string}\n */\nproto.invoice.Invoice.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string payment_denom = 7;\n * @return {string}\n */\nproto.invoice.Invoice.prototype.getPaymentDenom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.setPaymentDenom = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * repeated LineItem line_items = 8;\n * @return {!Array<!proto.invoice.LineItem>}\n */\nproto.invoice.Invoice.prototype.getLineItemsList = function() {\n  return /** @type{!Array<!proto.invoice.LineItem>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.invoice.LineItem, 8));\n};\n\n\n/**\n * @param {!Array<!proto.invoice.LineItem>} value\n * @return {!proto.invoice.Invoice} returns this\n*/\nproto.invoice.Invoice.prototype.setLineItemsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n\n\n/**\n * @param {!proto.invoice.LineItem=} opt_value\n * @param {number=} opt_index\n * @return {!proto.invoice.LineItem}\n */\nproto.invoice.Invoice.prototype.addLineItems = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.invoice.LineItem, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.invoice.Invoice} returns this\n */\nproto.invoice.Invoice.prototype.clearLineItemsList = function() {\n  return this.setLineItemsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.invoice.LineItem.prototype.toObject = function(opt_includeInstance) {\n  return proto.invoice.LineItem.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.invoice.LineItem} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.LineItem.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    lineUuid: (f = msg.getLineUuid()) && util_protos_pb.UUID.toObject(includeInstance, f),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    quantity: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    price: (f = msg.getPrice()) && util_protos_pb.Decimal.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.invoice.LineItem}\n */\nproto.invoice.LineItem.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.invoice.LineItem;\n  return proto.invoice.LineItem.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.invoice.LineItem} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.invoice.LineItem}\n */\nproto.invoice.LineItem.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new util_protos_pb.UUID;\n      reader.readMessage(value,util_protos_pb.UUID.deserializeBinaryFromReader);\n      msg.setLineUuid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setQuantity(value);\n      break;\n    case 5:\n      var value = new util_protos_pb.Decimal;\n      reader.readMessage(value,util_protos_pb.Decimal.deserializeBinaryFromReader);\n      msg.setPrice(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.invoice.LineItem.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.invoice.LineItem.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.invoice.LineItem} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.invoice.LineItem.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLineUuid();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      util_protos_pb.UUID.serializeBinaryToWriter\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getQuantity();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getPrice();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      util_protos_pb.Decimal.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional UUID line_uuid = 1;\n * @return {?proto.invoice.UUID}\n */\nproto.invoice.LineItem.prototype.getLineUuid = function() {\n  return /** @type{?proto.invoice.UUID} */ (\n    jspb.Message.getWrapperField(this, util_protos_pb.UUID, 1));\n};\n\n\n/**\n * @param {?proto.invoice.UUID|undefined} value\n * @return {!proto.invoice.LineItem} returns this\n*/\nproto.invoice.LineItem.prototype.setLineUuid = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.invoice.LineItem} returns this\n */\nproto.invoice.LineItem.prototype.clearLineUuid = function() {\n  return this.setLineUuid(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.invoice.LineItem.prototype.hasLineUuid = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.invoice.LineItem.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.LineItem} returns this\n */\nproto.invoice.LineItem.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.invoice.LineItem.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.invoice.LineItem} returns this\n */\nproto.invoice.LineItem.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int32 quantity = 4;\n * @return {number}\n */\nproto.invoice.LineItem.prototype.getQuantity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.invoice.LineItem} returns this\n */\nproto.invoice.LineItem.prototype.setQuantity = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional Decimal price = 5;\n * @return {?proto.invoice.Decimal}\n */\nproto.invoice.LineItem.prototype.getPrice = function() {\n  return /** @type{?proto.invoice.Decimal} */ (\n    jspb.Message.getWrapperField(this, util_protos_pb.Decimal, 5));\n};\n\n\n/**\n * @param {?proto.invoice.Decimal|undefined} value\n * @return {!proto.invoice.LineItem} returns this\n*/\nproto.invoice.LineItem.prototype.setPrice = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.invoice.LineItem} returns this\n */\nproto.invoice.LineItem.prototype.clearPrice = function() {\n  return this.setPrice(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.invoice.LineItem.prototype.hasPrice = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\ngoog.object.extend(exports, proto.invoice);\n","import { Error as ServerError } from 'grpc-web';\nimport { QueryClient as WasmQueryClient } from \"@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/query_grpc_web_pb\";\nimport { QuerySmartContractStateRequest } from \"@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/query_pb\";\nimport { GRPC_URL } from '../consts/network';\nimport { QueryClient as NameQueryClient } from \"@provenanceio/wallet-lib/lib/proto/provenance/name/v1/query_grpc_web_pb\";\nimport { QueryResolveRequest } from \"@provenanceio/wallet-lib/lib/proto/provenance/name/v1/query_pb\";\n\nexport class WasmService {\n    nameQueryClient: NameQueryClient = new NameQueryClient(GRPC_URL, null)\n    wasmQueryClient: WasmQueryClient = new WasmQueryClient(GRPC_URL, null)\n\n    lookupContractByName(name: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            this.nameQueryClient.resolve(new QueryResolveRequest().setName(name), null, (error: ServerError, res) => {\n                if (error) {\n                    reject(new Error(`wasmService.lookupContractByName error: Code: ${error.code} Message: ${error.message}`))\n                } else {\n                    resolve(res.getAddress())\n                }\n            })\n        })\n    }\n\n    queryWasmCustom<T, R>(contractAddress: string, query: T): Promise<R> {\n        return new Promise((resolve, reject) => {\n            const queryData = Buffer.from(JSON.stringify(query), \"utf-8\").toString(\"base64\")\n            this.wasmQueryClient.smartContractState(new QuerySmartContractStateRequest()\n                .setAddress(contractAddress)\n                .setQueryData(queryData)\n                , null, (error: ServerError, res) => {\n                if (error) {\n                    reject(new Error(`wasmService.queryWasmCustom error: Code: ${error.code} Message: ${error.message}`))\n                } else {\n                    resolve(JSON.parse(Buffer.from(res.getData_asU8()).toString('utf-8')))\n                }\n            })\n        })\n    }\n}","import { WasmService } from 'services';\nimport { MsgExecuteContract } from '@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/tx_pb'\nimport { Coin } from '@provenanceio/wallet-lib/lib/proto/cosmos/base/v1beta1/coin_pb'\nimport { Any } from '@provenanceio/wallet-lib/lib/proto/google/protobuf/any_pb'\nimport { MakePayment, QueryInvoiceSettings, QueryInvoiceSettingsResponse, QueryPayableState, QueryPayableStateResponse, RegisterPayable } from '../models';\nimport { FEE_DENOM } from 'consts';\nimport { PayablesContractExecutionDetail } from 'hooks';\n\nexport class InvoiceContractService {\n    wasmService = new WasmService()\n    contractAddress: string | null = null\n    rootName: string\n\n    constructor(rootName: string) {\n        this.rootName = rootName\n    }\n\n    async getContractAddress(): Promise<string> {\n        if (this.contractAddress != null) {\n            return this.contractAddress\n        }\n        this.contractAddress = await this.wasmService.lookupContractByName(this.rootName)\n        return this.contractAddress\n    }\n\n    async getContractConfig(): Promise<QueryInvoiceSettingsResponse> {\n        return this.wasmService.queryWasmCustom<QueryInvoiceSettings, QueryInvoiceSettingsResponse>(await this.getContractAddress(), new QueryInvoiceSettings())\n    }\n\n    async getPayableState(payableUuid: string): Promise<QueryPayableStateResponse> {\n        return this.wasmService.queryWasmCustom<QueryPayableState, QueryPayableStateResponse>(await this.getContractAddress(), new QueryPayableState().setPayableUuid(payableUuid))\n    }\n\n    async generateCreateInvoiceBase64Message(contractDetail: PayablesContractExecutionDetail, address: string): Promise<string> {\n        const [contractAddr, contractConfig] = await Promise.all([\n            this.getContractAddress(),\n            this.getContractConfig()\n        ])\n        const message = new MsgExecuteContract()\n            .setMsg(Buffer.from(new RegisterPayable()\n                .setPayableType(contractDetail.payableType)\n                .setPayableUuid(contractDetail.payableUuid)\n                .setScopeId(contractDetail.scopeId)\n                .setPayableDenom(contractDetail.invoiceDenom)\n                .setPayableTotal(`${contractDetail.invoiceTotal}`)\n                .toJson()\n            , 'utf-8').toString('base64'))\n            .setFundsList([new Coin().setAmount(contractConfig.onboarding_cost).setDenom(contractConfig.onboarding_denom)])\n            .setContract(contractAddr)\n            .setSender(address);\n        // Directly hardcoded from https://github.com/CuCreekCo/ProvenanceWalletConnect/blob/d2227d716ddb3f95783624b50e0e70220e33a858/ProvenanceWalletConnect/Handlers/WalletConnectHandlers.swift#L408\n        // const any = new Any()\n        //     .setTypeUrl(\"/cosmwasm.wasm.v1.MsgExecuteContract\")\n        //     .setValue(message.serializeBinary());\n        // todo: rectify this so it matches how name service works?\n        return Buffer.from(message.serializeBinary()).toString(\"base64\");\n    }\n\n    async generateMakePaymentBase64Message(payableUuid: string, amount: number, paymentDenom: string, address: string): Promise<string> {\n        const [contractAddr, contractConfig] = await Promise.all([\n            this.getContractAddress(),\n            this.getContractConfig()\n        ])\n        const message = new MsgExecuteContract()\n            .setMsg(Buffer.from(new MakePayment()\n                .setPayableUuid(payableUuid)\n                .toJson()\n            , 'utf-8').toString('base64'))\n            .setFundsList([new Coin().setAmount(`${amount}`).setDenom(paymentDenom)])\n            .setContract(contractAddr)\n            .setSender(address);\n        // Directly hardcoded from https://github.com/CuCreekCo/ProvenanceWalletConnect/blob/d2227d716ddb3f95783624b50e0e70220e33a858/ProvenanceWalletConnect/Handlers/WalletConnectHandlers.swift#L408\n        // const any = new Any()\n        //     .setTypeUrl(\"/cosmwasm.wasm.v1.MsgExecuteContract\")\n        //     .setValue(message.serializeBinary());\n        // todo: rectify this so it matches how name service works?\n        return Buffer.from(message.serializeBinary()).toString(\"base64\");\n    }\n}\n","import { Invoice, LineItem } from '../proto/invoice_protos_pb';\nimport { UUID, Date as DateProto, Decimal } from '../proto/util_protos_pb';\nimport { v4 as uuidv4 } from 'uuid';\nimport { format } from 'date-fns';\nimport { INVOICE_DATE_FORMAT } from 'consts';\n\nexport const newInvoice = () => (new Invoice()).setInvoiceUuid(newRandomUuid());\nexport const newLineItem = () => (new LineItem()).setLineUuid(newRandomUuid());\nexport const newUuid = () => new UUID();\nexport const newRandomUuid = () => newUuid().setValue(uuidv4())\nexport const newDate = (date: Date = new Date()) => new DateProto().setValue(format(date, INVOICE_DATE_FORMAT));\nexport const newDecimal = (value: number | string = 0) => new Decimal().setValue(value.toString());\n\nexport const decodeB64 = (b64: string) => Buffer.from(b64, 'base64')\nexport const toInvoice = (b64: string) => Invoice.deserializeBinary(decodeB64(b64))\n\nexport const lineItemPrice = (lineItem: LineItem) => +(lineItem?.getPrice()?.getValue() || 0)\nexport const lineItemTotal = (lineItem: LineItem) => lineItemPrice(lineItem) * lineItem.getQuantity()\nexport const invoiceTotal = (invoice: Invoice) => invoice?.getLineItemsList().reduce((acc, item) => acc + lineItemTotal(item), 0)\nexport const calculateTotal = (invoices: Invoice[]) => invoices.reduce((acc, invoice) => acc + invoiceTotal(invoice), 0)\n","import { Header, SubHeader } from \"Components/Headers\";\nimport { Colors } from \"consts\";\nimport { FunctionComponent, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useWalletConnect } from '@provenanceio/walletconnect-js';\nimport { useNavigate } from \"react-router-dom\";\nimport { Any } from '@provenanceio/wallet-lib/lib/proto/google/protobuf/any_pb';\nimport { Message } from 'google-protobuf'\nimport { decodeB64 } from \"../../util\";\nimport { Modal } from \"Components/Modal\";\n\nexport interface SignMessage {\n    proto: any,\n    anyProto: any\n}\n\nexport function parseSignMessage<T extends Message>(anyProto: any, deserializer: (b: Buffer) => T, modifier: (message: T) => T = (m) => m): SignMessage {\n    const deserialized = modifier(deserializer(decodeB64(anyProto.value)))\n    anyProto.value = Buffer.from(deserialized.serializeBinary()).toString('base64')\n    return {\n        proto: deserialized.toObject(),\n        anyProto\n    }\n}\n\nexport interface MultiMessageStepModalProps {\n    messages: SignMessage[],\n    onComplete?: () => any,\n}\n\nexport const MultiMessageStepModal: FunctionComponent<MultiMessageStepModalProps> = ({ messages, onComplete }) => {\n    const [current, setCurrent] = useState(0)\n    const navigate = useNavigate()\n\n    const { walletConnectService: wcs } = useWalletConnect()\n\n    const handleSign = async (message: SignMessage) => await wcs.customAction({\n        message: Buffer.from(new Any().setTypeUrl(message.anyProto.typeUrl).setValue(message.anyProto.value).serializeBinary()).toString('base64'),\n        description: message.anyProto.typeUrl,\n        method: \"provenance_sendTransaction\",\n    })\n\n    useEffect(() => {\n        (async () => {\n            for (const message of messages) {\n                await handleSign(message)\n                setCurrent(c => Math.min(c + 1, messages.length - 1))\n            }\n            onComplete && onComplete()\n        })()\n    }, [messages])\n\n    if (messages.length == 0) {\n        return <></>\n    }\n\n    return <Modal>\n        <Header>Sign Message ({current + 1} / {messages.length})</Header>\n        <pre>{JSON.stringify(messages[current].proto, null, 2)}</pre>\n        <SubHeader>Please Check Your Device for Signature Prompt</SubHeader>\n    </Modal>\n}","type FormatFn = (value: number) => string\n\nconst usdFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n})\n\nexport const currencyFormatter = (currency: string): FormatFn => {\n    switch (currency) {\n        case 'USD':\n            return value => usdFormatter.format(value)\n            break;\n        default:\n            return value => `${value}${currency}`\n    }\n}\n","export const enumStringToHumanReadable = (input: string) =>\n    input\n        .split(\"_\")\n        .reduce(\n            (res, word) =>\n                `${res} ${word.charAt(0).toUpperCase()}${word\n                        .substr(1)\n                        .toLowerCase()}`,\n            \"\"\n        );\n","import styled, { css } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Loading } from \"Components\";\n\nconst StyledButton = styled.button`\n  flex-basis: ${({ width }) => width};\n  width: ${({ width }) => width};\n  ${({ width }) => width === \"auto\" && \"min-width: 150px\"};\n  align-items: center;\n  background: ${({ backgroundColor }) => backgroundColor};\n  white-space: nowrap;\n  border-radius: 6px;\n  border: 1px solid\n    ${({ borderColor, backgroundColor }) => borderColor || backgroundColor};\n  color: ${({ color }) => color};\n  cursor: ${({ disabled }) => (disabled ? \"not-allowed\" : \"pointer\")};\n  display: flex;\n  justify-content: center;\n  letter-spacing: 0.07rem;\n  transition: 250ms all;\n  user-select: none;\n  font-size: 1.2rem;\n  height: 40px;\n  padding: 0 30px;\n  &:hover:not(:disabled) {\n    filter: contrast(200%);\n    ${({ secondary, color, backgroundColor }) =>\n      secondary &&\n      css`\n        background-color: ${color};\n        color: ${backgroundColor};\n      `}\n  }\n  &:active:not(:disabled) {\n    filter: contrast(90%);\n  }\n  &:disabled {\n    filter: grayscale(80%);\n  }\n`;\nconst ButtonContent = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = ({\n  className,\n  backgroundColor,\n  onClick,\n  children,\n  disabled,\n  width,\n  title,\n  type,\n  loading,\n  borderColor,\n  color,\n  secondary,\n}) => {\n  const handleClick = () => {\n    if (!disabled) {\n      onClick();\n    }\n  };\n\n  if (secondary) {\n    [color, backgroundColor, borderColor] = [\n      backgroundColor,\n      color,\n      backgroundColor,\n    ];\n  }\n\n  return (\n    <StyledButton\n      title={title}\n      className={className}\n      onClick={handleClick}\n      color={color}\n      secondary={secondary}\n      backgroundColor={backgroundColor.toUpperCase()}\n      borderColor={(borderColor || backgroundColor).toUpperCase()}\n      onKeyPress={(e) => {\n        if (e.key === \"Enter\") {\n          handleClick();\n        }\n      }}\n      disabled={disabled || loading}\n      width={width}\n      type={type}\n    >\n      <ButtonContent>{loading ? <Loading /> : children}</ButtonContent>\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  width: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  borderColor: PropTypes.string,\n  color: PropTypes.string,\n  secondary: PropTypes.bool,\n};\nButton.defaultProps = {\n  className: \"\",\n  backgroundColor: \"#42368E\",\n  onClick: () => {},\n  disabled: false,\n  width: \"auto\",\n  title: \"\",\n  type: \"button\",\n  loading: false,\n  color: \"white\",\n  secondary: false,\n  borderColor: \"transparent\",\n};\n\nexport default Button;\n","import { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst PopupContainer = styled.div`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  top: 0;\n  left: 0;\n  justify-content: center;\n  z-index: 100;\n`;\nconst SlideInAnimation = keyframes`\n  from { transform: translate(0, -100%); }\n  to { transform: translate(0, 0); }\n`;\nconst SlideOutAnimation = keyframes`\n  from { transform: translate(0, 0); }\n  to { transform: translate(0, -100%); }\n`;\n\nconst PopupContent = styled.div`\n  padding: 20px;\n  width: 100%;\n  background: ${({ status }) => {\n    if (status === 'error' || status === 'failure') return '#FFAAAA';\n    if (status === 'warning') return '#FFFFAA';\n    if (status === 'success') return '#AAFFAA';\n    return '#DDDDDD';\n  }};\n  box-shadow: '1px 1px 4px 1px rgba(0,0,0,0.10)';\n  border-radius: 0 0 3px 3px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  animation: 250ms linear ${({ isClosing }) => isClosing ? SlideOutAnimation : SlideInAnimation };\n  animation-fill-mode: both;\n  opacity: 0.95;\n`;\nconst CloseIcon = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  font-size: 3rem;\n  transform: rotate(45deg);\n  cursor: pointer;\n`;\nconst Content = styled.div`\n  font-size: 1.4rem;\n  font-weight: 700;\n`;\n\nconst Popup = ({ className, children, onClose, status, delay }) => {\n  const [isClosing, setIsClosing] = useState(false);\n  \n  useEffect(() => {\n    let delayCloseTimeout = '';\n    // Popup has just opened/been shown\n    if (!isClosing) {\n      // After delay, show slide up animation, then close self\n      delayCloseTimeout = setTimeout(() => { setIsClosing(true); }, delay);\n    } else {\n      // Popup is already closing, wait 1s to give time for the animation to finish\n      setTimeout(() => { onClose() }, 1000);\n    }\n    return () => {\n      // Make sure to clear the timeout if this closes before it runs\n      if (delayCloseTimeout) { clearTimeout(delayCloseTimeout); }\n    }\n  }, [isClosing, onClose, delay]);\n\n  return (\n    <PopupContainer className={className}>\n      <PopupContent status={status.toLowerCase()} isClosing={isClosing}>\n        <CloseIcon onClick={() => setIsClosing(true)}>+</CloseIcon>\n        <Content>{children}</Content>\n      </PopupContent>\n    </PopupContainer>\n  );\n};\n\nPopup.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n  status: PropTypes.string,\n  delay: PropTypes.number,\n};\nPopup.defaultProps = {\n  className: '',\n  children: null,\n  onClose: () => {},\n  status: 'warning',\n  delay: 2000,\n};\n\nexport default Popup;\n","import { FunctionComponent, ReactChild } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors, SM } from 'consts';\n\nexport interface FormWrapperProps {\n    title: string,\n    action?: ReactChild,\n    headerDetails?: ReactChild\n}\n\nconst Wrapper = styled.div`\n    background: ${Colors.LIGHT};\n    padding: 30px;\n    border-radius: 10px;\n\n    .inputContainer {\n        margin-top: 30px;\n    }\n`\n\nconst Header = styled.div`\n    padding-bottom: 30px;\n    border-bottom: 1px solid ${Colors.DARK};\n`\n\nconst HeaderRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    &:not(:last-child) {\n        margin-bottom: 20px;\n    }\n\n    @media (max-width: ${SM}px) {\n        flex-direction: column;\n        align-items: unset;\n    }\n`\n\nconst Title = styled.div`\n    font-size: 3em;\n    font-weight: bold;\n\n    @media (max-width: ${SM}px) {\n        margin-bottom: 10px;\n    }\n`\n\nconst Action = styled.div``\n\nexport const FormWrapper: FunctionComponent<FormWrapperProps> = ({ title, action, headerDetails, children }) => <Wrapper>\n    <Header>\n        <HeaderRow>\n            <Title>{title}</Title>\n            {action && <Action>{action}</Action>}\n        </HeaderRow>\n        {headerDetails}\n    </Header>\n    {children}\n</Wrapper>","import styled from \"styled-components\";\n\nexport interface FormRowProps {\n    columns?: number\n}\n\nexport const FormRow = styled.div<FormRowProps>`\n    display: grid;\n    grid-template-columns: repeat(${({ columns }) => columns || 1}, 1fr);\n    grid-gap: 10px;\n`","import styled from \"styled-components\";\n\nexport const FormActions = styled.div`\n    button:not(:last-child) {\n        margin-bottom: 10px;\n    }\n`","import { Colors } from \"consts\";\nimport { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    color: ${Colors.WARN};\n`\n\nexport interface InputErrorProps {\n    children: string | { message: string }\n}\n\nexport const InputError: FunctionComponent<InputErrorProps> = ({ children }) => {\n    if (!children) {\n        return <></>\n    }\n\n    return <Wrapper>{(typeof children === 'string' ? children : children.message) || 'required'}</Wrapper>\n}","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Colors } from \"consts\";\nimport { useFormContext, useFormState } from \"react-hook-form\";\nimport { InputError } from \"Components/Form\";\n\nconst InputContainer = styled.div`\n  position: relative;\n  flex-basis: ${({ width }) => width};\n  display: flex;\n`;\nconst StyledInput = styled.input`\n  padding: 4px 10px;\n  height: 30px;\n  width: 100%;\n  box-sizing: content-box;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  border: 1px solid ${Colors.DARK};\n`;\nconst Label = styled.label`\n  font-size: 1rem;\n  font-weight: 700;\n  position: absolute;\n  top: -2rem;\n  left: 0;\n`;\n\nconst Input = ({\n  className,\n  label,\n  value,\n  onChange,\n  placeholder,\n  width,\n  disabled,\n  style,\n  type,\n  name,\n  required,\n  registerConfig,\n}) => {\n  const { register, control } = useFormContext();\n  const {\n    errors: { [name]: error },\n  } = useFormState({ control });\n\n  return (\n    <>\n      <InputContainer width={width} className={`${className} inputContainer`}>\n        {label && <Label>{label}</Label>}\n        <StyledInput\n          placeholder={placeholder}\n          onChange={({ target }) => onChange(target.value)}\n          disabled={disabled}\n          style={style}\n          type={type}\n          {...register(name, { required, ...registerConfig })}\n        />\n      </InputContainer>\n      {error && <InputError>{error}</InputError>}\n    </>\n  );\n};\n\nInput.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  style: PropTypes.any,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  registerConfig: PropTypes.any,\n};\nInput.defaultProps = {\n  className: \"\",\n  width: \"100%\",\n  label: \"\",\n  value: \"\",\n  onChange: () => {},\n  placeholder: \"Enter Value\",\n  style: {},\n  type: \"text\",\n  required: false,\n  registerConfig: {},\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Svg = styled.svg`\n  margin: auto;\n  display: block;\n`;\n\nconst Loading = ({ className, color, height, width }) => (\n  <Svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 100 100\"\n    preserveAspectRatio=\"xMidYMid\"\n    className={className}\n    height={height}\n    width={width}\n  >\n    <circle\n      cx=\"50\"\n      cy=\"50\"\n      fill=\"none\"\n      stroke={color}\n      strokeWidth=\"10\"\n      r=\"35\"\n      strokeDasharray=\"164.93361431346415 56.97787143782138\"\n    >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n        />\n    </circle>\n</Svg>\n);\n\nLoading.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n};\nLoading.defaultProps = {\n  className: '',\n  color: '#eeeeee',\n  height: '20px',\n  width: '20px',\n};\n\nexport default Loading;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Colors } from \"consts\";\nimport { useFormContext } from \"react-hook-form\";\n\nconst Container = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nconst Group = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: flex-start;\n  flex-basis: 100%;\n`;\nconst SelectContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\nconst StyledSelect = styled.select`\n  width: 100%;\n  padding: 11px 18px;\n  border-radius: 4px;\n  margin: 0;\n  border: 1px solid ${Colors.DARK};\n  font-size: 1.4rem;\n  flex-grow: ${({ type }) => (type === \"radio\" ? \"initial\" : \"1\")};\n  font-weight: bold;\n  background: ${Colors.LIGHT};\n  cursor: pointer;\n  color: ${Colors.DARK};\n  &:focus,\n  &:focus-visible,\n  &:active {\n    outline-color: ${Colors.DARK};\n  }\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n`;\nconst DropdownIcon = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 18px;\n  color: ${Colors.TEXT};\n  pointer-events: none;\n  cursor: pointer;\n  font-size: 1.8rem;\n  text-align: middle;\n  font-weight: bold;\n`;\nconst Label = styled.label`\n  margin-bottom: 16px;\n  font-weight: bold;\n  display: inline-block;\n  position: absolute;\n  left: 0;\n  top: -2rem;\n  color: #333333;\n`;\n\nconst Dropdown = ({\n  className,\n  label,\n  options,\n  name,\n  value,\n  onChange,\n  disabled,\n  required,\n}) => {\n  const renderOptions = () =>\n    options.map((title, index) => (\n      <option key={title} value={title} disabled={index === 0}>\n        {title}\n      </option>\n    ));\n\n  const { register } = useFormContext();\n\n  return (\n    <Container className={`${className}`}>\n      <Group>\n        <SelectContainer className=\"inputContainer\">\n          {label && <Label htmlFor={name}>{label}</Label>}\n          <StyledSelect\n            {...register(name, { required })}\n            onChange={({ target }) => onChange(target.value)}\n            disabled={disabled}\n          >\n            {renderOptions()}\n          </StyledSelect>\n          <DropdownIcon>^</DropdownIcon>\n        </SelectContainer>\n      </Group>\n    </Container>\n  );\n};\n\nDropdown.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.node,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n};\nDropdown.defaultProps = {\n  className: \"\",\n  label: \"\",\n  value: null,\n  disabled: false,\n  onChange: () => {},\n  required: false,\n};\n\nexport default Dropdown;\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { LG, MD, SM } from \"consts\";\n\nconst Container = styled.div`\n  padding: 20px;\n  border: 2px solid ${({ color }) => color};\n  background: ${({ color, isLoading }) =>\n    isLoading ? \"#CCCCCC\" : `${color}50`};\n  border-radius: 5px;\n  display: flex;\n  max-width: 100%;\n  align-items: center;\n  justify-content: ${({ justify }) => justify};\n  ${({ noMargin }) => !noMargin && \"margin-bottom: 30px;\"}\n\n  @media(max-width: ${LG}px) {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: ${SM}px) {\n    flex-direction: column;\n    padding: 10px;\n  }\n`;\n\nexport const ActionContainer = ({\n  children,\n  color,\n  justify,\n  loading,\n  noMargin,\n}) => (\n  <Container\n    color={color}\n    justify={justify}\n    isLoading={loading}\n    noMargin={noMargin}\n  >\n    {children}\n  </Container>\n);\n\nActionContainer.propTypes = {\n  color: PropTypes.string,\n  children: PropTypes.node,\n  justify: PropTypes.string,\n  loading: PropTypes.bool,\n  noMargin: PropTypes.bool,\n};\nActionContainer.defaultProps = {\n  color: \"#42368E\",\n  children: null,\n  justify: \"center\",\n  loading: false,\n  noMargin: false,\n};\n","import { useState, useEffect } from \"react\";\nimport {\n  WINDOW_MESSAGES,\n  useWalletConnect,\n} from \"@provenanceio/walletconnect-js\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input } from \"Components\";\nimport { ActionContainer } from \"./ActionContainer\";\n\nconst windowMessageLookup = (windowMessage) => [\n  `${WINDOW_MESSAGES[`${windowMessage}_COMPLETE`]}`,\n  `${WINDOW_MESSAGES[`${windowMessage}_FAILED`]}`,\n];\n\nexport const Action = ({\n  method,\n  setPopup,\n  fields,\n  buttonTxt,\n  windowMessage,\n}) => {\n  const { walletConnectService, walletConnectState } = useWalletConnect();\n  // Get loading state for specific method\n  const loading = walletConnectState[`${method}Loading`];\n  // Get complete and failed messages\n  const [windowMsgComplete, windowMsgFailed] =\n    windowMessageLookup(windowMessage);\n  // Build state object from fields data (fields are an array of obj, see propTypes)\n  const initialInputValues = {};\n  fields.forEach(({ name, value }) => {\n    initialInputValues[name] = value;\n  });\n  const [inputValues, setInputValues] = useState(initialInputValues);\n  // Create all event listeners for this method\n  useEffect(() => {\n    // Delegate Hash Events\n    walletConnectService.addListener(windowMsgComplete, (result) => {\n      console.log(`WalletConnectJS | ${method} Complete | Result: `, result); // eslint-disable-line no-console\n      setPopup(\n        `${method} Complete! See console for result details`,\n        \"success\",\n        5000\n      );\n    });\n    walletConnectService.addListener(windowMsgFailed, (result) => {\n      const { error } = result;\n      console.log(`WalletConnectJS | ${method} Failed | Result: `, result); // eslint-disable-line no-console\n      setPopup(\n        `${method} Failed! ${error} | See console for more details`,\n        \"failure\",\n        5000\n      );\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(windowMsgComplete);\n      walletConnectService.removeAllListeners(windowMsgFailed);\n    };\n  }, [\n    walletConnectService,\n    setPopup,\n    windowMsgComplete,\n    windowMsgFailed,\n    method,\n  ]);\n\n  const changeInputValue = (name, value) => {\n    const newInputValues = { ...inputValues };\n    newInputValues[name] = value;\n    setInputValues(newInputValues);\n  };\n\n  const renderInputs = () =>\n    fields.map(({ name, width, label, placeholder }) => (\n      <Input\n        key={name}\n        width={width}\n        value={inputValues[name]}\n        label={label}\n        placeholder={placeholder}\n        onChange={(value) => changeInputValue(name, value)}\n      />\n    ));\n\n  // If we only have a single, send the value it without the key (as itself, non obj)\n  const getSendData = () =>\n    Object.keys(inputValues).length > 1\n      ? inputValues\n      : inputValues[Object.keys(inputValues)[0]];\n\n  return (\n    <ActionContainer loading={loading}>\n      {renderInputs()}\n      <Button\n        loading={loading}\n        onClick={() => walletConnectService[method](getSendData())}\n      >\n        {buttonTxt}\n      </Button>\n    </ActionContainer>\n  );\n};\n\nAction.propTypes = {\n  method: PropTypes.string.isRequired,\n  setPopup: PropTypes.func.isRequired,\n  fields: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      name: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      placeholder: PropTypes.string,\n      width: PropTypes.string,\n    })\n  ),\n  buttonTxt: PropTypes.string.isRequired,\n  windowMessage: PropTypes.string.isRequired,\n};\n\nAction.defaultProps = {\n  fields: [],\n};\n","import { useEffect } from \"react\";\nimport { WINDOW_MESSAGES } from \"@provenanceio/walletconnect-js\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"Components\";\nimport { ActionContainer } from \"./ActionContainer\";\nimport { SM } from \"consts\";\n\nconst Info = styled.div`\n  font-size: 1.4rem;\n  margin-right: 40px;\n  @media (max-width: ${SM}px) {\n    margin-right: 0;\n    margin-bottom: 10px;\n  }\n`;\nexport const Connect = ({ walletConnectService, setPopup }) => {\n  const color = \"#498AFD\";\n\n  useEffect(() => {\n    walletConnectService.addListener(WINDOW_MESSAGES.CONNECTED, (result) => {\n      console.log(\"WalletConnectJS | Connected | Result: \", result); // eslint-disable-line no-console\n      setPopup(\"Wallet Connected\", \"success\");\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(WINDOW_MESSAGES.CONNECTED);\n    };\n  }, [walletConnectService, setPopup]);\n\n  return (\n    <ActionContainer color={color} noMargin>\n      <Info>Connect Wallet</Info>\n      <Button backgroundColor={color} onClick={walletConnectService.connect}>\n        Connect\n      </Button>\n    </ActionContainer>\n  );\n};\n\nConnect.propTypes = {\n  walletConnectService: PropTypes.shape({\n    connect: PropTypes.func,\n    addListener: PropTypes.func,\n    removeAllListeners: PropTypes.func,\n  }).isRequired,\n  setPopup: PropTypes.func.isRequired,\n};\n","import { useEffect } from \"react\";\nimport { WINDOW_MESSAGES } from \"@provenanceio/walletconnect-js\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"Components\";\nimport { ActionContainer } from \"./ActionContainer\";\nimport { Colors, SM } from \"consts\";\n\nconst Info = styled.div`\n  font-size: 1.4rem;\n  margin-right: 40px;\n  flex-basis: 80%;\n  @media (max-width: ${SM}px) {\n    margin-right: 0;\n    margin-bottom: 10px;\n  }\n`;\nexport const Disconnect = ({ walletConnectService, setPopup }) => {\n  const color = Colors.WARN;\n\n  useEffect(() => {\n    walletConnectService.addListener(WINDOW_MESSAGES.DISCONNECT, (result) => {\n      console.log(\"WalletConnectJS | Disconnect | Result: \", result); // eslint-disable-line no-console\n      setPopup(\"Wallet Disconnected\", \"failure\");\n    });\n\n    return () => {\n      walletConnectService.removeAllListeners(WINDOW_MESSAGES.DISCONNECT);\n    };\n  }, [walletConnectService, setPopup]);\n\n  return (\n    <ActionContainer color={color} justify=\"space-between\">\n      <Info>Disconnect the connected wallet</Info>\n      <Button backgroundColor={color} onClick={walletConnectService.disconnect}>\n        Disconnect\n      </Button>\n    </ActionContainer>\n  );\n};\n\nDisconnect.propTypes = {\n  walletConnectService: PropTypes.shape({\n    disconnect: PropTypes.func,\n    addListener: PropTypes.func,\n    removeAllListeners: PropTypes.func,\n  }).isRequired,\n  setPopup: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport {EXPLORER_URL} from \"consts\";\n\nconst AddressLink = ({\n    address,\n    altText,\n    showAddressText,\n}) => <div>\n        <a\n            href={`${EXPLORER_URL}/accounts/${address}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n        >\n            {showAddressText ? \"Address: \" : \"\"}\n            {altText ? altText : address}\n        </a>\n    </div>;\n\nAddressLink.propTypes = {\n    className: PropTypes.string,\n    address: PropTypes.string.isRequired,\n    altText: PropTypes.string,\n    showAddressText: PropTypes.bool,\n};\n\nAddressLink.defaultProps = {\n    className: \"\",\n    altText: null,\n    showAddressText: true,\n};\n\nexport default AddressLink;\n","import styled from \"styled-components\";\nimport { Component, FunctionComponent, useState } from 'react';\nimport { Colors } from \"consts\";\n\nexport interface Tab {\n    title: string,\n    element: Component\n}\n\nexport interface TabContainerProps {\n    tabs: Tab[]\n}\n\nconst TabContainerWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n`\n\nconst TabHeaderWrapper = styled.div`\n\n`\n\ninterface TabHeaderProps {\n    active?: boolean\n}\n\nconst TabHeader = styled.button<TabHeaderProps>`\n    border: 1px solid ${Colors.DARK};\n    border-bottom: none;\n    display: inline-block;\n    padding: 4px;\n    background: ${({ active }) => active ? Colors.DARKEN : Colors.LIGHT};\n    cursor: pointer;\n    &:not(:last-child) {\n        border-right: none;\n    }\n    &:first-child {\n        border-top-left-radius: 5px;\n    }\n    &:last-child {\n        border-top-right-radius: 5px;\n    }\n    &:hover {\n        background: ${Colors.DARKEN};\n    }\n`\n\nconst TabWrapper = styled.div`\n    padding: 10px;\n    background-color: ${Colors.LIGHT};\n\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n    border: 1px solid ${Colors.DARK};\n`\n\nexport const TabContainer: FunctionComponent<TabContainerProps> = ({ tabs }) => {\n    const [selected, setSelected] = useState(0)\n    return <TabContainerWrapper>\n        <TabHeaderWrapper>{tabs.map((tab, i) => <TabHeader active={selected === i} key={`tab-${i}`} onClick={() => setSelected(i)}>{tab.title}</TabHeader>)}</TabHeaderWrapper>\n        <TabWrapper>{tabs[selected].element}</TabWrapper>\n    </TabContainerWrapper>\n}\n","import { LG, MD } from \"consts\";\nimport { FunctionComponent } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Component } from \"typedoc/dist/lib/utils\";\nimport { DARK_BACKGROUND, LIGHT, LIGHT_TEXT, TEXT_ACCENT } from \"../../../consts/colors\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-grow: 1;\n    height: 100vh;\n\n    @media(max-width: ${LG}px) {\n        flex-direction: column;\n        height: auto;\n    }\n`\n\nconst Sidebar = styled.div`\n    min-width: 300px;\n    background: ${DARK_BACKGROUND};\n    color: ${LIGHT_TEXT};\n    padding: 20px;    \n\n    @media(max-width: ${LG}px) {\n        min-width: unset;\n    }\n    `\n\nconst Content = styled.div`\n    flex-grow: 1;\n    padding: 20px;\n    overflow-y: scroll;\n\n    @media(max-width: ${LG}px) {\n        padding-bottom: 40px;\n    }\n`\n\nexport interface SidebarLayoutProps {\n    sidebarContent: Component,\n}\n\nexport const SidebarLayout: FunctionComponent<SidebarLayoutProps> = ({ sidebarContent, children }) => {\n    return <Wrapper>\n        <Sidebar>{sidebarContent}</Sidebar>\n        <Content>{children}</Content>\n    </Wrapper>\n}\n\nexport const SidebarLink = styled(NavLink).attrs({ activeclassname: 'active', exact: 'true' })`\n    display: block;\n    color: ${LIGHT_TEXT};\n    font-size: 2rem;\n    padding: 20px;\n    margin-left: -20px;\n    margin-right: -20px;\n    &:hover {\n        color: ${TEXT_ACCENT};\n    }\n    &:last-of-type {\n        margin-bottom: 40px;\n    }\n    &.active {\n        background: ${LIGHT_TEXT};\n        color: ${DARK_BACKGROUND};\n    }\n\n    @media(max-width: ${LG}px) {\n        padding: 10px 20px;\n\n        &:last-of-type {\n            margin-bottom: 20px;\n        }\n    }\n`","import styled from 'styled-components';\n\nexport const BigParagraph = styled.p`\n  font-size: 1.6rem;\n  line-height: 3rem;\n  margin: 0;\n`;\n","import { BASE_URL } from \"consts\"\nimport { useQuery } from \"react-query\"\nimport { useWalletConnect } from '@provenanceio/walletconnect-js';\nimport { useGetNames } from \"./useGetNames\";\nimport { InvoiceWithCalc } from \"models\";\n\nexport const useInvoiceList = (from: boolean) => {\n    const { walletConnectState: { address } } = useWalletConnect()\n    const { data: myNames } = useGetNames(address)\n\n    return useQuery<InvoiceWithCalc[]>(['invoices', from, address], async () => {\n        const results = from\n            ? (await (await fetch(`${BASE_URL}/invoices/address/from/${address}`)).json())\n            : (await (await fetch(`${BASE_URL}/invoices/address/all`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ addresses: [address, ...(myNames || [])] }) })).json())\n\n        return results\n    })\n}","import { ROOT_NAME } from \"consts\"\nimport { useQuery } from \"react-query\"\nimport { NameContractService } from \"services/NameContractService\"\n\nexport const useGetNames = (address: string) => {\n    const nameService = new NameContractService(ROOT_NAME)\n    return useQuery(['names', address], async () => {\n        return await nameService.listNames(address)\n    })\n}","import { MD } from \"consts\";\nimport { FunctionComponent } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport Input from '../Input/Input';\n\ninterface SearchInputProps {\n    maxWidth?: number\n}\n\nconst SearchInput = styled(Input).attrs(({ style: { borderRadius: '20px', marginBottom: 0 } }))<SearchInputProps>`\n    max-width: ${({ maxWidth }) => (`${maxWidth}px` || 'none')};\n\n\n  @media (max-width: ${MD}px) {\n    max-width: 100%;\n    width: 100%;\n  }\n`\n\nexport interface SearchProps {\n    maxWidth?: number,\n}\n\nexport const Search: FunctionComponent<SearchProps> = ({ maxWidth }) => {\n    const formMethods = useForm()\n    return <FormProvider {...formMethods}>\n        <SearchInput disabled={false} maxWidth={maxWidth} placeholder=\"Search\" name=\"search\" />\n    </FormProvider>\n}","import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nconst IconWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin-right: 10px;\n`\nconst Icon = () => <IconWrapper>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"20\" viewBox=\"0 0 22 20\"><path fill=\"none\" fill-rule=\"evenodd\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 0H0l8 9.46V16l4 2V9.46z\" transform=\"translate(1 1)\"/></svg>\n</IconWrapper>\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport interface ListFiltersProps {\n\n}\n\nexport const ListFilters: FunctionComponent<ListFiltersProps> = ({ children }) => <Wrapper><Icon />{children}</Wrapper>","import { Dropdown } from \"Components\";\nimport { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.select`\n    padding: 5px 10px;\n`\n\nconst Item = styled.option`\n    \n`\n\nexport interface ToggleFilterProps {\n    options: { key: string, value: string }[],\n    onChange: (key: string) => void,\n}\n\nexport const ToggleFilter: FunctionComponent<ToggleFilterProps> = ({ options, onChange }) => {\n    return <Wrapper onChange={e => onChange(e.target.value)}>\n        {options.map((opt, i) => <Item key={`item-${i}`} value={opt.key}>{opt.value}</Item>)}\n    </Wrapper>\n}","import { FunctionComponent, useMemo, useState } from \"react\";\nimport { useInvoiceList } from \"../../../hooks/useInvoiceList\";\nimport { FormWrapper } from \"../../Form\";\nimport { Button } from 'Components';\nimport { Invoice } from \"../../../proto/invoice_protos_pb\";\nimport styled from \"styled-components\";\nimport { TitleHeader } from \"../../Headers\";\nimport { calculateTotal, currencyFormatter, enumStringToHumanReadable, invoiceTotal } from \"../../../util\";\nimport { Search } from \"../../Search\";\nimport { Colors, MD, SM } from 'consts';\nimport { Link, useNavigate } from 'react-router-dom'\nimport { ListFilters, ToggleFilter } from \"Components/Filters\";\nimport { InvoiceWithCalc } from \"models\";\n\nconst TotalDetails = styled.div`\n    display: flex;\n    flex-grow: 1;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n\n    @media (max-width: ${MD}px) {\n        flex-direction: column;\n        align-items: flex-start;\n    }\n`\n\nconst InvoiceTable = styled.div`\n    width: 100%;\n    margin-top: 30px;\n    color: ${Colors.DARK};\n`\n\ninterface InvoiceRowProps {\n    invoice: InvoiceWithCalc\n}\n\nconst TableElement = styled.div`\n    font-size: 1.2rem;\n`\n\nconst InvoiceRowWrapper = styled.div`\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(5, 1fr);\n    border-top: 1px solid black;\n    padding: 10px;\n    align-items: center;\n\n    color: ${Colors.TEXT};\n    &:hover {\n        background: rgba(0, 0, 0, .2);\n    }\n\n    > *:last-child {\n        display: flex;\n        justify-content: flex-end;\n        text-align: right;\n    }\n\n    @media (max-width: ${MD}px) {\n        grid-template-columns: repeat(4, 1fr);\n\n        > :nth-child(3) {\n            display: none;\n        }\n    }\n\n    @media (max-width: ${SM}px) {\n        grid-template-columns: 1fr 1fr;\n\n        > :nth-child(2) {\n            display: flex;\n            justify-content: flex-end;\n            text-align: right;\n        }\n    }\n`\n\nconst InvoiceRow: FunctionComponent<InvoiceRowProps> = ({ invoice }) => {\n    const paymentDenom = invoice.invoice.paymentDenom\n    const formatter = useMemo(() => currencyFormatter(paymentDenom), [paymentDenom])\n\n    return <Link to={`/${invoice.uuid}`}>\n        <InvoiceRowWrapper>\n            <TableElement>{invoice.invoice.description}</TableElement>\n            <TableElement>{invoice.invoice.toAddress}</TableElement>\n            <TableElement><b>{formatter(invoice.totalOwed)}</b></TableElement>\n            <TableElement><b>{formatter(invoice.calc.remainingOwed)}</b></TableElement>\n            <TableElement>{enumStringToHumanReadable(invoice.calc.paymentStatus)}</TableElement>\n        </InvoiceRowWrapper>\n    </Link>\n}\n\nconst InvoiceHeaderWrapper = styled(InvoiceRowWrapper)`\n    border-top: none;\n    font-weight: bold;\n    &:hover {\n        background: transparent;\n    }\n`\n\nconst InvoiceHeader = () => <InvoiceHeaderWrapper>\n    <TableElement>Description</TableElement>\n    <TableElement>Vendor</TableElement>\n    <TableElement>Amount</TableElement>\n    <TableElement>Balance</TableElement>\n    <TableElement>Payment Status</TableElement>\n</InvoiceHeaderWrapper>\n\nexport interface ListInvoicesProps {\n\n}\n\n\nexport const ListInvoices: FunctionComponent<ListInvoicesProps> = ({}) => {\n    const [from, setFrom] = useState(true)\n    const { data: invoices, isLoading, isError, error } = useInvoiceList(from)\n    const navigate = useNavigate()\n\n    const details = <>\n        <TotalDetails>\n            {/* <TitleHeader title=\"Total Amount Outstanding\">{invoices && calculateTotal(invoices)} (VARIOUS CURRENCIES?)</TitleHeader> */}\n            <TitleHeader title=\"Total Invoices Outstanding\">{invoices?.length || 0}</TitleHeader>\n            <Search maxWidth={300} />\n        </TotalDetails>\n        <ListFilters>\n            <ToggleFilter options={[{ key: 'from', value: 'Sent' }, { key: 'to', value: 'Received' }]} onChange={key => setFrom(key === 'from')} />\n        </ListFilters>\n    </>\n\n    return <FormWrapper title=\"Invoices\" action={<Button onClick={() => navigate('/create')}>New Invoice</Button>} headerDetails={details}>\n        {isLoading && <div>Loading...</div>}\n        {isError && <div>Error fetching invoices</div>}\n        {invoices && !isLoading && <InvoiceTable>\n            <InvoiceHeader />\n            {invoices.map((invoice, i) => <InvoiceRow key={invoice?.uuid + `-${i}`} invoice={invoice}/>)}\n        </InvoiceTable>}\n    </FormWrapper>\n}","import { FunctionComponent, useState } from \"react\";\nimport { useVendors } from \"../../hooks/useVendors\";\nimport Dropdown from '../Dropdown/Dropdown';\n\ninterface VendorSelectorProps {\n    disabled?: boolean,\n    required?: boolean | string,\n}\n\nexport const VendorSelector: FunctionComponent<VendorSelectorProps> = ({ disabled, required }) => {\n    const [searchTerm, setSearchTerm] = useState('')\n    const { data: vendors, isLoading } = useVendors(searchTerm)\n\n    if (isLoading) {\n        return <div>Loading...</div>\n    }\n\n    if (!vendors) {\n        return <div>Error fetching vendors</div>\n    }\n\n    return <Dropdown disabled={!!disabled} required={required} name=\"vendor\" label=\"Vendor\" options={['Select a Vendor...', ...vendors.map(v => v.name)]} />\n}","import { ROOT_NAME } from \"consts\"\nimport { useQuery } from \"react-query\"\nimport { NameContractService } from \"services/NameContractService\"\n\nexport const useVendors = (search: string) => {\n    const nameService = new NameContractService(ROOT_NAME)\n    return useQuery(['vendors', search], async () => {\n        const results = await nameService.searchNames(search)\n        return results\n    })\n}","import styled from \"styled-components\";\nimport { Colors } from 'consts';\nimport { LIGHT_TEXT } from '../../consts/colors';\n\nexport const ErrorBar = styled.div`\n    padding: 10px 20px;\n    color: white;\n    font-size: 2rem;\n    text-align: center;\n    background: ${Colors.WARN};\n    margin-top: 20px;\n`","import styled from \"styled-components\";\n\nexport const SubmittingOverlay = styled.div`\n    position: fixed;\n    background: rgba(0, 0, 0, .5);\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    color: white;\n    pointer-events: none;\n`","import { FunctionComponent } from \"react\"\nimport styled from \"styled-components\"\nimport { Colors } from 'consts';\nimport { DARK } from '../../../consts/colors';\nimport { LineItem } from \"../../../proto/invoice_protos_pb\";\nimport { Input } from 'Components';\nimport { FormRow } from \"../../Form\";\nimport { newDecimal } from \"../../../util\";\n\nconst Wrapper = styled.div`\n    padding: 0 20px 10px 20px;\n    border: 1px solid ${Colors.DARK};\n    border-radius: 4px;\n    margin-bottom: 10px;\n`\n\nexport interface InvoiceLineItemProps {\n    index: number,\n    disabled?: boolean,\n}\n\nexport const InvoiceLineItem: FunctionComponent<InvoiceLineItemProps> = ({ index, disabled }) => {\n    return <Wrapper>\n        <Input disabled={disabled} required=\"please enter a name\" label=\"Name\" name={`line_item.${index}.name`} />\n        <Input disabled={disabled} required=\"please enter a description\" label=\"Description\" name={`line_item.${index}.description`} />\n        <FormRow columns={2}>\n            <Input disabled={disabled} required=\"please enter a quantity\" type=\"number\" label=\"Quantity\" name={`line_item.${index}.quantity`} />\n            <Input disabled={disabled} required=\"please enter a price\" type=\"number\" label=\"Price\" name={`line_item.${index}.price`} />\n        </FormRow>\n    </Wrapper>\n}","import { FunctionComponent, useEffect, useState } from \"react\";\nimport { FormActions, FormRow, FormWrapper } from \"../../Form\";\nimport { SubHeader } from 'Components/Headers';\nimport { Input } from 'Components';\nimport { VendorSelector } from \"../../Vendor/VendorSelector\";\nimport Dropdown from \"../../Dropdown/Dropdown\";\nimport { Button } from 'Components';\nimport { useNavigate } from 'react-router-dom';\nimport { Invoice, LineItem } from \"../../../proto/invoice_protos_pb\";\nimport { Date as DateProto } from \"../../../proto/util_protos_pb\";\nimport { addDays, format, parse } from 'date-fns'\nimport { newDate, newInvoice, newLineItem, newRandomUuid, newDecimal, decodeB64 } from \"../../../util\";\nimport { ErrorBar } from \"../../Error/ErrorBar\";\nimport { SubmittingOverlay } from \"../../Submitting/SubmittingOverlay\";\nimport { CreateInvoiceResponse, useCreateInvoice } from \"../../../hooks/useCreateInvoice\";\nimport { InvoiceLineItem } from \"./InvoiceLineItem\";\nimport styled from \"styled-components\";\nimport { useForm, FormProvider, useFormState } from 'react-hook-form'\nimport { useWalletConnect } from '@provenanceio/walletconnect-js';\nimport { MultiMessageStepModal, parseSignMessage, SignMessage } from \"Components/MultiMessageStepModal\";\nimport { MsgWriteScopeRequest, MsgWriteSessionRequest, MsgWriteRecordRequest } from '@provenanceio/wallet-lib/lib/proto/provenance/metadata/v1/tx_pb'\nimport { MsgExecuteContract } from '@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/tx_pb';\nimport { InvoiceContractService } from \"services\";\nimport { INVOICE_DATE_FORMAT, ROOT_PAYABLE_NAME } from \"consts\";\nimport { useGetDenoms } from \"hooks\";\n\ninterface TermsSelectorProps {\n    value?: string,\n    disabled?: boolean,\n    required?: boolean | string,\n}\n\nconst TermsSelector: FunctionComponent<TermsSelectorProps> = ({ value, disabled, required, }) => {\n    const [selected, setSelected] = useState(value || '90 Days')\n    const options = ['90 Days', '180 Days']\n\n    return <Dropdown disabled={disabled} required={required} name=\"terms\" label=\"Terms\" options={['Select Terms...', ...options]} />\n}\n\nconst LineItemWrapper = styled.div`\n    margin-bottom: 20px;\n`\ninterface CreateInvoiceProps {\n    \n}\n\nexport const CreateInvoice: FunctionComponent<CreateInvoiceProps> = ({ }) => {\n    const { onCreate } = useCreateInvoice()\n    const { data: denoms } = useGetDenoms()\n\n    const navigate = useNavigate()\n\n    const [reviewing, setReviewing] = useState(false)\n    const [submitting, setSubmitting] = useState(false)\n    const [signing, setSigning] = useState(false)\n    const [messages, setMessages] = useState<SignMessage[]>([])\n    const [handleComplete, setHandleComplete] = useState(() => () => navigate('/'))\n    const [error, setError] = useState('')\n\n    const { walletConnectState: { address } } = useWalletConnect()\n\n    const defaultLineItems: { name: string, description: string, quantity: number, price: number }[] = []\n    const formMethods = useForm({\n        reValidateMode: 'onBlur',\n        defaultValues: {\n            invoice_date: format(new Date(), INVOICE_DATE_FORMAT),\n            // todo: remove below, for testing only\n            description: 'the best description',\n            line_item: defaultLineItems,\n            paymentDenom: 'nhash'\n        }\n    })\n\n    // todo: remove, for testing\n    const newDummyLineItem = (i: number) => newLineItem()\n        .setName(`line item ${i}`)\n        .setDescription(`line item ${i} description`)\n        .setQuantity(i)\n        .setPrice(newDecimal(+`${i}${i}`))\n\n    const { handleSubmit } = formMethods\n\n    const [lineItems, setLineItems] = useState<LineItem[]>([])\n    const addLineItem = () => {\n        // setLineItems([...lineItems, newLineItem()])\n        const dummyItem = newDummyLineItem(lineItems.length + 1)\n        formMethods.setValue(`line_item`, [...formMethods.getValues().line_item, {\n            name: dummyItem.getName(),\n            description: dummyItem.getDescription(),\n            quantity: dummyItem.getQuantity(),\n            price: +(dummyItem.getPrice()?.getValue() || 0)\n        }])\n        setLineItems([...lineItems, dummyItem])\n    }\n    useEffect(() => {\n        addLineItem()\n    }, [])\n\n    const createInvoice = async (data: any) => {\n        setSubmitting(true)\n        setError('')\n        \n        try {\n            const invoice = newInvoice()\n            const startDate = parse(data.invoice_date, INVOICE_DATE_FORMAT, new Date())\n            const dueDate = addDays(startDate, parseInt(data.terms))\n            invoice.setToAddress(data.vendor)\n                .setFromAddress(address)\n                .setInvoiceCreatedDate(newDate(startDate))\n                .setInvoiceDueDate(newDate(dueDate))\n                .setDescription(data.description)\n                .setPaymentDenom(data.paymentDenom)\n                .setLineItemsList(data.line_item.map((lineItem: any) => newLineItem()\n                    .setName(lineItem.name)\n                    .setDescription(lineItem.description)\n                    .setQuantity(lineItem.quantity)\n                    .setPrice(newDecimal(lineItem.price))\n                ))\n                \n            const createResult = await onCreate(invoice)\n\n            const invoiceContractService = new InvoiceContractService(ROOT_PAYABLE_NAME)\n\n            setMessages([\n                parseSignMessage(createResult.scopeGenerationDetail.writeScopeRequest, MsgWriteScopeRequest.deserializeBinary),\n                parseSignMessage(createResult.scopeGenerationDetail.writeSessionRequest, MsgWriteSessionRequest.deserializeBinary),\n                parseSignMessage(createResult.scopeGenerationDetail.writeRecordRequest, MsgWriteRecordRequest.deserializeBinary),\n                parseSignMessage({typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract', value: await invoiceContractService.generateCreateInvoiceBase64Message(createResult.payablesContractExecutionDetail, address)}, MsgExecuteContract.deserializeBinary),\n            ])\n            setHandleComplete(() => () => navigate(`/invoices/${invoice?.getInvoiceUuid()?.getValue()}`))\n\n            setSigning(true)\n        } catch (e) {\n            console.log({ e })\n            setError(e)\n            setSubmitting(false)\n            setReviewing(false)\n        }\n    }\n\n    return <FormWrapper title=\"Create Invoice\">\n        {signing && <MultiMessageStepModal messages={messages} onComplete={handleComplete} />}\n        {submitting && <SubmittingOverlay>Submitting...</SubmittingOverlay>}\n            <FormProvider {...formMethods}>\n                <form onSubmit={e => e.preventDefault()}>\n                    <VendorSelector required disabled={reviewing} />\n                    <FormRow columns={2}>\n                        <Input type=\"date\" required disabled={reviewing} label=\"Invoice Date\" name=\"invoice_date\"></Input>\n                        <TermsSelector required disabled={reviewing} />\n                    </FormRow>\n                    <Input disabled={reviewing} required=\"please enter a description\" label=\"Description\" name=\"description\" />\n                    <Dropdown name=\"paymentDenom\" label=\"Payment Denom\" options={['Select a Payment Denom', ...(denoms || [])]} />\n                    <LineItemWrapper>\n                        <SubHeader>Line Items</SubHeader>\n                        {lineItems.map((li, i) => <InvoiceLineItem disabled={reviewing} index={i} key={`invoice-lineitem-${i}`}></InvoiceLineItem>)}\n                        <Button disabled={reviewing} onClick={addLineItem}>Add Line Item</Button>\n                    </LineItemWrapper>\n                    <FormActions>\n                        {reviewing ?\n                            <Button width=\"100%\" type=\"submit\" onClick={handleSubmit(createInvoice)}>Submit</Button> :\n                            <Button width=\"100%\" type=\"button\" onClick={() => setReviewing(true)}>Review</Button>\n                        }\n                        <Button type=\"button\" secondary width=\"100%\" onClick={() => reviewing ? setReviewing(false) : navigate('/')}>Cancel</Button>\n                    </FormActions>\n                </form>\n            </FormProvider>\n        {error && <ErrorBar>{`${error}`}</ErrorBar>}\n    </FormWrapper>\n}\n","import { BASE_URL } from \"consts\"\nimport { Invoice } from \"../proto/invoice_protos_pb\"\nimport { useWalletConnect } from '@provenanceio/walletconnect-js'\n\nexport interface PayablesContractExecutionDetail {\n    payableType: string,\n    payableUuid: string,\n    scopeId: string,\n    invoiceDenom: string,\n    invoiceTotal: number,\n}\n\nexport interface CreateInvoiceResponse {\n    invoice: any,\n    payablesContractExecutionDetail: PayablesContractExecutionDetail,\n    scopeGenerationDetail: {\n        writeScopeRequest: any,\n        writeSessionRequest: any,\n        writeRecordRequest: any,\n    }\n}\n\nexport const useCreateInvoice = () => {\n    const { walletConnectState } = useWalletConnect()\n\n    const { address } = walletConnectState\n    return {\n        onCreate: async (invoice: Invoice): Promise<CreateInvoiceResponse> => {\n            const { lineItemsList: lineItems, ...rest } = invoice.toObject()\n            const body = JSON.stringify({ ...rest, lineItems })\n            const res = await fetch(`${BASE_URL}/invoices/onboard`, { method: 'POST', body, headers: {\n                'Content-Type': 'application/json',\n                'x-address': address,\n            } })\n            const resBody = await res.json()\n\n            if (res.status != 200) {\n                throw Error(`Error Creating Invoice: ${resBody.error}`)\n            }\n\n            return resBody\n        }\n    }\n}\n","import { BASE_URL } from \"consts\"\nimport { useQuery } from \"react-query\"\n\nexport const useGetDenoms = () => {\n    return useQuery<string[]>(['denoms'], async () => {\n        const res = await fetch(`${BASE_URL}/denom/all`)\n        \n        return await res.json()\n    })\n}","import { Button, Input } from \"Components\";\nimport { Header } from \"Components/Headers\";\nimport { Modal } from \"Components/Modal\";\nimport { FunctionComponent, useMemo } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { currencyFormatter } from \"../../util\";\n\nexport interface PaymentModalProps {\n    invoiceUuid: string,\n    outstandingBalance: number,\n    paymentDenom: string,\n    initialAmount?: number,\n    onSubmit: (amount: number) => void,\n    requestClose?: () => any,\n}\n\nexport const PaymentModal: FunctionComponent<PaymentModalProps> = ({ invoiceUuid, outstandingBalance, paymentDenom, initialAmount, onSubmit, requestClose }) => {\n    const formMethods = useForm()\n\n    const formatter = useMemo(() => currencyFormatter(paymentDenom), [paymentDenom])\n\n    return <Modal requestClose={requestClose}>\n        <FormProvider {...formMethods}>\n            <form onSubmit={formMethods.handleSubmit((data: any) => onSubmit(data.amount))}>\n                <Header style={{ marginTop: 0 }}>Make a Payment</Header>\n                <Input required=\"Please specify a payment amount\" type=\"number\" name=\"amount\" label={`Amount (${paymentDenom})`} registerConfig={{ max: outstandingBalance }} />\n                <div>Outstanding Balance: {formatter(outstandingBalance)}</div>\n                <Button width=\"100%\" type=\"submit\">Submit</Button>\n            </form>\n        </FormProvider>\n    </Modal>\n}","import { FunctionComponent, MouseEventHandler, useEffect, useRef, useState } from \"react\";\nimport { QRCode } from \"react-qrcode-logo\";\nimport { useLocation } from \"react-router-dom\";\nimport { Modal } from 'Components/Modal';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Button, Popup } from \"Components\";\nimport styled from \"styled-components\";\nimport { Colors } from \"consts\";\n\nconst QrWrapper = styled.div`\n    cursor: pointer;\n    margin-bottom: 20px;\n`\n\ninterface ClipboardItem {\n    readonly types: string[];\n    readonly presentationStyle: \"unspecified\" | \"inline\" | \"attachment\";\n    getType(): Promise<Blob>;\n}\n\ninterface ClipboardItemData {\n    [mimeType: string]: Blob | string | Promise<Blob | string>;\n}\n\ndeclare var ClipboardItem: {\n    prototype: ClipboardItem;\n    new (itemData: ClipboardItemData): ClipboardItem;\n};\n\nexport interface QRModalProps {\n    requestClose: () => any\n}\n\nexport const QRModal: FunctionComponent<QRModalProps> = ({ requestClose }) => {\n    const [copyMessage, setCopyMessage] = useState(\"\")\n    const [qrContent, setQrContent] = useState<any>(null)\n    const ref = useRef<QRCode>(null)\n    \n    const url = window.location.href;\n\n    useEffect(() => {\n        (ref?.current as any)?.canvas.current.toBlob((blob: any) => {\n            setQrContent(blob)\n        })\n    }, [ref])\n\n    const copyQrToClipboard: MouseEventHandler = e => {\n        try {\n            const content = (e.target as HTMLCanvasElement).toBlob(blob => {\n                if (!blob) {\n                    setCopyMessage(\"Failed to copy qr contents to clipboard, please share link\")\n                } else {\n                    (navigator.clipboard as any).write([new ClipboardItem({ \"image/png\": blob })])\n                    setCopyMessage(\"QR Code Copied to Clipboard\")\n                }\n            })\n        } catch (e) {\n            setCopyMessage(\"Failed to copy qr contents to clipboard, please share link\")\n        }\n    }\n\n    return <Modal requestClose={requestClose}>\n        <div style={{ textAlign: 'center' }}>click on QR code to copy</div>\n        <QrWrapper onClick={copyQrToClipboard}>\n            <QRCode ref={ref} size={300} value={url} />\n        </QrWrapper>\n        <CopyToClipboard text={url} onCopy={(text, result) => {\n            console.log({ text, result })\n            setCopyMessage(`${text} was copied to clipboard`)\n        }}>\n            <Button width=\"100%\">Copy URL to Clipboard</Button>\n        </CopyToClipboard>\n        {copyMessage && <Popup onClose={() => {\n            setCopyMessage(\"\")\n            requestClose()\n        }}>{copyMessage}</Popup>}\n    </Modal>\n}","import { FunctionComponent, useState } from 'react';\nimport { Button } from 'Components';\nimport { QRModal } from 'Components/QRModal';\nimport styled from 'styled-components';\nimport { Colors } from 'consts';\n\nconst ShareIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">    <path d=\"M 18 2 A 3 3 0 0 0 15 5 A 3 3 0 0 0 15.054688 5.5605469 L 7.9394531 9.7109375 A 3 3 0 0 0 6 9 A 3 3 0 0 0 3 12 A 3 3 0 0 0 6 15 A 3 3 0 0 0 7.9355469 14.287109 L 15.054688 18.439453 A 3 3 0 0 0 15 19 A 3 3 0 0 0 18 22 A 3 3 0 0 0 21 19 A 3 3 0 0 0 18 16 A 3 3 0 0 0 16.0625 16.712891 L 8.9453125 12.560547 A 3 3 0 0 0 9 12 A 3 3 0 0 0 8.9453125 11.439453 L 16.060547 7.2890625 A 3 3 0 0 0 18 8 A 3 3 0 0 0 21 5 A 3 3 0 0 0 18 2 z\"/></svg>\n\nconst StyledButton = styled(Button)`\n    svg {\n        fill: white;\n        margin-right: 10px;\n    }\n`\n\nexport interface ShareButtonProps {\n\n}\n\nexport const ShareButton: FunctionComponent<ShareButtonProps> = ({}) => {\n    const [qrOpen, setQrOpen] = useState(false)\n\n    return <>\n        {qrOpen && <QRModal requestClose={() => setQrOpen(false)} />}\n        <StyledButton onClick={() => setQrOpen(true)}><ShareIcon /> Share</StyledButton>\n    </>\n}","import { useMemo, useState } from 'react'\nimport { FormWrapper } from \"Components/Form\";\nimport { Colors, DISPLAY_DATE_FORMAT, INVOICE_DATE_FORMAT, MD, ROOT_PAYABLE_NAME } from \"consts\";\nimport { parse, format } from \"date-fns\";\nimport { useGetCalc } from \"hooks\";\nimport { FunctionComponent } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { enumStringToHumanReadable, currencyFormatter } from \"../../../util\";\nimport { Button } from 'Components';\nimport { PaymentModal } from 'Components/PaymentModal';\nimport { MultiMessageStepModal, parseSignMessage, SignMessage } from 'Components/MultiMessageStepModal';\nimport { InvoiceContractService } from 'services';\nimport { useWalletConnect } from '@provenanceio/walletconnect-js';\nimport { MsgExecuteContract } from '@provenanceio/wallet-lib/lib/proto/cosmwasm/wasm/v1/tx_pb';\nimport {LineItemCalc, PaymentCalc} from \"../../../models/InvoiceCalc\";\nimport AddressLink from \"../../AddressLink\";\nimport { ShareButton } from 'Components/ShareButton';\n\nconst InvoiceHeader = styled.div`\n    display: flex;\n    font-size: 1.4rem;\n    padding: 30px 0;\n    justify-content: space-between;\n\n    > * {\n        flex-grow: 0;\n        flex-basis: min-content;\n        white-space: nowrap;\n    }\n\n\n    @media (max-width: ${MD}px) {\n        flex-direction: column;\n    }\n`\n\nconst SimpleTwoColumn = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 10px;\n\n    > :nth-child(odd) {\n        text-align: right;\n    }\n\n\n    @media (max-width: ${MD}px) {\n        grid-template-columns: 1fr;\n        > :nth-child(odd) {\n            text-align: left;\n        }\n    }\n`\n\nconst InvoiceLineItems = styled.div``\n\nconst InvoiceItemDetail = styled.div`\n    display: grid;\n    grid-template-columns: 4fr 2fr 1fr 1fr;\n    grid-gap: 10px;\n    padding: 10px 20px;\n    font-size: 1.3rem;\n\n    > :nth-child(2) {\n        text-align: center;\n    }\n\n    > :nth-child(3), > :nth-child(4) {\n        text-align: right;\n    }\n\n    &:nth-child(odd):not(:first-child) {\n        background-color: rgba(0, 0, 0, .1);\n    }\n\n\n    @media (max-width: ${MD}px) {\n        grid-template-columns: repeat(4, 1fr);\n\n        > :nth-child(1) {\n            grid-column: 1/4;\n        }\n        > :nth-child(2) {\n            grid-column: 1;\n        }\n        > :nth-child(3) {\n            grid-column: 2;\n        }\n        > :nth-child(4) {\n            grid-column: 4;\n        }\n        > :nth-child(2), > :nth-child(3) {\n            grid-row: 2;\n            text-align: left;\n        }\n    }\n`\n\nconst InvoiceLineItemHeader = styled(InvoiceItemDetail)`\n    background: ${Colors.DARK_BACKGROUND};\n    color: ${Colors.LIGHT};\n    font-weight: bold;\n`\n\nconst InvoicePayments = styled.div``\n\nconst InvoicePaymentHeader = styled(InvoiceItemDetail)`\n    background: ${Colors.PAYMENT_BLUE};\n    color: ${Colors.LIGHT};\n    font-weight: bold;\n`\n\nconst InvoiceFooter = styled.div`\n    display: grid;\n    grid-gap: 10px;\n    padding: 10px 20px;\n    border-top: 2px solid ${Colors.DARKEN};\n    grid-template-areas: \"left left left left label label label value\";\n    font-size: 1.3rem;\n    text-align: right;\n\n    @media (max-width: ${MD}px) {\n        grid-template-areas: \"label value\";\n        padding-left: 0;\n    }\n`\n\nconst ActionContainer = styled.div`\n    display: flex;\n    > :not(:last-child) {\n        margin-right: 5px;\n    }\n    \n    @media (max-width: ${MD}px) {\n        flex-direction: column;\n\n        > * {\n            margin-top: 10px;\n        }\n        > :not(:last-child) {\n            margin-right: 0;\n        }\n    }\n`\n\nexport interface InvoiceDetailsProps {\n\n}\n\nexport const InvoiceDetails: FunctionComponent<InvoiceDetailsProps> = ({ }) => {\n    const { uuid } = useParams()\n    const { data: invoiceCalc, isError, isLoading, refetch: refreshInvoice, } = useGetCalc(uuid || '')\n    const [paymentOpen, setPaymentOpen] = useState(false)\n    const [messages, setMessages] = useState<SignMessage[]>([])\n\n    const { walletConnectState: { address } } = useWalletConnect()\n\n    const paymentDenom = invoiceCalc?.paymentDenom || 'USD'\n    const formatter = useMemo(() => currencyFormatter(paymentDenom), [paymentDenom])\n\n    const service = new InvoiceContractService(ROOT_PAYABLE_NAME)\n\n    if (!invoiceCalc || isError) {\n        return <div>Error retrieving invoice</div>\n    }\n\n    if (isLoading) {\n        return <div>Loading...</div>\n    }\n\n    const dateFormat = (date?: string) => format(parse(date || '', INVOICE_DATE_FORMAT, new Date()), DISPLAY_DATE_FORMAT)\n\n    const timestampToDate = (timestamp: string) => format(Date.parse(timestamp), DISPLAY_DATE_FORMAT)\n\n    const handlePayment = async (amount: number) => {\n        setPaymentOpen(false)\n\n        const message = await service.generateMakePaymentBase64Message(invoiceCalc?.uuid || '', amount, paymentDenom, address)\n\n        setMessages([\n            parseSignMessage({ typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract', value: message }, MsgExecuteContract.deserializeBinary)\n        ])\n    }\n\n    const handleCompletedPayment = () => {\n        setMessages([])\n        refreshInvoice()\n    }\n\n    const action = <ActionContainer>\n        <ShareButton />\n        <Button disabled={!invoiceCalc || invoiceCalc.paidOff || invoiceCalc.paymentStatus == 'RESTRICTED'} onClick={() => setPaymentOpen(true)}>Make Payment</Button>\n    </ActionContainer>\n\n    return <>\n        {messages?.length > 0 && <MultiMessageStepModal messages={messages} onComplete={handleCompletedPayment} />}\n        {paymentOpen && <PaymentModal requestClose={() => setPaymentOpen(false)} invoiceUuid={uuid || ''} outstandingBalance={invoiceCalc?.remainingOwed} paymentDenom={invoiceCalc.paymentDenom} initialAmount={0} onSubmit={handlePayment} />}\n        <FormWrapper title=\"Invoice Details\" action={action}>\n            <InvoiceHeader>\n                <div>\n                    <div>\n                        <b>Description:</b> {invoiceCalc.description}\n                    </div>\n                    <div>\n                        <b>From:</b> <AddressLink showAddressText={false} address={invoiceCalc.ownerAddress} />\n                    </div>\n                    <div>\n                        <b>To:</b> {invoiceCalc.payerAddress}\n                    </div>\n                </div>\n                <div>\n                    <SimpleTwoColumn>\n                        <b>UUID:</b>\n                        <div>{invoiceCalc.uuid}</div>\n                        <b>Created Date:</b>\n                        <div>{dateFormat(invoiceCalc.createdDate)}</div>\n                        <b>Due Date:</b>\n                        <div>{dateFormat(invoiceCalc.dueDate)}</div>\n                        <b>Onboarding Status:</b>\n                        <div>{enumStringToHumanReadable(invoiceCalc.invoiceStatus)}</div>\n                        <b>Payment Status:</b>\n                        <div>{enumStringToHumanReadable(invoiceCalc.paymentStatus)}</div>\n                    </SimpleTwoColumn>\n                </div>\n            </InvoiceHeader>\n            <InvoiceLineItems>\n                <InvoiceLineItemHeader>\n                    <div>Items</div>\n                    <div>Quantity</div>\n                    <div>Price</div>\n                    <div>Amount</div>\n                </InvoiceLineItemHeader>\n                {invoiceCalc?.lineItems?.map((lineItem: LineItemCalc, i: number) => <InvoiceItemDetail key={`lineItem-${i}`}>\n                    <div>\n                        <b>{lineItem.name}</b>\n                        <p>{lineItem.description}</p>\n                    </div>\n                    <div>{lineItem.quantity}</div>\n                    <div>{formatter(lineItem.price)}</div>\n                    <div><b>{formatter(lineItem.total)}</b></div>\n                </InvoiceItemDetail>)}\n            </InvoiceLineItems>\n            {invoiceCalc?.payments?.length > 0 && (\n                <InvoicePayments>\n                    <InvoicePaymentHeader>\n                        <div>Payments</div>\n                        <div>Date</div>\n                        <div>Sender</div>\n                        <div>Amount</div>\n                    </InvoicePaymentHeader>\n                    {invoiceCalc?.payments?.map((payment: PaymentCalc, i: number) => <InvoiceItemDetail key={`payment=${i}`}>\n                        <div>UUID: {payment.uuid}</div>\n                        <div>{timestampToDate(payment.effectiveTime)}</div>\n                        <AddressLink address={payment.fromAddress} showAddressText={false} altText={'View'} />\n                        <div><b>{payment.paymentAmount}{payment.paymentDenom}</b></div>\n                    </InvoiceItemDetail>)}\n                </InvoicePayments>\n            )}\n            <InvoiceFooter>\n                <b style={{gridColumn: 'label'}}>Total:</b>\n                <b>{formatter(invoiceCalc?.originalOwed || 0)}</b>\n                <b style={{gridColumn: 'label'}}>Payments:</b>\n                <b>{invoiceCalc?.paymentSum > 0 ? \"- \" : \"\"}{formatter(invoiceCalc?.paymentSum || 0)}</b>\n                <div style={{borderBottom: '2px solid grey', gridColumn: 'label / value' }} />\n                <b style={{gridColumn: 'label'}}>Amount Due:</b>\n                <div><b>{formatter(invoiceCalc?.remainingOwed || 0)}</b></div>\n            </InvoiceFooter>\n        </FormWrapper>\n    </>\n}\n","import { useQuery } from \"react-query\"\nimport { toInvoice } from \"../util\";\nimport { BASE_URL } from '../consts/network';\nimport { InvoiceCalc } from \"../models/InvoiceCalc\";\n\nexport const useGetInvoice = (uuid: string) => {\n    return useQuery(['invoices', uuid], async () => {\n        const res = await fetch(`${BASE_URL}/invoices/${uuid}`)\n        \n        const invoice = await res.text()\n\n        return toInvoice(invoice)\n    })\n}\n\nexport const useGetCalc = (uuid: string) => {\n    return useQuery(['calc', uuid], async () => {\n        const res = await fetch(`${BASE_URL}/invoices/calc/${uuid}`)\n\n        const invoiceCalcJson = await res.text()\n\n        const invoiceCalc: InvoiceCalc = JSON.parse(invoiceCalcJson)\n\n        return invoiceCalc\n    })\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  useWalletConnect,\n  QRCodeModal,\n  WINDOW_MESSAGES as WINDOW_MESSAGE,\n} from \"@provenanceio/walletconnect-js\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Connect, Disconnect, Popup } from \"Components\";\nimport { LG, ROOT_NAME } from \"consts\";\nimport { REACT_APP_WCJS_VERSION } from \"./version\"; // eslint-disable-line\nimport { useWallet } from \"@provenanceio/wallet-lib\";\nimport { TEXT_ACCENT, PRIMARY_BACKGROUND, TEXT } from \"./consts/colors\";\nimport { Header, SubHeader } from \"Components/Headers\";\nimport { ConversionUtil } from \"./util/ConversionUtil\";\nimport { TabContainer } from \"Components/Tabs\";\nimport AddressLink from \"Components/AddressLink\";\nimport { BigParagraph } from \"Components/Display\";\nimport { SidebarLayout, SidebarLink } from \"./Components/Layout/Sidebar\";\nimport { ListInvoices } from \"./Components/Pages/List/ListInvoices\";\nimport { CreateInvoice } from \"./Components/Pages/Create/CreateInvoice\";\nimport { InvoiceDetails } from \"Components/Pages/Details\";\n\nconst Wrapper = styled.div`\n  background: ${PRIMARY_BACKGROUND};\n`;\nconst HomeContainer = styled.div`\n  max-width: 100%;\n  min-height: 100vh;\n  position: relative;\n`;\nconst Content = styled.div`\n  min-width: 600px;\n  padding: 30px 50px;\n  border-radius: 4px;\n  margin-bottom: 40px;\n`;\nconst WalletConnectVersion = styled.div`\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n\n  @media (max-width: ${LG}px) {\n    left: 20px;\n    color: ${TEXT};\n  }\n`;\n\nconst Logo = styled(Header)`\n  @media (max-width: ${LG}px) {\n    margin: 0 0 20px 0;\n  }\n`;\n\nexport const App = () => {\n  const [popupContent, setPopupContent] = useState(\"\");\n  const [popupStatus, setPopupStatus] = useState(\"success\");\n  const [popupDuration, setPopupDuration] = useState(2500);\n  const [hashAmount, setHashAmount] = useState(null);\n  const [listenersAdded, setListenersAdded] = useState(false);\n\n  const { walletConnectService: wcs, walletConnectState } = useWalletConnect();\n  const { address, connected, peer } = walletConnectState;\n\n  const setPopup = (message, status, duration) => {\n    setPopupContent(message);\n    if (status) {\n      setPopupStatus(status);\n    }\n    if (duration) {\n      setPopupDuration(duration);\n    }\n  };\n\n  const { grpcService } = useWallet();\n\n  const fetchBalance = () => {\n    if (address) {\n      grpcService.getBalancesList(address).then((balances) => {\n        let hashAmount = ConversionUtil.getHashBalance(balances);\n        if (hashAmount) {\n          setHashAmount(hashAmount);\n        }\n      });\n    } else {\n      setHashAmount(null);\n    }\n  };\n  useEffect(() => {\n    fetchBalance();\n  }, [address]);\n\n  useEffect(() => {\n    setListenersAdded(true);\n    wcs.addListener(WINDOW_MESSAGE.CUSTOM_ACTION_COMPLETE, (result) => {\n      console.log(\n        `WalletConnectJS | Custom Action Complete | Result: `,\n        result\n      );\n    });\n\n    wcs.addListener(WINDOW_MESSAGE.CUSTOM_ACTION_FAILED, (result) => {\n      const { error } = result;\n      console.log(\n        `WalletConnectJS | Custom Action Failed | result, error: `,\n        result,\n        error\n      );\n    });\n  }, []);\n\n  return (\n    <Wrapper>\n      <HomeContainer>\n        <Router basename=\"fe-invoice\">\n          {popupContent && (\n            <Popup\n              delay={popupDuration}\n              onClose={() => setPopupContent(\"\")}\n              status={popupStatus}\n            >\n              {popupContent}\n            </Popup>\n          )}\n          <SidebarLayout\n            sidebarContent={\n              <>\n                <Logo>InVoice</Logo>\n                {connected ? (\n                  <>\n                    <SidebarLink to=\"/\">My Invoices</SidebarLink>\n                    <SidebarLink to=\"/create\">Create Invoice</SidebarLink>\n                    <Disconnect\n                      walletConnectService={wcs}\n                      setPopup={setPopup}\n                    />\n                  </>\n                ) : (\n                  <Connect walletConnectService={wcs} setPopup={setPopup} />\n                )}\n                <WalletConnectVersion>\n                  WalletConnect-JS Version:{\" \"}\n                  {REACT_APP_WCJS_VERSION || \"??.??.??\"}\n                </WalletConnectVersion>\n              </>\n            }\n          >\n            {connected && (\n              <Routes>\n                <Route path=\"/\" element={<ListInvoices />} />\n                <Route path=\"/create\" element={<CreateInvoice />} />\n                <Route path=\"/:uuid\" element={<InvoiceDetails />} />\n                <Route path=\"*\" element={<ListInvoices />} />\n              </Routes>\n            )}\n          </SidebarLayout>\n          <QRCodeModal\n            walletConnectService={wcs}\n            walletConnectState={walletConnectState}\n            title=\"Scan to initiate walletConnect-js session\"\n          />\n        </Router>\n      </HomeContainer>\n    </Wrapper>\n  );\n};\n","export const REACT_APP_WCJS_VERSION = \"0.2.2\"\n","import ReactDOM from \"react-dom\";\nimport { WalletConnectContextProvider } from \"@provenanceio/walletconnect-js\";\nimport { WalletContextProvider } from \"@provenanceio/wallet-lib\";\nimport { StrictMode } from \"react\";\nimport { App } from \"./App\";\n// Bring in Google Fonts and base styles\nimport \"./base.css\";\nimport { GRPC_URL, NETWORK, WALLET_URL } from \"./consts/network\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <StrictMode>\n    <WalletConnectContextProvider network={NETWORK}>\n      <WalletContextProvider\n        grpcServiceAddress={GRPC_URL}\n        walletUrl={WALLET_URL}\n      >\n        <QueryClientProvider client={queryClient}>\n          <App />\n        </QueryClientProvider>\n      </WalletContextProvider>\n    </WalletConnectContextProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const NETWORK = process.env.REACT_APP_NETWORK\nexport const PRODUCTION = NETWORK == 'mainnet'\nexport const EXPLORER_URL = PRODUCTION ? 'https://explorer.provenance.io' : 'https://explorer.test.provenance.io'\nexport const GRPC_URL = PRODUCTION ? 'https://wallet.provenance.io/proxy' : 'https://wallet.test.provenance.io/proxy'\n// export const GRPC_URL = 'http://localhost:8080'\nexport const WALLET_URL = PRODUCTION ? 'https://wallet.provenance.io' : 'https://wallet.test.provenance.io'\nexport const ROOT_NAME = 'wallettest3.pb'\nexport const FEE_DENOM = 'nhash'\n\n// export const BASE_URL = 'http://localhost:13459/v1'\nexport const BASE_URL = 'https://test.figure.tech/service-invoice/v1'\nexport const ROOT_PAYABLE_NAME = 'payablestest18.pb'\n","export const PRIMARY_BACKGROUND = '#F2EEE3'\nexport const DARK_BACKGROUND = '#2D2D2A';\nexport const LIGHT_TEXT = '#E5DCC5'\nexport const TEXT = '#000'\nexport const TEXT_ACCENT = '#5184A4'\nexport const LIGHT = '#FFF'\nexport const DARKEN = '#EDEBE9'\nexport const DARK = '#655C53'\nexport const WARN = '#E53B10'\nexport const ACTION = '#42368E';\nexport const PAYMENT_BLUE = '#566BF5';\n","import styled from 'styled-components';\nimport { Colors } from 'consts';\nimport { FunctionComponent } from 'react';\n\nexport const Header = styled.h1`\n  font-size: 3rem;\n  line-height: 3rem;\n  font-weight: bold;\n  letter-spacing: 0.25rem;\n  margin-bottom: 40px;\n  transition: 6s all;\n`;\nexport const SubHeader = styled.h2`\n  font-size: 2rem;\n  line-height: 2rem;\n  font-weight: bold;\n`;\n\nexport const H3 = styled.h3`\n  font-size: 1.5rem;\n  line-height: 2rem;\n`\n\nexport interface TitleHeaderProps {\n  title: string\n}\n\nconst Title = styled(H3)`\n  color: ${Colors.DARK};\n  margin: 0;\n`\n\nconst Value = styled(Header)`\n  margin-top: 10px;\n  margin-bottom: 0;\n`\n\nexport const TitleHeader: FunctionComponent<TitleHeaderProps> = ({ title, children }) => <div>\n  <Title>{title}</Title>\n  <Value>{children}</Value>\n</div>","export const INVOICE_DATE_FORMAT = 'yyyy-MM-dd'\nexport const DISPLAY_DATE_FORMAT = 'MMMM d, yyyy'","export const XS = 575;\nexport const SM = 576;\nexport const MD = 768;\nexport const LG = 992;\nexport const XL = 1200;","import { ContractMsg } from \"./ContractBase\"\n\nexport class QueryInvoiceSettings {\n    query_state: {} = {}\n}\n\nexport interface QueryInvoiceSettingsResponse {\n    // Name of the contract that is tagged on various things\n    contract_name: string,\n    // Cost to onboard each payable\n    onboarding_cost: string, // todo: validate type\n    // Coin type for onboarding charge\n    onboarding_denom: string,\n    // The address that will collect onboarding fees\n    fee_collection_address: string,\n    // Percentage of each transaction that is taken as fee\n    fee_percent: string, // i.e. '0.5'\n    // Address of the oracle application that can withdraw excess fees after fee percent is removed from onboarding_cost\n    oracle_address: string,\n}\n\nexport class QueryPayableState {\n    query_payable: {\n        payable_uuid: string,\n    } = {\n        payable_uuid: ''\n    }\n\n    setPayableUuid(payable_uuid: string): QueryPayableState {\n        this.query_payable.payable_uuid = payable_uuid\n        return this\n    }\n}\n\nexport interface QueryPayableStateResponse {\n    payable_uuid: string,\n    // The address of the scope created during onboarding of a payable\n    scope_id: string,\n    // The denomination the payable accepts for payment\n    payable_denom: string,\n    // The amount of payable_denom that the payable was originally created to reflect\n    payable_total_owed: string,\n    // The amount of payable_denom left unpaid on the payable\n    payable_remaining_owed: string,\n    // Whether or not the oracle has reviewed the structure of the payable and determine if it is\n    // a valid payable\n    oracle_approved: boolean,\n}\n\nexport class RegisterPayable extends ContractMsg {\n    register_payable: {\n        payable_type: string,\n        payable_uuid: string,\n        scope_id: string,\n        payable_denom: string,\n        payable_total: string,\n    } = {\n        payable_type: '',\n        payable_uuid: '',\n        scope_id: '',\n        payable_denom: '',\n        payable_total: '',\n    }\n\n    setPayableType(payable_type: string): RegisterPayable {\n        this.register_payable.payable_type = payable_type\n        return this\n    }\n\n    setPayableUuid(payable_uuid: string): RegisterPayable {\n        this.register_payable.payable_uuid = payable_uuid\n        return this\n    }\n\n    setScopeId(scope_id: string): RegisterPayable {\n        this.register_payable.scope_id = scope_id\n        return this\n    }\n\n    setPayableDenom(payable_denom: string): RegisterPayable {\n        this.register_payable.payable_denom = payable_denom\n        return this\n    }\n\n    setPayableTotal(payable_total: string): RegisterPayable {\n        this.register_payable.payable_total = payable_total\n        return this\n    }\n}\nexport class MakePayment extends ContractMsg {\n    make_payment: {\n        payable_uuid: string,\n    } = {\n        payable_uuid: '',\n    }\n\n    setPayableUuid(payable_uuid: string): MakePayment {\n        this.make_payment.payable_uuid = payable_uuid\n        return this\n    }\n}\n","export * from './WasmService'\nexport * from './InvoiceContractService'","export class ContractMsg {\n    toJson(): string {\n        return JSON.stringify(this)\n    }\n}","import { Colors } from \"consts\"\nimport { FunctionComponent } from \"react\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n    position: fixed;\n\n    background: rgba(0, 0, 0, .7);\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1000;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    pre {\n        overflow-x: scroll;\n    }\n`\n\nconst Body = styled.div`\n    background: ${Colors.LIGHT};\n    border-radius: 4px;\n    padding: 30px;\n    word-break: break-word;\n    min-width: 300px;\n    max-width: 90vw;\n    max-height: 80vh;\n    overflow-y: scroll;\n    position: relative;\n`\n\nconst Close = styled.button`\n    border: none;\n    background: transparent;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    width: 2em;\n    height: 2em;\n    text-align: center;\n    cursor: pointer;\n    border-radius: 50%;\n    &:hover {\n        background: rgba(0, 0, 0, .1);\n    }\n`\n\nexport interface ModalProps {\n    requestClose?: () => any\n}\n\nexport const Modal: FunctionComponent<ModalProps> = ({ children, requestClose }) => {\n    return <Wrapper onClick={() => requestClose && requestClose()}>\n        <Body onClick={e => e.stopPropagation()}>\n            {requestClose && <Close onClick={requestClose}>X</Close>}\n            {children}\n        </Body>\n    </Wrapper>\n}"],"sourceRoot":""}